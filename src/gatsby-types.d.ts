/* eslint-disable */

/* THIS FILE IS AUTOGENERATED. CHANGES WILL BE LOST ON SUBSEQUENT RUNS. */

declare namespace Queries {
  type Maybe<T> = T | null
  type InputMaybe<T> = T | null
  type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }
  type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
    [SubKey in K]?: Maybe<T[SubKey]>
  }
  type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
    [SubKey in K]: Maybe<T[SubKey]>
  }
  /** All built-in and custom scalars, mapped to their actual values */
  type Scalars = {
    /** The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID. */
    ID: string
    /** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */
    String: string
    /** The `Boolean` scalar type represents `true` or `false`. */
    Boolean: boolean
    /** The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. */
    Int: number
    /** The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). */
    Float: number
    /** A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */
    Date: string
    /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
    JSON: Record<string, unknown>
  }

  type AVIFOptions = {
    readonly lossless: InputMaybe<Scalars["Boolean"]>
    readonly quality: InputMaybe<Scalars["Int"]>
    readonly speed: InputMaybe<Scalars["Int"]>
  }

  type AlltimeJson = Node & {
    readonly children: ReadonlyArray<Node>
    readonly currency: Maybe<Scalars["String"]>
    readonly data: Maybe<ReadonlyArray<Maybe<AlltimeJsonData>>>
    readonly dateRange: Maybe<AlltimeJsonDateRange>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly mode: Maybe<Scalars["String"]>
    readonly name: Maybe<Scalars["String"]>
    readonly parent: Maybe<Node>
    readonly totalCosts: Maybe<Scalars["Int"]>
    readonly totalPreTranslated: Maybe<Scalars["Int"]>
    readonly totalTMSavings: Maybe<Scalars["Int"]>
    readonly unit: Maybe<Scalars["String"]>
    readonly url: Maybe<Scalars["String"]>
  }

  type AlltimeJsonConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<AlltimeJsonEdge>
    readonly group: ReadonlyArray<AlltimeJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<AlltimeJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type AlltimeJsonConnection_distinctArgs = {
    field: AlltimeJsonFieldsEnum
  }

  type AlltimeJsonConnection_groupArgs = {
    field: AlltimeJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type AlltimeJsonConnection_maxArgs = {
    field: AlltimeJsonFieldsEnum
  }

  type AlltimeJsonConnection_minArgs = {
    field: AlltimeJsonFieldsEnum
  }

  type AlltimeJsonConnection_sumArgs = {
    field: AlltimeJsonFieldsEnum
  }

  type AlltimeJsonData = {
    readonly languages: Maybe<ReadonlyArray<Maybe<AlltimeJsonDataLanguages>>>
    readonly user: Maybe<AlltimeJsonDataUser>
  }

  type AlltimeJsonDataFilterInput = {
    readonly languages: InputMaybe<AlltimeJsonDataLanguagesFilterListInput>
    readonly user: InputMaybe<AlltimeJsonDataUserFilterInput>
  }

  type AlltimeJsonDataFilterListInput = {
    readonly elemMatch: InputMaybe<AlltimeJsonDataFilterInput>
  }

  type AlltimeJsonDataLanguages = {
    readonly approvalCosts: Maybe<AlltimeJsonDataLanguagesApprovalCosts>
    readonly approved: Maybe<AlltimeJsonDataLanguagesApproved>
    readonly language: Maybe<AlltimeJsonDataLanguagesLanguage>
    readonly targetTranslated: Maybe<AlltimeJsonDataLanguagesTargetTranslated>
    readonly translated: Maybe<AlltimeJsonDataLanguagesTranslated>
    readonly translatedByMt: Maybe<AlltimeJsonDataLanguagesTranslatedByMt>
    readonly translationCosts: Maybe<AlltimeJsonDataLanguagesTranslationCosts>
  }

  type AlltimeJsonDataLanguagesApprovalCosts = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type AlltimeJsonDataLanguagesApprovalCostsFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type AlltimeJsonDataLanguagesApproved = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type AlltimeJsonDataLanguagesApprovedFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type AlltimeJsonDataLanguagesFilterInput = {
    readonly approvalCosts: InputMaybe<AlltimeJsonDataLanguagesApprovalCostsFilterInput>
    readonly approved: InputMaybe<AlltimeJsonDataLanguagesApprovedFilterInput>
    readonly language: InputMaybe<AlltimeJsonDataLanguagesLanguageFilterInput>
    readonly targetTranslated: InputMaybe<AlltimeJsonDataLanguagesTargetTranslatedFilterInput>
    readonly translated: InputMaybe<AlltimeJsonDataLanguagesTranslatedFilterInput>
    readonly translatedByMt: InputMaybe<AlltimeJsonDataLanguagesTranslatedByMtFilterInput>
    readonly translationCosts: InputMaybe<AlltimeJsonDataLanguagesTranslationCostsFilterInput>
  }

  type AlltimeJsonDataLanguagesFilterListInput = {
    readonly elemMatch: InputMaybe<AlltimeJsonDataLanguagesFilterInput>
  }

  type AlltimeJsonDataLanguagesLanguage = {
    readonly id: Maybe<Scalars["String"]>
    readonly name: Maybe<Scalars["String"]>
    readonly preTranslate: Maybe<Scalars["Int"]>
    readonly tmSavings: Maybe<Scalars["Int"]>
    readonly totalCosts: Maybe<Scalars["Int"]>
  }

  type AlltimeJsonDataLanguagesLanguageFilterInput = {
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly preTranslate: InputMaybe<IntQueryOperatorInput>
    readonly tmSavings: InputMaybe<IntQueryOperatorInput>
    readonly totalCosts: InputMaybe<IntQueryOperatorInput>
  }

  type AlltimeJsonDataLanguagesTargetTranslated = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type AlltimeJsonDataLanguagesTargetTranslatedFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type AlltimeJsonDataLanguagesTranslated = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type AlltimeJsonDataLanguagesTranslatedByMt = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type AlltimeJsonDataLanguagesTranslatedByMtFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type AlltimeJsonDataLanguagesTranslatedFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type AlltimeJsonDataLanguagesTranslationCosts = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type AlltimeJsonDataLanguagesTranslationCostsFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type AlltimeJsonDataUser = {
    readonly avatarUrl: Maybe<Scalars["String"]>
    readonly fullName: Maybe<Scalars["String"]>
    readonly id: Maybe<Scalars["Int"]>
    readonly preTranslated: Maybe<Scalars["Int"]>
    readonly totalCosts: Maybe<Scalars["Int"]>
    readonly userRole: Maybe<Scalars["String"]>
    readonly username: Maybe<Scalars["String"]>
  }

  type AlltimeJsonDataUserFilterInput = {
    readonly avatarUrl: InputMaybe<StringQueryOperatorInput>
    readonly fullName: InputMaybe<StringQueryOperatorInput>
    readonly id: InputMaybe<IntQueryOperatorInput>
    readonly preTranslated: InputMaybe<IntQueryOperatorInput>
    readonly totalCosts: InputMaybe<IntQueryOperatorInput>
    readonly userRole: InputMaybe<StringQueryOperatorInput>
    readonly username: InputMaybe<StringQueryOperatorInput>
  }

  type AlltimeJsonDateRange = {
    readonly from: Maybe<Scalars["Date"]>
    readonly to: Maybe<Scalars["Date"]>
  }

  type AlltimeJsonDateRange_fromArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type AlltimeJsonDateRange_toArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type AlltimeJsonDateRangeFilterInput = {
    readonly from: InputMaybe<DateQueryOperatorInput>
    readonly to: InputMaybe<DateQueryOperatorInput>
  }

  type AlltimeJsonEdge = {
    readonly next: Maybe<AlltimeJson>
    readonly node: AlltimeJson
    readonly previous: Maybe<AlltimeJson>
  }

  type AlltimeJsonFieldsEnum =
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "currency"
    | "data"
    | "data.languages"
    | "data.languages.approvalCosts.default"
    | "data.languages.approvalCosts.tmMatch"
    | "data.languages.approvalCosts.total"
    | "data.languages.approved.default"
    | "data.languages.approved.tmMatch"
    | "data.languages.approved.total"
    | "data.languages.language.id"
    | "data.languages.language.name"
    | "data.languages.language.preTranslate"
    | "data.languages.language.tmSavings"
    | "data.languages.language.totalCosts"
    | "data.languages.targetTranslated.default"
    | "data.languages.targetTranslated.tmMatch"
    | "data.languages.targetTranslated.total"
    | "data.languages.translatedByMt.default"
    | "data.languages.translatedByMt.tmMatch"
    | "data.languages.translatedByMt.total"
    | "data.languages.translated.default"
    | "data.languages.translated.tmMatch"
    | "data.languages.translated.total"
    | "data.languages.translationCosts.default"
    | "data.languages.translationCosts.tmMatch"
    | "data.languages.translationCosts.total"
    | "data.user.avatarUrl"
    | "data.user.fullName"
    | "data.user.id"
    | "data.user.preTranslated"
    | "data.user.totalCosts"
    | "data.user.userRole"
    | "data.user.username"
    | "dateRange.from"
    | "dateRange.to"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "mode"
    | "name"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "totalCosts"
    | "totalPreTranslated"
    | "totalTMSavings"
    | "unit"
    | "url"

  type AlltimeJsonFilterInput = {
    readonly children: InputMaybe<NodeFilterListInput>
    readonly currency: InputMaybe<StringQueryOperatorInput>
    readonly data: InputMaybe<AlltimeJsonDataFilterListInput>
    readonly dateRange: InputMaybe<AlltimeJsonDateRangeFilterInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly mode: InputMaybe<StringQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly totalCosts: InputMaybe<IntQueryOperatorInput>
    readonly totalPreTranslated: InputMaybe<IntQueryOperatorInput>
    readonly totalTMSavings: InputMaybe<IntQueryOperatorInput>
    readonly unit: InputMaybe<StringQueryOperatorInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type AlltimeJsonFilterListInput = {
    readonly elemMatch: InputMaybe<AlltimeJsonFilterInput>
  }

  type AlltimeJsonGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<AlltimeJsonEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<AlltimeJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<AlltimeJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type AlltimeJsonGroupConnection_distinctArgs = {
    field: AlltimeJsonFieldsEnum
  }

  type AlltimeJsonGroupConnection_groupArgs = {
    field: AlltimeJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type AlltimeJsonGroupConnection_maxArgs = {
    field: AlltimeJsonFieldsEnum
  }

  type AlltimeJsonGroupConnection_minArgs = {
    field: AlltimeJsonFieldsEnum
  }

  type AlltimeJsonGroupConnection_sumArgs = {
    field: AlltimeJsonFieldsEnum
  }

  type AlltimeJsonSortInput = {
    readonly fields: InputMaybe<
      ReadonlyArray<InputMaybe<AlltimeJsonFieldsEnum>>
    >
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type BlurredOptions = {
    /** Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this */
    readonly toFormat: InputMaybe<ImageFormat>
    /** Width of the generated low-res preview. Default is 20px */
    readonly width: InputMaybe<Scalars["Int"]>
  }

  type BooleanQueryOperatorInput = {
    readonly eq: InputMaybe<Scalars["Boolean"]>
    readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars["Boolean"]>>>
    readonly ne: InputMaybe<Scalars["Boolean"]>
    readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars["Boolean"]>>>
  }

  type CexLayer2SupportJson = Node & {
    readonly children: ReadonlyArray<Node>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly name: Maybe<Scalars["String"]>
    readonly parent: Maybe<Node>
    readonly supports_deposits: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly supports_withdrawals: Maybe<
      ReadonlyArray<Maybe<Scalars["String"]>>
    >
    readonly url: Maybe<Scalars["String"]>
  }

  type CexLayer2SupportJsonConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<CexLayer2SupportJsonEdge>
    readonly group: ReadonlyArray<CexLayer2SupportJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<CexLayer2SupportJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type CexLayer2SupportJsonConnection_distinctArgs = {
    field: CexLayer2SupportJsonFieldsEnum
  }

  type CexLayer2SupportJsonConnection_groupArgs = {
    field: CexLayer2SupportJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type CexLayer2SupportJsonConnection_maxArgs = {
    field: CexLayer2SupportJsonFieldsEnum
  }

  type CexLayer2SupportJsonConnection_minArgs = {
    field: CexLayer2SupportJsonFieldsEnum
  }

  type CexLayer2SupportJsonConnection_sumArgs = {
    field: CexLayer2SupportJsonFieldsEnum
  }

  type CexLayer2SupportJsonEdge = {
    readonly next: Maybe<CexLayer2SupportJson>
    readonly node: CexLayer2SupportJson
    readonly previous: Maybe<CexLayer2SupportJson>
  }

  type CexLayer2SupportJsonFieldsEnum =
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "name"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "supports_deposits"
    | "supports_withdrawals"
    | "url"

  type CexLayer2SupportJsonFilterInput = {
    readonly children: InputMaybe<NodeFilterListInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly supports_deposits: InputMaybe<StringQueryOperatorInput>
    readonly supports_withdrawals: InputMaybe<StringQueryOperatorInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type CexLayer2SupportJsonFilterListInput = {
    readonly elemMatch: InputMaybe<CexLayer2SupportJsonFilterInput>
  }

  type CexLayer2SupportJsonGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<CexLayer2SupportJsonEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<CexLayer2SupportJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<CexLayer2SupportJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type CexLayer2SupportJsonGroupConnection_distinctArgs = {
    field: CexLayer2SupportJsonFieldsEnum
  }

  type CexLayer2SupportJsonGroupConnection_groupArgs = {
    field: CexLayer2SupportJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type CexLayer2SupportJsonGroupConnection_maxArgs = {
    field: CexLayer2SupportJsonFieldsEnum
  }

  type CexLayer2SupportJsonGroupConnection_minArgs = {
    field: CexLayer2SupportJsonFieldsEnum
  }

  type CexLayer2SupportJsonGroupConnection_sumArgs = {
    field: CexLayer2SupportJsonFieldsEnum
  }

  type CexLayer2SupportJsonSortInput = {
    readonly fields: InputMaybe<
      ReadonlyArray<InputMaybe<CexLayer2SupportJsonFieldsEnum>>
    >
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type CommunityEventsJson = Node & {
    readonly children: ReadonlyArray<Node>
    readonly description: Maybe<Scalars["String"]>
    readonly endDate: Maybe<Scalars["Date"]>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly location: Maybe<Scalars["String"]>
    readonly parent: Maybe<Node>
    readonly sponsor: Maybe<Scalars["String"]>
    readonly startDate: Maybe<Scalars["Date"]>
    readonly title: Maybe<Scalars["String"]>
    readonly to: Maybe<Scalars["String"]>
  }

  type CommunityEventsJson_endDateArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type CommunityEventsJson_startDateArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type CommunityEventsJsonConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<CommunityEventsJsonEdge>
    readonly group: ReadonlyArray<CommunityEventsJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<CommunityEventsJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type CommunityEventsJsonConnection_distinctArgs = {
    field: CommunityEventsJsonFieldsEnum
  }

  type CommunityEventsJsonConnection_groupArgs = {
    field: CommunityEventsJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type CommunityEventsJsonConnection_maxArgs = {
    field: CommunityEventsJsonFieldsEnum
  }

  type CommunityEventsJsonConnection_minArgs = {
    field: CommunityEventsJsonFieldsEnum
  }

  type CommunityEventsJsonConnection_sumArgs = {
    field: CommunityEventsJsonFieldsEnum
  }

  type CommunityEventsJsonEdge = {
    readonly next: Maybe<CommunityEventsJson>
    readonly node: CommunityEventsJson
    readonly previous: Maybe<CommunityEventsJson>
  }

  type CommunityEventsJsonFieldsEnum =
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "description"
    | "endDate"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "location"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "sponsor"
    | "startDate"
    | "title"
    | "to"

  type CommunityEventsJsonFilterInput = {
    readonly children: InputMaybe<NodeFilterListInput>
    readonly description: InputMaybe<StringQueryOperatorInput>
    readonly endDate: InputMaybe<DateQueryOperatorInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly location: InputMaybe<StringQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly sponsor: InputMaybe<StringQueryOperatorInput>
    readonly startDate: InputMaybe<DateQueryOperatorInput>
    readonly title: InputMaybe<StringQueryOperatorInput>
    readonly to: InputMaybe<StringQueryOperatorInput>
  }

  type CommunityEventsJsonFilterListInput = {
    readonly elemMatch: InputMaybe<CommunityEventsJsonFilterInput>
  }

  type CommunityEventsJsonGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<CommunityEventsJsonEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<CommunityEventsJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<CommunityEventsJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type CommunityEventsJsonGroupConnection_distinctArgs = {
    field: CommunityEventsJsonFieldsEnum
  }

  type CommunityEventsJsonGroupConnection_groupArgs = {
    field: CommunityEventsJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type CommunityEventsJsonGroupConnection_maxArgs = {
    field: CommunityEventsJsonFieldsEnum
  }

  type CommunityEventsJsonGroupConnection_minArgs = {
    field: CommunityEventsJsonFieldsEnum
  }

  type CommunityEventsJsonGroupConnection_sumArgs = {
    field: CommunityEventsJsonFieldsEnum
  }

  type CommunityEventsJsonSortInput = {
    readonly fields: InputMaybe<
      ReadonlyArray<InputMaybe<CommunityEventsJsonFieldsEnum>>
    >
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type CommunityMeetupsJson = Node & {
    readonly children: ReadonlyArray<Node>
    readonly emoji: Maybe<Scalars["String"]>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly link: Maybe<Scalars["String"]>
    readonly location: Maybe<Scalars["String"]>
    readonly parent: Maybe<Node>
    readonly title: Maybe<Scalars["String"]>
  }

  type CommunityMeetupsJsonConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<CommunityMeetupsJsonEdge>
    readonly group: ReadonlyArray<CommunityMeetupsJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<CommunityMeetupsJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type CommunityMeetupsJsonConnection_distinctArgs = {
    field: CommunityMeetupsJsonFieldsEnum
  }

  type CommunityMeetupsJsonConnection_groupArgs = {
    field: CommunityMeetupsJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type CommunityMeetupsJsonConnection_maxArgs = {
    field: CommunityMeetupsJsonFieldsEnum
  }

  type CommunityMeetupsJsonConnection_minArgs = {
    field: CommunityMeetupsJsonFieldsEnum
  }

  type CommunityMeetupsJsonConnection_sumArgs = {
    field: CommunityMeetupsJsonFieldsEnum
  }

  type CommunityMeetupsJsonEdge = {
    readonly next: Maybe<CommunityMeetupsJson>
    readonly node: CommunityMeetupsJson
    readonly previous: Maybe<CommunityMeetupsJson>
  }

  type CommunityMeetupsJsonFieldsEnum =
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "emoji"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "link"
    | "location"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "title"

  type CommunityMeetupsJsonFilterInput = {
    readonly children: InputMaybe<NodeFilterListInput>
    readonly emoji: InputMaybe<StringQueryOperatorInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly link: InputMaybe<StringQueryOperatorInput>
    readonly location: InputMaybe<StringQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly title: InputMaybe<StringQueryOperatorInput>
  }

  type CommunityMeetupsJsonFilterListInput = {
    readonly elemMatch: InputMaybe<CommunityMeetupsJsonFilterInput>
  }

  type CommunityMeetupsJsonGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<CommunityMeetupsJsonEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<CommunityMeetupsJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<CommunityMeetupsJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type CommunityMeetupsJsonGroupConnection_distinctArgs = {
    field: CommunityMeetupsJsonFieldsEnum
  }

  type CommunityMeetupsJsonGroupConnection_groupArgs = {
    field: CommunityMeetupsJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type CommunityMeetupsJsonGroupConnection_maxArgs = {
    field: CommunityMeetupsJsonFieldsEnum
  }

  type CommunityMeetupsJsonGroupConnection_minArgs = {
    field: CommunityMeetupsJsonFieldsEnum
  }

  type CommunityMeetupsJsonGroupConnection_sumArgs = {
    field: CommunityMeetupsJsonFieldsEnum
  }

  type CommunityMeetupsJsonSortInput = {
    readonly fields: InputMaybe<
      ReadonlyArray<InputMaybe<CommunityMeetupsJsonFieldsEnum>>
    >
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type ConsensusBountyHuntersCsv = Node & {
    readonly children: ReadonlyArray<Node>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly name: Maybe<Scalars["String"]>
    readonly parent: Maybe<Node>
    readonly score: Maybe<Scalars["Int"]>
    readonly username: Maybe<Scalars["String"]>
  }

  type ConsensusBountyHuntersCsvConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<ConsensusBountyHuntersCsvEdge>
    readonly group: ReadonlyArray<ConsensusBountyHuntersCsvGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<ConsensusBountyHuntersCsv>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type ConsensusBountyHuntersCsvConnection_distinctArgs = {
    field: ConsensusBountyHuntersCsvFieldsEnum
  }

  type ConsensusBountyHuntersCsvConnection_groupArgs = {
    field: ConsensusBountyHuntersCsvFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type ConsensusBountyHuntersCsvConnection_maxArgs = {
    field: ConsensusBountyHuntersCsvFieldsEnum
  }

  type ConsensusBountyHuntersCsvConnection_minArgs = {
    field: ConsensusBountyHuntersCsvFieldsEnum
  }

  type ConsensusBountyHuntersCsvConnection_sumArgs = {
    field: ConsensusBountyHuntersCsvFieldsEnum
  }

  type ConsensusBountyHuntersCsvEdge = {
    readonly next: Maybe<ConsensusBountyHuntersCsv>
    readonly node: ConsensusBountyHuntersCsv
    readonly previous: Maybe<ConsensusBountyHuntersCsv>
  }

  type ConsensusBountyHuntersCsvFieldsEnum =
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "name"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "score"
    | "username"

  type ConsensusBountyHuntersCsvFilterInput = {
    readonly children: InputMaybe<NodeFilterListInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly score: InputMaybe<IntQueryOperatorInput>
    readonly username: InputMaybe<StringQueryOperatorInput>
  }

  type ConsensusBountyHuntersCsvFilterListInput = {
    readonly elemMatch: InputMaybe<ConsensusBountyHuntersCsvFilterInput>
  }

  type ConsensusBountyHuntersCsvGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<ConsensusBountyHuntersCsvEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<ConsensusBountyHuntersCsvGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<ConsensusBountyHuntersCsv>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type ConsensusBountyHuntersCsvGroupConnection_distinctArgs = {
    field: ConsensusBountyHuntersCsvFieldsEnum
  }

  type ConsensusBountyHuntersCsvGroupConnection_groupArgs = {
    field: ConsensusBountyHuntersCsvFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type ConsensusBountyHuntersCsvGroupConnection_maxArgs = {
    field: ConsensusBountyHuntersCsvFieldsEnum
  }

  type ConsensusBountyHuntersCsvGroupConnection_minArgs = {
    field: ConsensusBountyHuntersCsvFieldsEnum
  }

  type ConsensusBountyHuntersCsvGroupConnection_sumArgs = {
    field: ConsensusBountyHuntersCsvFieldsEnum
  }

  type ConsensusBountyHuntersCsvSortInput = {
    readonly fields: InputMaybe<
      ReadonlyArray<InputMaybe<ConsensusBountyHuntersCsvFieldsEnum>>
    >
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type DataJson = Node & {
    readonly children: ReadonlyArray<Node>
    readonly commit: Maybe<Scalars["Boolean"]>
    readonly contributors: Maybe<ReadonlyArray<Maybe<DataJsonContributors>>>
    readonly contributorsPerLine: Maybe<Scalars["Int"]>
    readonly files: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly id: Scalars["ID"]
    readonly imageSize: Maybe<Scalars["Int"]>
    readonly internal: Internal
    readonly keyGen: Maybe<ReadonlyArray<Maybe<DataJsonKeyGen>>>
    readonly nodeTools: Maybe<ReadonlyArray<Maybe<DataJsonNodeTools>>>
    readonly parent: Maybe<Node>
    readonly pools: Maybe<ReadonlyArray<Maybe<DataJsonPools>>>
    readonly projectName: Maybe<Scalars["String"]>
    readonly projectOwner: Maybe<Scalars["String"]>
    readonly repoHost: Maybe<Scalars["String"]>
    readonly repoType: Maybe<Scalars["String"]>
    readonly saas: Maybe<ReadonlyArray<Maybe<DataJsonSaas>>>
    readonly skipCi: Maybe<Scalars["Boolean"]>
  }

  type DataJsonConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<DataJsonEdge>
    readonly group: ReadonlyArray<DataJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<DataJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type DataJsonConnection_distinctArgs = {
    field: DataJsonFieldsEnum
  }

  type DataJsonConnection_groupArgs = {
    field: DataJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type DataJsonConnection_maxArgs = {
    field: DataJsonFieldsEnum
  }

  type DataJsonConnection_minArgs = {
    field: DataJsonFieldsEnum
  }

  type DataJsonConnection_sumArgs = {
    field: DataJsonFieldsEnum
  }

  type DataJsonContributors = {
    readonly avatar_url: Maybe<Scalars["String"]>
    readonly contributions: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly login: Maybe<Scalars["String"]>
    readonly name: Maybe<Scalars["String"]>
    readonly profile: Maybe<Scalars["String"]>
  }

  type DataJsonContributorsFilterInput = {
    readonly avatar_url: InputMaybe<StringQueryOperatorInput>
    readonly contributions: InputMaybe<StringQueryOperatorInput>
    readonly login: InputMaybe<StringQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly profile: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonContributorsFilterListInput = {
    readonly elemMatch: InputMaybe<DataJsonContributorsFilterInput>
  }

  type DataJsonEdge = {
    readonly next: Maybe<DataJson>
    readonly node: DataJson
    readonly previous: Maybe<DataJson>
  }

  type DataJsonFieldsEnum =
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "commit"
    | "contributors"
    | "contributorsPerLine"
    | "contributors.avatar_url"
    | "contributors.contributions"
    | "contributors.login"
    | "contributors.name"
    | "contributors.profile"
    | "files"
    | "id"
    | "imageSize"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "keyGen"
    | "keyGen.audits"
    | "keyGen.audits.name"
    | "keyGen.audits.url"
    | "keyGen.hasBugBounty"
    | "keyGen.hue"
    | "keyGen.isFoss"
    | "keyGen.isPermissionless"
    | "keyGen.isSelfCustody"
    | "keyGen.isTrustless"
    | "keyGen.launchDate"
    | "keyGen.matomo.eventAction"
    | "keyGen.matomo.eventCategory"
    | "keyGen.matomo.eventName"
    | "keyGen.name"
    | "keyGen.platforms"
    | "keyGen.socials.discord"
    | "keyGen.socials.github"
    | "keyGen.socials.twitter"
    | "keyGen.svgPath"
    | "keyGen.ui"
    | "keyGen.url"
    | "nodeTools"
    | "nodeTools.additionalStake"
    | "nodeTools.additionalStakeUnit"
    | "nodeTools.audits"
    | "nodeTools.audits.name"
    | "nodeTools.audits.url"
    | "nodeTools.easyClientSwitching"
    | "nodeTools.hasBugBounty"
    | "nodeTools.hue"
    | "nodeTools.isFoss"
    | "nodeTools.isPermissionless"
    | "nodeTools.isTrustless"
    | "nodeTools.launchDate"
    | "nodeTools.matomo.eventAction"
    | "nodeTools.matomo.eventCategory"
    | "nodeTools.matomo.eventName"
    | "nodeTools.minEth"
    | "nodeTools.multiClient"
    | "nodeTools.name"
    | "nodeTools.platforms"
    | "nodeTools.socials.discord"
    | "nodeTools.socials.github"
    | "nodeTools.socials.telegram"
    | "nodeTools.socials.twitter"
    | "nodeTools.svgPath"
    | "nodeTools.tokens"
    | "nodeTools.tokens.address"
    | "nodeTools.tokens.name"
    | "nodeTools.tokens.symbol"
    | "nodeTools.ui"
    | "nodeTools.url"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "pools"
    | "pools.audits"
    | "pools.audits.date"
    | "pools.audits.name"
    | "pools.audits.url"
    | "pools.feePercentage"
    | "pools.hasBugBounty"
    | "pools.hasPermissionlessNodes"
    | "pools.hue"
    | "pools.isFoss"
    | "pools.isTrustless"
    | "pools.launchDate"
    | "pools.matomo.eventAction"
    | "pools.matomo.eventCategory"
    | "pools.matomo.eventName"
    | "pools.minEth"
    | "pools.name"
    | "pools.pctMajorityClient"
    | "pools.platforms"
    | "pools.socials.discord"
    | "pools.socials.github"
    | "pools.socials.reddit"
    | "pools.socials.telegram"
    | "pools.socials.twitter"
    | "pools.svgPath"
    | "pools.telegram"
    | "pools.tokens"
    | "pools.tokens.address"
    | "pools.tokens.name"
    | "pools.tokens.symbol"
    | "pools.twitter"
    | "pools.ui"
    | "pools.url"
    | "projectName"
    | "projectOwner"
    | "repoHost"
    | "repoType"
    | "saas"
    | "saas.additionalStake"
    | "saas.additionalStakeUnit"
    | "saas.audits"
    | "saas.audits.date"
    | "saas.audits.name"
    | "saas.audits.url"
    | "saas.hasBugBounty"
    | "saas.hue"
    | "saas.isFoss"
    | "saas.isPermissionless"
    | "saas.isSelfCustody"
    | "saas.isTrustless"
    | "saas.launchDate"
    | "saas.matomo.eventAction"
    | "saas.matomo.eventCategory"
    | "saas.matomo.eventName"
    | "saas.minEth"
    | "saas.monthlyFee"
    | "saas.monthlyFeeUnit"
    | "saas.name"
    | "saas.pctMajorityClient"
    | "saas.platforms"
    | "saas.socials.discord"
    | "saas.socials.github"
    | "saas.socials.telegram"
    | "saas.socials.twitter"
    | "saas.svgPath"
    | "saas.ui"
    | "saas.url"
    | "skipCi"

  type DataJsonFilterInput = {
    readonly children: InputMaybe<NodeFilterListInput>
    readonly commit: InputMaybe<BooleanQueryOperatorInput>
    readonly contributors: InputMaybe<DataJsonContributorsFilterListInput>
    readonly contributorsPerLine: InputMaybe<IntQueryOperatorInput>
    readonly files: InputMaybe<StringQueryOperatorInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly imageSize: InputMaybe<IntQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly keyGen: InputMaybe<DataJsonKeyGenFilterListInput>
    readonly nodeTools: InputMaybe<DataJsonNodeToolsFilterListInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly pools: InputMaybe<DataJsonPoolsFilterListInput>
    readonly projectName: InputMaybe<StringQueryOperatorInput>
    readonly projectOwner: InputMaybe<StringQueryOperatorInput>
    readonly repoHost: InputMaybe<StringQueryOperatorInput>
    readonly repoType: InputMaybe<StringQueryOperatorInput>
    readonly saas: InputMaybe<DataJsonSaasFilterListInput>
    readonly skipCi: InputMaybe<BooleanQueryOperatorInput>
  }

  type DataJsonFilterListInput = {
    readonly elemMatch: InputMaybe<DataJsonFilterInput>
  }

  type DataJsonGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<DataJsonEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<DataJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<DataJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type DataJsonGroupConnection_distinctArgs = {
    field: DataJsonFieldsEnum
  }

  type DataJsonGroupConnection_groupArgs = {
    field: DataJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type DataJsonGroupConnection_maxArgs = {
    field: DataJsonFieldsEnum
  }

  type DataJsonGroupConnection_minArgs = {
    field: DataJsonFieldsEnum
  }

  type DataJsonGroupConnection_sumArgs = {
    field: DataJsonFieldsEnum
  }

  type DataJsonKeyGen = {
    readonly audits: Maybe<ReadonlyArray<Maybe<DataJsonKeyGenAudits>>>
    readonly hasBugBounty: Maybe<Scalars["Boolean"]>
    readonly hue: Maybe<Scalars["Int"]>
    readonly isFoss: Maybe<Scalars["Boolean"]>
    readonly isPermissionless: Maybe<Scalars["Boolean"]>
    readonly isSelfCustody: Maybe<Scalars["Boolean"]>
    readonly isTrustless: Maybe<Scalars["Boolean"]>
    readonly launchDate: Maybe<Scalars["Date"]>
    readonly matomo: Maybe<DataJsonKeyGenMatomo>
    readonly name: Maybe<Scalars["String"]>
    readonly platforms: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly socials: Maybe<DataJsonKeyGenSocials>
    readonly svgPath: Maybe<Scalars["String"]>
    readonly ui: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly url: Maybe<Scalars["String"]>
  }

  type DataJsonKeyGen_launchDateArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type DataJsonKeyGenAudits = {
    readonly name: Maybe<Scalars["String"]>
    readonly url: Maybe<Scalars["String"]>
  }

  type DataJsonKeyGenAuditsFilterInput = {
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonKeyGenAuditsFilterListInput = {
    readonly elemMatch: InputMaybe<DataJsonKeyGenAuditsFilterInput>
  }

  type DataJsonKeyGenFilterInput = {
    readonly audits: InputMaybe<DataJsonKeyGenAuditsFilterListInput>
    readonly hasBugBounty: InputMaybe<BooleanQueryOperatorInput>
    readonly hue: InputMaybe<IntQueryOperatorInput>
    readonly isFoss: InputMaybe<BooleanQueryOperatorInput>
    readonly isPermissionless: InputMaybe<BooleanQueryOperatorInput>
    readonly isSelfCustody: InputMaybe<BooleanQueryOperatorInput>
    readonly isTrustless: InputMaybe<BooleanQueryOperatorInput>
    readonly launchDate: InputMaybe<DateQueryOperatorInput>
    readonly matomo: InputMaybe<DataJsonKeyGenMatomoFilterInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly platforms: InputMaybe<StringQueryOperatorInput>
    readonly socials: InputMaybe<DataJsonKeyGenSocialsFilterInput>
    readonly svgPath: InputMaybe<StringQueryOperatorInput>
    readonly ui: InputMaybe<StringQueryOperatorInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonKeyGenFilterListInput = {
    readonly elemMatch: InputMaybe<DataJsonKeyGenFilterInput>
  }

  type DataJsonKeyGenMatomo = {
    readonly eventAction: Maybe<Scalars["String"]>
    readonly eventCategory: Maybe<Scalars["String"]>
    readonly eventName: Maybe<Scalars["String"]>
  }

  type DataJsonKeyGenMatomoFilterInput = {
    readonly eventAction: InputMaybe<StringQueryOperatorInput>
    readonly eventCategory: InputMaybe<StringQueryOperatorInput>
    readonly eventName: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonKeyGenSocials = {
    readonly discord: Maybe<Scalars["String"]>
    readonly github: Maybe<Scalars["String"]>
    readonly twitter: Maybe<Scalars["String"]>
  }

  type DataJsonKeyGenSocialsFilterInput = {
    readonly discord: InputMaybe<StringQueryOperatorInput>
    readonly github: InputMaybe<StringQueryOperatorInput>
    readonly twitter: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonNodeTools = {
    readonly additionalStake: Maybe<Scalars["String"]>
    readonly additionalStakeUnit: Maybe<Scalars["String"]>
    readonly audits: Maybe<ReadonlyArray<Maybe<DataJsonNodeToolsAudits>>>
    readonly easyClientSwitching: Maybe<Scalars["Boolean"]>
    readonly hasBugBounty: Maybe<Scalars["Boolean"]>
    readonly hue: Maybe<Scalars["Int"]>
    readonly isFoss: Maybe<Scalars["Boolean"]>
    readonly isPermissionless: Maybe<Scalars["Boolean"]>
    readonly isTrustless: Maybe<Scalars["Boolean"]>
    readonly launchDate: Maybe<Scalars["Date"]>
    readonly matomo: Maybe<DataJsonNodeToolsMatomo>
    readonly minEth: Maybe<Scalars["Int"]>
    readonly multiClient: Maybe<Scalars["Boolean"]>
    readonly name: Maybe<Scalars["String"]>
    readonly platforms: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly socials: Maybe<DataJsonNodeToolsSocials>
    readonly svgPath: Maybe<Scalars["String"]>
    readonly tokens: Maybe<ReadonlyArray<Maybe<DataJsonNodeToolsTokens>>>
    readonly ui: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly url: Maybe<Scalars["String"]>
  }

  type DataJsonNodeTools_launchDateArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type DataJsonNodeToolsAudits = {
    readonly name: Maybe<Scalars["String"]>
    readonly url: Maybe<Scalars["String"]>
  }

  type DataJsonNodeToolsAuditsFilterInput = {
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonNodeToolsAuditsFilterListInput = {
    readonly elemMatch: InputMaybe<DataJsonNodeToolsAuditsFilterInput>
  }

  type DataJsonNodeToolsFilterInput = {
    readonly additionalStake: InputMaybe<StringQueryOperatorInput>
    readonly additionalStakeUnit: InputMaybe<StringQueryOperatorInput>
    readonly audits: InputMaybe<DataJsonNodeToolsAuditsFilterListInput>
    readonly easyClientSwitching: InputMaybe<BooleanQueryOperatorInput>
    readonly hasBugBounty: InputMaybe<BooleanQueryOperatorInput>
    readonly hue: InputMaybe<IntQueryOperatorInput>
    readonly isFoss: InputMaybe<BooleanQueryOperatorInput>
    readonly isPermissionless: InputMaybe<BooleanQueryOperatorInput>
    readonly isTrustless: InputMaybe<BooleanQueryOperatorInput>
    readonly launchDate: InputMaybe<DateQueryOperatorInput>
    readonly matomo: InputMaybe<DataJsonNodeToolsMatomoFilterInput>
    readonly minEth: InputMaybe<IntQueryOperatorInput>
    readonly multiClient: InputMaybe<BooleanQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly platforms: InputMaybe<StringQueryOperatorInput>
    readonly socials: InputMaybe<DataJsonNodeToolsSocialsFilterInput>
    readonly svgPath: InputMaybe<StringQueryOperatorInput>
    readonly tokens: InputMaybe<DataJsonNodeToolsTokensFilterListInput>
    readonly ui: InputMaybe<StringQueryOperatorInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonNodeToolsFilterListInput = {
    readonly elemMatch: InputMaybe<DataJsonNodeToolsFilterInput>
  }

  type DataJsonNodeToolsMatomo = {
    readonly eventAction: Maybe<Scalars["String"]>
    readonly eventCategory: Maybe<Scalars["String"]>
    readonly eventName: Maybe<Scalars["String"]>
  }

  type DataJsonNodeToolsMatomoFilterInput = {
    readonly eventAction: InputMaybe<StringQueryOperatorInput>
    readonly eventCategory: InputMaybe<StringQueryOperatorInput>
    readonly eventName: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonNodeToolsSocials = {
    readonly discord: Maybe<Scalars["String"]>
    readonly github: Maybe<Scalars["String"]>
    readonly telegram: Maybe<Scalars["String"]>
    readonly twitter: Maybe<Scalars["String"]>
  }

  type DataJsonNodeToolsSocialsFilterInput = {
    readonly discord: InputMaybe<StringQueryOperatorInput>
    readonly github: InputMaybe<StringQueryOperatorInput>
    readonly telegram: InputMaybe<StringQueryOperatorInput>
    readonly twitter: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonNodeToolsTokens = {
    readonly address: Maybe<Scalars["String"]>
    readonly name: Maybe<Scalars["String"]>
    readonly symbol: Maybe<Scalars["String"]>
  }

  type DataJsonNodeToolsTokensFilterInput = {
    readonly address: InputMaybe<StringQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly symbol: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonNodeToolsTokensFilterListInput = {
    readonly elemMatch: InputMaybe<DataJsonNodeToolsTokensFilterInput>
  }

  type DataJsonPools = {
    readonly audits: Maybe<ReadonlyArray<Maybe<DataJsonPoolsAudits>>>
    readonly feePercentage: Maybe<Scalars["Int"]>
    readonly hasBugBounty: Maybe<Scalars["Boolean"]>
    readonly hasPermissionlessNodes: Maybe<Scalars["Boolean"]>
    readonly hue: Maybe<Scalars["Int"]>
    readonly isFoss: Maybe<Scalars["Boolean"]>
    readonly isTrustless: Maybe<Scalars["Boolean"]>
    readonly launchDate: Maybe<Scalars["Date"]>
    readonly matomo: Maybe<DataJsonPoolsMatomo>
    readonly minEth: Maybe<Scalars["Float"]>
    readonly name: Maybe<Scalars["String"]>
    readonly pctMajorityClient: Maybe<Scalars["Float"]>
    readonly platforms: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly socials: Maybe<DataJsonPoolsSocials>
    readonly svgPath: Maybe<Scalars["String"]>
    readonly telegram: Maybe<Scalars["String"]>
    readonly tokens: Maybe<ReadonlyArray<Maybe<DataJsonPoolsTokens>>>
    readonly twitter: Maybe<Scalars["String"]>
    readonly ui: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly url: Maybe<Scalars["String"]>
  }

  type DataJsonPools_launchDateArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type DataJsonPoolsAudits = {
    readonly date: Maybe<Scalars["Date"]>
    readonly name: Maybe<Scalars["String"]>
    readonly url: Maybe<Scalars["String"]>
  }

  type DataJsonPoolsAudits_dateArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type DataJsonPoolsAuditsFilterInput = {
    readonly date: InputMaybe<DateQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonPoolsAuditsFilterListInput = {
    readonly elemMatch: InputMaybe<DataJsonPoolsAuditsFilterInput>
  }

  type DataJsonPoolsFilterInput = {
    readonly audits: InputMaybe<DataJsonPoolsAuditsFilterListInput>
    readonly feePercentage: InputMaybe<IntQueryOperatorInput>
    readonly hasBugBounty: InputMaybe<BooleanQueryOperatorInput>
    readonly hasPermissionlessNodes: InputMaybe<BooleanQueryOperatorInput>
    readonly hue: InputMaybe<IntQueryOperatorInput>
    readonly isFoss: InputMaybe<BooleanQueryOperatorInput>
    readonly isTrustless: InputMaybe<BooleanQueryOperatorInput>
    readonly launchDate: InputMaybe<DateQueryOperatorInput>
    readonly matomo: InputMaybe<DataJsonPoolsMatomoFilterInput>
    readonly minEth: InputMaybe<FloatQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly pctMajorityClient: InputMaybe<FloatQueryOperatorInput>
    readonly platforms: InputMaybe<StringQueryOperatorInput>
    readonly socials: InputMaybe<DataJsonPoolsSocialsFilterInput>
    readonly svgPath: InputMaybe<StringQueryOperatorInput>
    readonly telegram: InputMaybe<StringQueryOperatorInput>
    readonly tokens: InputMaybe<DataJsonPoolsTokensFilterListInput>
    readonly twitter: InputMaybe<StringQueryOperatorInput>
    readonly ui: InputMaybe<StringQueryOperatorInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonPoolsFilterListInput = {
    readonly elemMatch: InputMaybe<DataJsonPoolsFilterInput>
  }

  type DataJsonPoolsMatomo = {
    readonly eventAction: Maybe<Scalars["String"]>
    readonly eventCategory: Maybe<Scalars["String"]>
    readonly eventName: Maybe<Scalars["String"]>
  }

  type DataJsonPoolsMatomoFilterInput = {
    readonly eventAction: InputMaybe<StringQueryOperatorInput>
    readonly eventCategory: InputMaybe<StringQueryOperatorInput>
    readonly eventName: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonPoolsSocials = {
    readonly discord: Maybe<Scalars["String"]>
    readonly github: Maybe<Scalars["String"]>
    readonly reddit: Maybe<Scalars["String"]>
    readonly telegram: Maybe<Scalars["String"]>
    readonly twitter: Maybe<Scalars["String"]>
  }

  type DataJsonPoolsSocialsFilterInput = {
    readonly discord: InputMaybe<StringQueryOperatorInput>
    readonly github: InputMaybe<StringQueryOperatorInput>
    readonly reddit: InputMaybe<StringQueryOperatorInput>
    readonly telegram: InputMaybe<StringQueryOperatorInput>
    readonly twitter: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonPoolsTokens = {
    readonly address: Maybe<Scalars["String"]>
    readonly name: Maybe<Scalars["String"]>
    readonly symbol: Maybe<Scalars["String"]>
  }

  type DataJsonPoolsTokensFilterInput = {
    readonly address: InputMaybe<StringQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly symbol: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonPoolsTokensFilterListInput = {
    readonly elemMatch: InputMaybe<DataJsonPoolsTokensFilterInput>
  }

  type DataJsonSaas = {
    readonly additionalStake: Maybe<Scalars["String"]>
    readonly additionalStakeUnit: Maybe<Scalars["String"]>
    readonly audits: Maybe<ReadonlyArray<Maybe<DataJsonSaasAudits>>>
    readonly hasBugBounty: Maybe<Scalars["Boolean"]>
    readonly hue: Maybe<Scalars["Int"]>
    readonly isFoss: Maybe<Scalars["Boolean"]>
    readonly isPermissionless: Maybe<Scalars["Boolean"]>
    readonly isSelfCustody: Maybe<Scalars["Boolean"]>
    readonly isTrustless: Maybe<Scalars["Boolean"]>
    readonly launchDate: Maybe<Scalars["Date"]>
    readonly matomo: Maybe<DataJsonSaasMatomo>
    readonly minEth: Maybe<Scalars["Int"]>
    readonly monthlyFee: Maybe<Scalars["Int"]>
    readonly monthlyFeeUnit: Maybe<Scalars["String"]>
    readonly name: Maybe<Scalars["String"]>
    readonly pctMajorityClient: Maybe<Scalars["Float"]>
    readonly platforms: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly socials: Maybe<DataJsonSaasSocials>
    readonly svgPath: Maybe<Scalars["String"]>
    readonly ui: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly url: Maybe<Scalars["String"]>
  }

  type DataJsonSaas_launchDateArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type DataJsonSaasAudits = {
    readonly date: Maybe<Scalars["Date"]>
    readonly name: Maybe<Scalars["String"]>
    readonly url: Maybe<Scalars["String"]>
  }

  type DataJsonSaasAudits_dateArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type DataJsonSaasAuditsFilterInput = {
    readonly date: InputMaybe<DateQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonSaasAuditsFilterListInput = {
    readonly elemMatch: InputMaybe<DataJsonSaasAuditsFilterInput>
  }

  type DataJsonSaasFilterInput = {
    readonly additionalStake: InputMaybe<StringQueryOperatorInput>
    readonly additionalStakeUnit: InputMaybe<StringQueryOperatorInput>
    readonly audits: InputMaybe<DataJsonSaasAuditsFilterListInput>
    readonly hasBugBounty: InputMaybe<BooleanQueryOperatorInput>
    readonly hue: InputMaybe<IntQueryOperatorInput>
    readonly isFoss: InputMaybe<BooleanQueryOperatorInput>
    readonly isPermissionless: InputMaybe<BooleanQueryOperatorInput>
    readonly isSelfCustody: InputMaybe<BooleanQueryOperatorInput>
    readonly isTrustless: InputMaybe<BooleanQueryOperatorInput>
    readonly launchDate: InputMaybe<DateQueryOperatorInput>
    readonly matomo: InputMaybe<DataJsonSaasMatomoFilterInput>
    readonly minEth: InputMaybe<IntQueryOperatorInput>
    readonly monthlyFee: InputMaybe<IntQueryOperatorInput>
    readonly monthlyFeeUnit: InputMaybe<StringQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly pctMajorityClient: InputMaybe<FloatQueryOperatorInput>
    readonly platforms: InputMaybe<StringQueryOperatorInput>
    readonly socials: InputMaybe<DataJsonSaasSocialsFilterInput>
    readonly svgPath: InputMaybe<StringQueryOperatorInput>
    readonly ui: InputMaybe<StringQueryOperatorInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonSaasFilterListInput = {
    readonly elemMatch: InputMaybe<DataJsonSaasFilterInput>
  }

  type DataJsonSaasMatomo = {
    readonly eventAction: Maybe<Scalars["String"]>
    readonly eventCategory: Maybe<Scalars["String"]>
    readonly eventName: Maybe<Scalars["String"]>
  }

  type DataJsonSaasMatomoFilterInput = {
    readonly eventAction: InputMaybe<StringQueryOperatorInput>
    readonly eventCategory: InputMaybe<StringQueryOperatorInput>
    readonly eventName: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonSaasSocials = {
    readonly discord: Maybe<Scalars["String"]>
    readonly github: Maybe<Scalars["String"]>
    readonly telegram: Maybe<Scalars["String"]>
    readonly twitter: Maybe<Scalars["String"]>
  }

  type DataJsonSaasSocialsFilterInput = {
    readonly discord: InputMaybe<StringQueryOperatorInput>
    readonly github: InputMaybe<StringQueryOperatorInput>
    readonly telegram: InputMaybe<StringQueryOperatorInput>
    readonly twitter: InputMaybe<StringQueryOperatorInput>
  }

  type DataJsonSortInput = {
    readonly fields: InputMaybe<ReadonlyArray<InputMaybe<DataJsonFieldsEnum>>>
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type DateQueryOperatorInput = {
    readonly eq: InputMaybe<Scalars["Date"]>
    readonly gt: InputMaybe<Scalars["Date"]>
    readonly gte: InputMaybe<Scalars["Date"]>
    readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars["Date"]>>>
    readonly lt: InputMaybe<Scalars["Date"]>
    readonly lte: InputMaybe<Scalars["Date"]>
    readonly ne: InputMaybe<Scalars["Date"]>
    readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars["Date"]>>>
  }

  type Directory = Node & {
    readonly absolutePath: Scalars["String"]
    readonly accessTime: Scalars["Date"]
    readonly atime: Scalars["Date"]
    readonly atimeMs: Scalars["Float"]
    readonly base: Scalars["String"]
    readonly birthTime: Scalars["Date"]
    /** @deprecated Use `birthTime` instead */
    readonly birthtime: Maybe<Scalars["Date"]>
    /** @deprecated Use `birthTime` instead */
    readonly birthtimeMs: Maybe<Scalars["Float"]>
    readonly changeTime: Scalars["Date"]
    readonly children: ReadonlyArray<Node>
    readonly ctime: Scalars["Date"]
    readonly ctimeMs: Scalars["Float"]
    readonly dev: Scalars["Int"]
    readonly dir: Scalars["String"]
    readonly ext: Scalars["String"]
    readonly extension: Scalars["String"]
    readonly gid: Scalars["Int"]
    readonly id: Scalars["ID"]
    readonly ino: Scalars["Float"]
    readonly internal: Internal
    readonly mode: Scalars["Int"]
    readonly modifiedTime: Scalars["Date"]
    readonly mtime: Scalars["Date"]
    readonly mtimeMs: Scalars["Float"]
    readonly name: Scalars["String"]
    readonly nlink: Scalars["Int"]
    readonly parent: Maybe<Node>
    readonly prettySize: Scalars["String"]
    readonly rdev: Scalars["Int"]
    readonly relativeDirectory: Scalars["String"]
    readonly relativePath: Scalars["String"]
    readonly root: Scalars["String"]
    readonly size: Scalars["Int"]
    readonly sourceInstanceName: Scalars["String"]
    readonly uid: Scalars["Int"]
  }

  type Directory_accessTimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type Directory_atimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type Directory_birthTimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type Directory_changeTimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type Directory_ctimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type Directory_modifiedTimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type Directory_mtimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type DirectoryConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<DirectoryEdge>
    readonly group: ReadonlyArray<DirectoryGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<Directory>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type DirectoryConnection_distinctArgs = {
    field: DirectoryFieldsEnum
  }

  type DirectoryConnection_groupArgs = {
    field: DirectoryFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type DirectoryConnection_maxArgs = {
    field: DirectoryFieldsEnum
  }

  type DirectoryConnection_minArgs = {
    field: DirectoryFieldsEnum
  }

  type DirectoryConnection_sumArgs = {
    field: DirectoryFieldsEnum
  }

  type DirectoryEdge = {
    readonly next: Maybe<Directory>
    readonly node: Directory
    readonly previous: Maybe<Directory>
  }

  type DirectoryFieldsEnum =
    | "absolutePath"
    | "accessTime"
    | "atime"
    | "atimeMs"
    | "base"
    | "birthTime"
    | "birthtime"
    | "birthtimeMs"
    | "changeTime"
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "ctime"
    | "ctimeMs"
    | "dev"
    | "dir"
    | "ext"
    | "extension"
    | "gid"
    | "id"
    | "ino"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "mode"
    | "modifiedTime"
    | "mtime"
    | "mtimeMs"
    | "name"
    | "nlink"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "prettySize"
    | "rdev"
    | "relativeDirectory"
    | "relativePath"
    | "root"
    | "size"
    | "sourceInstanceName"
    | "uid"

  type DirectoryFilterInput = {
    readonly absolutePath: InputMaybe<StringQueryOperatorInput>
    readonly accessTime: InputMaybe<DateQueryOperatorInput>
    readonly atime: InputMaybe<DateQueryOperatorInput>
    readonly atimeMs: InputMaybe<FloatQueryOperatorInput>
    readonly base: InputMaybe<StringQueryOperatorInput>
    readonly birthTime: InputMaybe<DateQueryOperatorInput>
    readonly birthtime: InputMaybe<DateQueryOperatorInput>
    readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>
    readonly changeTime: InputMaybe<DateQueryOperatorInput>
    readonly children: InputMaybe<NodeFilterListInput>
    readonly ctime: InputMaybe<DateQueryOperatorInput>
    readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>
    readonly dev: InputMaybe<IntQueryOperatorInput>
    readonly dir: InputMaybe<StringQueryOperatorInput>
    readonly ext: InputMaybe<StringQueryOperatorInput>
    readonly extension: InputMaybe<StringQueryOperatorInput>
    readonly gid: InputMaybe<IntQueryOperatorInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly ino: InputMaybe<FloatQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly mode: InputMaybe<IntQueryOperatorInput>
    readonly modifiedTime: InputMaybe<DateQueryOperatorInput>
    readonly mtime: InputMaybe<DateQueryOperatorInput>
    readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly nlink: InputMaybe<IntQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly prettySize: InputMaybe<StringQueryOperatorInput>
    readonly rdev: InputMaybe<IntQueryOperatorInput>
    readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>
    readonly relativePath: InputMaybe<StringQueryOperatorInput>
    readonly root: InputMaybe<StringQueryOperatorInput>
    readonly size: InputMaybe<IntQueryOperatorInput>
    readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>
    readonly uid: InputMaybe<IntQueryOperatorInput>
  }

  type DirectoryGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<DirectoryEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<DirectoryGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<Directory>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type DirectoryGroupConnection_distinctArgs = {
    field: DirectoryFieldsEnum
  }

  type DirectoryGroupConnection_groupArgs = {
    field: DirectoryFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type DirectoryGroupConnection_maxArgs = {
    field: DirectoryFieldsEnum
  }

  type DirectoryGroupConnection_minArgs = {
    field: DirectoryFieldsEnum
  }

  type DirectoryGroupConnection_sumArgs = {
    field: DirectoryFieldsEnum
  }

  type DirectorySortInput = {
    readonly fields: InputMaybe<ReadonlyArray<InputMaybe<DirectoryFieldsEnum>>>
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type DuotoneGradient = {
    readonly highlight: Scalars["String"]
    readonly opacity: InputMaybe<Scalars["Int"]>
    readonly shadow: Scalars["String"]
  }

  type ExchangesByCountryCsv = Node & {
    readonly binance: Maybe<Scalars["String"]>
    readonly binanceus: Maybe<Scalars["String"]>
    readonly bitbuy: Maybe<Scalars["String"]>
    readonly bitfinex: Maybe<Scalars["String"]>
    readonly bitflyer: Maybe<Scalars["String"]>
    readonly bitkub: Maybe<Scalars["String"]>
    readonly bitso: Maybe<Scalars["String"]>
    readonly bittrex: Maybe<Scalars["String"]>
    readonly bitvavo: Maybe<Scalars["String"]>
    readonly bybit: Maybe<Scalars["String"]>
    readonly children: ReadonlyArray<Node>
    readonly coinbase: Maybe<Scalars["String"]>
    readonly coinmama: Maybe<Scalars["String"]>
    readonly coinspot: Maybe<Scalars["String"]>
    readonly country: Maybe<Scalars["String"]>
    readonly cryptocom: Maybe<Scalars["String"]>
    readonly easycrypto: Maybe<Scalars["String"]>
    readonly ftx: Maybe<Scalars["String"]>
    readonly ftxus: Maybe<Scalars["String"]>
    readonly gateio: Maybe<Scalars["String"]>
    readonly gemini: Maybe<Scalars["String"]>
    readonly huobiglobal: Maybe<Scalars["String"]>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly itezcom: Maybe<Scalars["String"]>
    readonly kraken: Maybe<Scalars["String"]>
    readonly kucoin: Maybe<Scalars["String"]>
    readonly moonpay: Maybe<Scalars["String"]>
    readonly mtpelerin: Maybe<Scalars["String"]>
    readonly okx: Maybe<Scalars["String"]>
    readonly parent: Maybe<Node>
    readonly rain: Maybe<Scalars["String"]>
    readonly simplex: Maybe<Scalars["String"]>
    readonly wazirx: Maybe<Scalars["String"]>
    readonly wyre: Maybe<Scalars["String"]>
  }

  type ExchangesByCountryCsvConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<ExchangesByCountryCsvEdge>
    readonly group: ReadonlyArray<ExchangesByCountryCsvGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<ExchangesByCountryCsv>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type ExchangesByCountryCsvConnection_distinctArgs = {
    field: ExchangesByCountryCsvFieldsEnum
  }

  type ExchangesByCountryCsvConnection_groupArgs = {
    field: ExchangesByCountryCsvFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type ExchangesByCountryCsvConnection_maxArgs = {
    field: ExchangesByCountryCsvFieldsEnum
  }

  type ExchangesByCountryCsvConnection_minArgs = {
    field: ExchangesByCountryCsvFieldsEnum
  }

  type ExchangesByCountryCsvConnection_sumArgs = {
    field: ExchangesByCountryCsvFieldsEnum
  }

  type ExchangesByCountryCsvEdge = {
    readonly next: Maybe<ExchangesByCountryCsv>
    readonly node: ExchangesByCountryCsv
    readonly previous: Maybe<ExchangesByCountryCsv>
  }

  type ExchangesByCountryCsvFieldsEnum =
    | "binance"
    | "binanceus"
    | "bitbuy"
    | "bitfinex"
    | "bitflyer"
    | "bitkub"
    | "bitso"
    | "bittrex"
    | "bitvavo"
    | "bybit"
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "coinbase"
    | "coinmama"
    | "coinspot"
    | "country"
    | "cryptocom"
    | "easycrypto"
    | "ftx"
    | "ftxus"
    | "gateio"
    | "gemini"
    | "huobiglobal"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "itezcom"
    | "kraken"
    | "kucoin"
    | "moonpay"
    | "mtpelerin"
    | "okx"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "rain"
    | "simplex"
    | "wazirx"
    | "wyre"

  type ExchangesByCountryCsvFilterInput = {
    readonly binance: InputMaybe<StringQueryOperatorInput>
    readonly binanceus: InputMaybe<StringQueryOperatorInput>
    readonly bitbuy: InputMaybe<StringQueryOperatorInput>
    readonly bitfinex: InputMaybe<StringQueryOperatorInput>
    readonly bitflyer: InputMaybe<StringQueryOperatorInput>
    readonly bitkub: InputMaybe<StringQueryOperatorInput>
    readonly bitso: InputMaybe<StringQueryOperatorInput>
    readonly bittrex: InputMaybe<StringQueryOperatorInput>
    readonly bitvavo: InputMaybe<StringQueryOperatorInput>
    readonly bybit: InputMaybe<StringQueryOperatorInput>
    readonly children: InputMaybe<NodeFilterListInput>
    readonly coinbase: InputMaybe<StringQueryOperatorInput>
    readonly coinmama: InputMaybe<StringQueryOperatorInput>
    readonly coinspot: InputMaybe<StringQueryOperatorInput>
    readonly country: InputMaybe<StringQueryOperatorInput>
    readonly cryptocom: InputMaybe<StringQueryOperatorInput>
    readonly easycrypto: InputMaybe<StringQueryOperatorInput>
    readonly ftx: InputMaybe<StringQueryOperatorInput>
    readonly ftxus: InputMaybe<StringQueryOperatorInput>
    readonly gateio: InputMaybe<StringQueryOperatorInput>
    readonly gemini: InputMaybe<StringQueryOperatorInput>
    readonly huobiglobal: InputMaybe<StringQueryOperatorInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly itezcom: InputMaybe<StringQueryOperatorInput>
    readonly kraken: InputMaybe<StringQueryOperatorInput>
    readonly kucoin: InputMaybe<StringQueryOperatorInput>
    readonly moonpay: InputMaybe<StringQueryOperatorInput>
    readonly mtpelerin: InputMaybe<StringQueryOperatorInput>
    readonly okx: InputMaybe<StringQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly rain: InputMaybe<StringQueryOperatorInput>
    readonly simplex: InputMaybe<StringQueryOperatorInput>
    readonly wazirx: InputMaybe<StringQueryOperatorInput>
    readonly wyre: InputMaybe<StringQueryOperatorInput>
  }

  type ExchangesByCountryCsvFilterListInput = {
    readonly elemMatch: InputMaybe<ExchangesByCountryCsvFilterInput>
  }

  type ExchangesByCountryCsvGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<ExchangesByCountryCsvEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<ExchangesByCountryCsvGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<ExchangesByCountryCsv>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type ExchangesByCountryCsvGroupConnection_distinctArgs = {
    field: ExchangesByCountryCsvFieldsEnum
  }

  type ExchangesByCountryCsvGroupConnection_groupArgs = {
    field: ExchangesByCountryCsvFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type ExchangesByCountryCsvGroupConnection_maxArgs = {
    field: ExchangesByCountryCsvFieldsEnum
  }

  type ExchangesByCountryCsvGroupConnection_minArgs = {
    field: ExchangesByCountryCsvFieldsEnum
  }

  type ExchangesByCountryCsvGroupConnection_sumArgs = {
    field: ExchangesByCountryCsvFieldsEnum
  }

  type ExchangesByCountryCsvSortInput = {
    readonly fields: InputMaybe<
      ReadonlyArray<InputMaybe<ExchangesByCountryCsvFieldsEnum>>
    >
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type ExecutionBountyHuntersCsv = Node & {
    readonly children: ReadonlyArray<Node>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly name: Maybe<Scalars["String"]>
    readonly parent: Maybe<Node>
    readonly score: Maybe<Scalars["Int"]>
    readonly username: Maybe<Scalars["String"]>
  }

  type ExecutionBountyHuntersCsvConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<ExecutionBountyHuntersCsvEdge>
    readonly group: ReadonlyArray<ExecutionBountyHuntersCsvGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<ExecutionBountyHuntersCsv>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type ExecutionBountyHuntersCsvConnection_distinctArgs = {
    field: ExecutionBountyHuntersCsvFieldsEnum
  }

  type ExecutionBountyHuntersCsvConnection_groupArgs = {
    field: ExecutionBountyHuntersCsvFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type ExecutionBountyHuntersCsvConnection_maxArgs = {
    field: ExecutionBountyHuntersCsvFieldsEnum
  }

  type ExecutionBountyHuntersCsvConnection_minArgs = {
    field: ExecutionBountyHuntersCsvFieldsEnum
  }

  type ExecutionBountyHuntersCsvConnection_sumArgs = {
    field: ExecutionBountyHuntersCsvFieldsEnum
  }

  type ExecutionBountyHuntersCsvEdge = {
    readonly next: Maybe<ExecutionBountyHuntersCsv>
    readonly node: ExecutionBountyHuntersCsv
    readonly previous: Maybe<ExecutionBountyHuntersCsv>
  }

  type ExecutionBountyHuntersCsvFieldsEnum =
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "name"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "score"
    | "username"

  type ExecutionBountyHuntersCsvFilterInput = {
    readonly children: InputMaybe<NodeFilterListInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly score: InputMaybe<IntQueryOperatorInput>
    readonly username: InputMaybe<StringQueryOperatorInput>
  }

  type ExecutionBountyHuntersCsvFilterListInput = {
    readonly elemMatch: InputMaybe<ExecutionBountyHuntersCsvFilterInput>
  }

  type ExecutionBountyHuntersCsvGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<ExecutionBountyHuntersCsvEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<ExecutionBountyHuntersCsvGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<ExecutionBountyHuntersCsv>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type ExecutionBountyHuntersCsvGroupConnection_distinctArgs = {
    field: ExecutionBountyHuntersCsvFieldsEnum
  }

  type ExecutionBountyHuntersCsvGroupConnection_groupArgs = {
    field: ExecutionBountyHuntersCsvFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type ExecutionBountyHuntersCsvGroupConnection_maxArgs = {
    field: ExecutionBountyHuntersCsvFieldsEnum
  }

  type ExecutionBountyHuntersCsvGroupConnection_minArgs = {
    field: ExecutionBountyHuntersCsvFieldsEnum
  }

  type ExecutionBountyHuntersCsvGroupConnection_sumArgs = {
    field: ExecutionBountyHuntersCsvFieldsEnum
  }

  type ExecutionBountyHuntersCsvSortInput = {
    readonly fields: InputMaybe<
      ReadonlyArray<InputMaybe<ExecutionBountyHuntersCsvFieldsEnum>>
    >
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type ExternalTutorialsJson = Node & {
    readonly author: Maybe<Scalars["String"]>
    readonly authorGithub: Maybe<Scalars["String"]>
    readonly children: ReadonlyArray<Node>
    readonly description: Maybe<Scalars["String"]>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly lang: Maybe<Scalars["String"]>
    readonly parent: Maybe<Node>
    readonly publishDate: Maybe<Scalars["String"]>
    readonly skillLevel: Maybe<Scalars["String"]>
    readonly tags: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly timeToRead: Maybe<Scalars["String"]>
    readonly title: Maybe<Scalars["String"]>
    readonly url: Maybe<Scalars["String"]>
  }

  type ExternalTutorialsJsonConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<ExternalTutorialsJsonEdge>
    readonly group: ReadonlyArray<ExternalTutorialsJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<ExternalTutorialsJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type ExternalTutorialsJsonConnection_distinctArgs = {
    field: ExternalTutorialsJsonFieldsEnum
  }

  type ExternalTutorialsJsonConnection_groupArgs = {
    field: ExternalTutorialsJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type ExternalTutorialsJsonConnection_maxArgs = {
    field: ExternalTutorialsJsonFieldsEnum
  }

  type ExternalTutorialsJsonConnection_minArgs = {
    field: ExternalTutorialsJsonFieldsEnum
  }

  type ExternalTutorialsJsonConnection_sumArgs = {
    field: ExternalTutorialsJsonFieldsEnum
  }

  type ExternalTutorialsJsonEdge = {
    readonly next: Maybe<ExternalTutorialsJson>
    readonly node: ExternalTutorialsJson
    readonly previous: Maybe<ExternalTutorialsJson>
  }

  type ExternalTutorialsJsonFieldsEnum =
    | "author"
    | "authorGithub"
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "description"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "lang"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "publishDate"
    | "skillLevel"
    | "tags"
    | "timeToRead"
    | "title"
    | "url"

  type ExternalTutorialsJsonFilterInput = {
    readonly author: InputMaybe<StringQueryOperatorInput>
    readonly authorGithub: InputMaybe<StringQueryOperatorInput>
    readonly children: InputMaybe<NodeFilterListInput>
    readonly description: InputMaybe<StringQueryOperatorInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly lang: InputMaybe<StringQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly publishDate: InputMaybe<StringQueryOperatorInput>
    readonly skillLevel: InputMaybe<StringQueryOperatorInput>
    readonly tags: InputMaybe<StringQueryOperatorInput>
    readonly timeToRead: InputMaybe<StringQueryOperatorInput>
    readonly title: InputMaybe<StringQueryOperatorInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type ExternalTutorialsJsonFilterListInput = {
    readonly elemMatch: InputMaybe<ExternalTutorialsJsonFilterInput>
  }

  type ExternalTutorialsJsonGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<ExternalTutorialsJsonEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<ExternalTutorialsJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<ExternalTutorialsJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type ExternalTutorialsJsonGroupConnection_distinctArgs = {
    field: ExternalTutorialsJsonFieldsEnum
  }

  type ExternalTutorialsJsonGroupConnection_groupArgs = {
    field: ExternalTutorialsJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type ExternalTutorialsJsonGroupConnection_maxArgs = {
    field: ExternalTutorialsJsonFieldsEnum
  }

  type ExternalTutorialsJsonGroupConnection_minArgs = {
    field: ExternalTutorialsJsonFieldsEnum
  }

  type ExternalTutorialsJsonGroupConnection_sumArgs = {
    field: ExternalTutorialsJsonFieldsEnum
  }

  type ExternalTutorialsJsonSortInput = {
    readonly fields: InputMaybe<
      ReadonlyArray<InputMaybe<ExternalTutorialsJsonFieldsEnum>>
    >
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type File = Node & {
    readonly absolutePath: Scalars["String"]
    readonly accessTime: Scalars["Date"]
    readonly atime: Scalars["Date"]
    readonly atimeMs: Scalars["Float"]
    readonly base: Scalars["String"]
    readonly birthTime: Scalars["Date"]
    /** @deprecated Use `birthTime` instead */
    readonly birthtime: Maybe<Scalars["Date"]>
    /** @deprecated Use `birthTime` instead */
    readonly birthtimeMs: Maybe<Scalars["Float"]>
    readonly blksize: Maybe<Scalars["Int"]>
    readonly blocks: Maybe<Scalars["Int"]>
    readonly changeTime: Scalars["Date"]
    /** Returns the first child node of type AlltimeJson or null if there are no children of given type on this node */
    readonly childAlltimeJson: Maybe<AlltimeJson>
    /** Returns the first child node of type CexLayer2SupportJson or null if there are no children of given type on this node */
    readonly childCexLayer2SupportJson: Maybe<CexLayer2SupportJson>
    /** Returns the first child node of type CommunityEventsJson or null if there are no children of given type on this node */
    readonly childCommunityEventsJson: Maybe<CommunityEventsJson>
    /** Returns the first child node of type CommunityMeetupsJson or null if there are no children of given type on this node */
    readonly childCommunityMeetupsJson: Maybe<CommunityMeetupsJson>
    /** Returns the first child node of type ConsensusBountyHuntersCsv or null if there are no children of given type on this node */
    readonly childConsensusBountyHuntersCsv: Maybe<ConsensusBountyHuntersCsv>
    /** Returns the first child node of type DataJson or null if there are no children of given type on this node */
    readonly childDataJson: Maybe<DataJson>
    /** Returns the first child node of type ExchangesByCountryCsv or null if there are no children of given type on this node */
    readonly childExchangesByCountryCsv: Maybe<ExchangesByCountryCsv>
    /** Returns the first child node of type ExecutionBountyHuntersCsv or null if there are no children of given type on this node */
    readonly childExecutionBountyHuntersCsv: Maybe<ExecutionBountyHuntersCsv>
    /** Returns the first child node of type ExternalTutorialsJson or null if there are no children of given type on this node */
    readonly childExternalTutorialsJson: Maybe<ExternalTutorialsJson>
    /** Returns the first child node of type ImageSharp or null if there are no children of given type on this node */
    readonly childImageSharp: Maybe<ImageSharp>
    /** Returns the first child node of type Layer2Json or null if there are no children of given type on this node */
    readonly childLayer2Json: Maybe<Layer2Json>
    /** Returns the first child node of type Mdx or null if there are no children of given type on this node */
    readonly childMdx: Maybe<Mdx>
    /** Returns the first child node of type MonthJson or null if there are no children of given type on this node */
    readonly childMonthJson: Maybe<MonthJson>
    /** Returns the first child node of type QuarterJson or null if there are no children of given type on this node */
    readonly childQuarterJson: Maybe<QuarterJson>
    /** Returns the first child node of type WalletsCsv or null if there are no children of given type on this node */
    readonly childWalletsCsv: Maybe<WalletsCsv>
    readonly children: ReadonlyArray<Node>
    /** Returns all children nodes filtered by type AlltimeJson */
    readonly childrenAlltimeJson: Maybe<ReadonlyArray<Maybe<AlltimeJson>>>
    /** Returns all children nodes filtered by type CexLayer2SupportJson */
    readonly childrenCexLayer2SupportJson: Maybe<
      ReadonlyArray<Maybe<CexLayer2SupportJson>>
    >
    /** Returns all children nodes filtered by type CommunityEventsJson */
    readonly childrenCommunityEventsJson: Maybe<
      ReadonlyArray<Maybe<CommunityEventsJson>>
    >
    /** Returns all children nodes filtered by type CommunityMeetupsJson */
    readonly childrenCommunityMeetupsJson: Maybe<
      ReadonlyArray<Maybe<CommunityMeetupsJson>>
    >
    /** Returns all children nodes filtered by type ConsensusBountyHuntersCsv */
    readonly childrenConsensusBountyHuntersCsv: Maybe<
      ReadonlyArray<Maybe<ConsensusBountyHuntersCsv>>
    >
    /** Returns all children nodes filtered by type DataJson */
    readonly childrenDataJson: Maybe<ReadonlyArray<Maybe<DataJson>>>
    /** Returns all children nodes filtered by type ExchangesByCountryCsv */
    readonly childrenExchangesByCountryCsv: Maybe<
      ReadonlyArray<Maybe<ExchangesByCountryCsv>>
    >
    /** Returns all children nodes filtered by type ExecutionBountyHuntersCsv */
    readonly childrenExecutionBountyHuntersCsv: Maybe<
      ReadonlyArray<Maybe<ExecutionBountyHuntersCsv>>
    >
    /** Returns all children nodes filtered by type ExternalTutorialsJson */
    readonly childrenExternalTutorialsJson: Maybe<
      ReadonlyArray<Maybe<ExternalTutorialsJson>>
    >
    /** Returns all children nodes filtered by type ImageSharp */
    readonly childrenImageSharp: Maybe<ReadonlyArray<Maybe<ImageSharp>>>
    /** Returns all children nodes filtered by type Layer2Json */
    readonly childrenLayer2Json: Maybe<ReadonlyArray<Maybe<Layer2Json>>>
    /** Returns all children nodes filtered by type Mdx */
    readonly childrenMdx: Maybe<ReadonlyArray<Maybe<Mdx>>>
    /** Returns all children nodes filtered by type MonthJson */
    readonly childrenMonthJson: Maybe<ReadonlyArray<Maybe<MonthJson>>>
    /** Returns all children nodes filtered by type QuarterJson */
    readonly childrenQuarterJson: Maybe<ReadonlyArray<Maybe<QuarterJson>>>
    /** Returns all children nodes filtered by type WalletsCsv */
    readonly childrenWalletsCsv: Maybe<ReadonlyArray<Maybe<WalletsCsv>>>
    readonly ctime: Scalars["Date"]
    readonly ctimeMs: Scalars["Float"]
    readonly dev: Scalars["Int"]
    readonly dir: Scalars["String"]
    readonly ext: Scalars["String"]
    readonly extension: Scalars["String"]
    readonly fields: Maybe<FileFields>
    readonly gid: Scalars["Int"]
    readonly id: Scalars["ID"]
    readonly ino: Scalars["Float"]
    readonly internal: Internal
    readonly mode: Scalars["Int"]
    readonly modifiedTime: Scalars["Date"]
    readonly mtime: Scalars["Date"]
    readonly mtimeMs: Scalars["Float"]
    readonly name: Scalars["String"]
    readonly nlink: Scalars["Int"]
    readonly parent: Maybe<Node>
    readonly prettySize: Scalars["String"]
    /** Copy file to static directory and return public url to it */
    readonly publicURL: Maybe<Scalars["String"]>
    readonly rdev: Scalars["Int"]
    readonly relativeDirectory: Scalars["String"]
    readonly relativePath: Scalars["String"]
    readonly root: Scalars["String"]
    readonly size: Scalars["Int"]
    readonly sourceInstanceName: Scalars["String"]
    readonly uid: Scalars["Int"]
  }

  type File_accessTimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type File_atimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type File_birthTimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type File_changeTimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type File_ctimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type File_modifiedTimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type File_mtimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type FileConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<FileEdge>
    readonly group: ReadonlyArray<FileGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<File>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type FileConnection_distinctArgs = {
    field: FileFieldsEnum
  }

  type FileConnection_groupArgs = {
    field: FileFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type FileConnection_maxArgs = {
    field: FileFieldsEnum
  }

  type FileConnection_minArgs = {
    field: FileFieldsEnum
  }

  type FileConnection_sumArgs = {
    field: FileFieldsEnum
  }

  type FileEdge = {
    readonly next: Maybe<File>
    readonly node: File
    readonly previous: Maybe<File>
  }

  type FileFields = {
    readonly gitLogLatestAuthorEmail: Maybe<Scalars["String"]>
    readonly gitLogLatestAuthorName: Maybe<Scalars["String"]>
    readonly gitLogLatestDate: Maybe<Scalars["Date"]>
  }

  type FileFields_gitLogLatestDateArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type FileFieldsEnum =
    | "absolutePath"
    | "accessTime"
    | "atime"
    | "atimeMs"
    | "base"
    | "birthTime"
    | "birthtime"
    | "birthtimeMs"
    | "blksize"
    | "blocks"
    | "changeTime"
    | "childAlltimeJson.children"
    | "childAlltimeJson.children.children"
    | "childAlltimeJson.children.children.children"
    | "childAlltimeJson.children.children.id"
    | "childAlltimeJson.children.id"
    | "childAlltimeJson.children.internal.content"
    | "childAlltimeJson.children.internal.contentDigest"
    | "childAlltimeJson.children.internal.description"
    | "childAlltimeJson.children.internal.fieldOwners"
    | "childAlltimeJson.children.internal.ignoreType"
    | "childAlltimeJson.children.internal.mediaType"
    | "childAlltimeJson.children.internal.owner"
    | "childAlltimeJson.children.internal.type"
    | "childAlltimeJson.children.parent.children"
    | "childAlltimeJson.children.parent.id"
    | "childAlltimeJson.currency"
    | "childAlltimeJson.data"
    | "childAlltimeJson.data.languages"
    | "childAlltimeJson.data.user.avatarUrl"
    | "childAlltimeJson.data.user.fullName"
    | "childAlltimeJson.data.user.id"
    | "childAlltimeJson.data.user.preTranslated"
    | "childAlltimeJson.data.user.totalCosts"
    | "childAlltimeJson.data.user.userRole"
    | "childAlltimeJson.data.user.username"
    | "childAlltimeJson.dateRange.from"
    | "childAlltimeJson.dateRange.to"
    | "childAlltimeJson.id"
    | "childAlltimeJson.internal.content"
    | "childAlltimeJson.internal.contentDigest"
    | "childAlltimeJson.internal.description"
    | "childAlltimeJson.internal.fieldOwners"
    | "childAlltimeJson.internal.ignoreType"
    | "childAlltimeJson.internal.mediaType"
    | "childAlltimeJson.internal.owner"
    | "childAlltimeJson.internal.type"
    | "childAlltimeJson.mode"
    | "childAlltimeJson.name"
    | "childAlltimeJson.parent.children"
    | "childAlltimeJson.parent.children.children"
    | "childAlltimeJson.parent.children.id"
    | "childAlltimeJson.parent.id"
    | "childAlltimeJson.parent.internal.content"
    | "childAlltimeJson.parent.internal.contentDigest"
    | "childAlltimeJson.parent.internal.description"
    | "childAlltimeJson.parent.internal.fieldOwners"
    | "childAlltimeJson.parent.internal.ignoreType"
    | "childAlltimeJson.parent.internal.mediaType"
    | "childAlltimeJson.parent.internal.owner"
    | "childAlltimeJson.parent.internal.type"
    | "childAlltimeJson.parent.parent.children"
    | "childAlltimeJson.parent.parent.id"
    | "childAlltimeJson.totalCosts"
    | "childAlltimeJson.totalPreTranslated"
    | "childAlltimeJson.totalTMSavings"
    | "childAlltimeJson.unit"
    | "childAlltimeJson.url"
    | "childCexLayer2SupportJson.children"
    | "childCexLayer2SupportJson.children.children"
    | "childCexLayer2SupportJson.children.children.children"
    | "childCexLayer2SupportJson.children.children.id"
    | "childCexLayer2SupportJson.children.id"
    | "childCexLayer2SupportJson.children.internal.content"
    | "childCexLayer2SupportJson.children.internal.contentDigest"
    | "childCexLayer2SupportJson.children.internal.description"
    | "childCexLayer2SupportJson.children.internal.fieldOwners"
    | "childCexLayer2SupportJson.children.internal.ignoreType"
    | "childCexLayer2SupportJson.children.internal.mediaType"
    | "childCexLayer2SupportJson.children.internal.owner"
    | "childCexLayer2SupportJson.children.internal.type"
    | "childCexLayer2SupportJson.children.parent.children"
    | "childCexLayer2SupportJson.children.parent.id"
    | "childCexLayer2SupportJson.id"
    | "childCexLayer2SupportJson.internal.content"
    | "childCexLayer2SupportJson.internal.contentDigest"
    | "childCexLayer2SupportJson.internal.description"
    | "childCexLayer2SupportJson.internal.fieldOwners"
    | "childCexLayer2SupportJson.internal.ignoreType"
    | "childCexLayer2SupportJson.internal.mediaType"
    | "childCexLayer2SupportJson.internal.owner"
    | "childCexLayer2SupportJson.internal.type"
    | "childCexLayer2SupportJson.name"
    | "childCexLayer2SupportJson.parent.children"
    | "childCexLayer2SupportJson.parent.children.children"
    | "childCexLayer2SupportJson.parent.children.id"
    | "childCexLayer2SupportJson.parent.id"
    | "childCexLayer2SupportJson.parent.internal.content"
    | "childCexLayer2SupportJson.parent.internal.contentDigest"
    | "childCexLayer2SupportJson.parent.internal.description"
    | "childCexLayer2SupportJson.parent.internal.fieldOwners"
    | "childCexLayer2SupportJson.parent.internal.ignoreType"
    | "childCexLayer2SupportJson.parent.internal.mediaType"
    | "childCexLayer2SupportJson.parent.internal.owner"
    | "childCexLayer2SupportJson.parent.internal.type"
    | "childCexLayer2SupportJson.parent.parent.children"
    | "childCexLayer2SupportJson.parent.parent.id"
    | "childCexLayer2SupportJson.supports_deposits"
    | "childCexLayer2SupportJson.supports_withdrawals"
    | "childCexLayer2SupportJson.url"
    | "childCommunityEventsJson.children"
    | "childCommunityEventsJson.children.children"
    | "childCommunityEventsJson.children.children.children"
    | "childCommunityEventsJson.children.children.id"
    | "childCommunityEventsJson.children.id"
    | "childCommunityEventsJson.children.internal.content"
    | "childCommunityEventsJson.children.internal.contentDigest"
    | "childCommunityEventsJson.children.internal.description"
    | "childCommunityEventsJson.children.internal.fieldOwners"
    | "childCommunityEventsJson.children.internal.ignoreType"
    | "childCommunityEventsJson.children.internal.mediaType"
    | "childCommunityEventsJson.children.internal.owner"
    | "childCommunityEventsJson.children.internal.type"
    | "childCommunityEventsJson.children.parent.children"
    | "childCommunityEventsJson.children.parent.id"
    | "childCommunityEventsJson.description"
    | "childCommunityEventsJson.endDate"
    | "childCommunityEventsJson.id"
    | "childCommunityEventsJson.internal.content"
    | "childCommunityEventsJson.internal.contentDigest"
    | "childCommunityEventsJson.internal.description"
    | "childCommunityEventsJson.internal.fieldOwners"
    | "childCommunityEventsJson.internal.ignoreType"
    | "childCommunityEventsJson.internal.mediaType"
    | "childCommunityEventsJson.internal.owner"
    | "childCommunityEventsJson.internal.type"
    | "childCommunityEventsJson.location"
    | "childCommunityEventsJson.parent.children"
    | "childCommunityEventsJson.parent.children.children"
    | "childCommunityEventsJson.parent.children.id"
    | "childCommunityEventsJson.parent.id"
    | "childCommunityEventsJson.parent.internal.content"
    | "childCommunityEventsJson.parent.internal.contentDigest"
    | "childCommunityEventsJson.parent.internal.description"
    | "childCommunityEventsJson.parent.internal.fieldOwners"
    | "childCommunityEventsJson.parent.internal.ignoreType"
    | "childCommunityEventsJson.parent.internal.mediaType"
    | "childCommunityEventsJson.parent.internal.owner"
    | "childCommunityEventsJson.parent.internal.type"
    | "childCommunityEventsJson.parent.parent.children"
    | "childCommunityEventsJson.parent.parent.id"
    | "childCommunityEventsJson.sponsor"
    | "childCommunityEventsJson.startDate"
    | "childCommunityEventsJson.title"
    | "childCommunityEventsJson.to"
    | "childCommunityMeetupsJson.children"
    | "childCommunityMeetupsJson.children.children"
    | "childCommunityMeetupsJson.children.children.children"
    | "childCommunityMeetupsJson.children.children.id"
    | "childCommunityMeetupsJson.children.id"
    | "childCommunityMeetupsJson.children.internal.content"
    | "childCommunityMeetupsJson.children.internal.contentDigest"
    | "childCommunityMeetupsJson.children.internal.description"
    | "childCommunityMeetupsJson.children.internal.fieldOwners"
    | "childCommunityMeetupsJson.children.internal.ignoreType"
    | "childCommunityMeetupsJson.children.internal.mediaType"
    | "childCommunityMeetupsJson.children.internal.owner"
    | "childCommunityMeetupsJson.children.internal.type"
    | "childCommunityMeetupsJson.children.parent.children"
    | "childCommunityMeetupsJson.children.parent.id"
    | "childCommunityMeetupsJson.emoji"
    | "childCommunityMeetupsJson.id"
    | "childCommunityMeetupsJson.internal.content"
    | "childCommunityMeetupsJson.internal.contentDigest"
    | "childCommunityMeetupsJson.internal.description"
    | "childCommunityMeetupsJson.internal.fieldOwners"
    | "childCommunityMeetupsJson.internal.ignoreType"
    | "childCommunityMeetupsJson.internal.mediaType"
    | "childCommunityMeetupsJson.internal.owner"
    | "childCommunityMeetupsJson.internal.type"
    | "childCommunityMeetupsJson.link"
    | "childCommunityMeetupsJson.location"
    | "childCommunityMeetupsJson.parent.children"
    | "childCommunityMeetupsJson.parent.children.children"
    | "childCommunityMeetupsJson.parent.children.id"
    | "childCommunityMeetupsJson.parent.id"
    | "childCommunityMeetupsJson.parent.internal.content"
    | "childCommunityMeetupsJson.parent.internal.contentDigest"
    | "childCommunityMeetupsJson.parent.internal.description"
    | "childCommunityMeetupsJson.parent.internal.fieldOwners"
    | "childCommunityMeetupsJson.parent.internal.ignoreType"
    | "childCommunityMeetupsJson.parent.internal.mediaType"
    | "childCommunityMeetupsJson.parent.internal.owner"
    | "childCommunityMeetupsJson.parent.internal.type"
    | "childCommunityMeetupsJson.parent.parent.children"
    | "childCommunityMeetupsJson.parent.parent.id"
    | "childCommunityMeetupsJson.title"
    | "childConsensusBountyHuntersCsv.children"
    | "childConsensusBountyHuntersCsv.children.children"
    | "childConsensusBountyHuntersCsv.children.children.children"
    | "childConsensusBountyHuntersCsv.children.children.id"
    | "childConsensusBountyHuntersCsv.children.id"
    | "childConsensusBountyHuntersCsv.children.internal.content"
    | "childConsensusBountyHuntersCsv.children.internal.contentDigest"
    | "childConsensusBountyHuntersCsv.children.internal.description"
    | "childConsensusBountyHuntersCsv.children.internal.fieldOwners"
    | "childConsensusBountyHuntersCsv.children.internal.ignoreType"
    | "childConsensusBountyHuntersCsv.children.internal.mediaType"
    | "childConsensusBountyHuntersCsv.children.internal.owner"
    | "childConsensusBountyHuntersCsv.children.internal.type"
    | "childConsensusBountyHuntersCsv.children.parent.children"
    | "childConsensusBountyHuntersCsv.children.parent.id"
    | "childConsensusBountyHuntersCsv.id"
    | "childConsensusBountyHuntersCsv.internal.content"
    | "childConsensusBountyHuntersCsv.internal.contentDigest"
    | "childConsensusBountyHuntersCsv.internal.description"
    | "childConsensusBountyHuntersCsv.internal.fieldOwners"
    | "childConsensusBountyHuntersCsv.internal.ignoreType"
    | "childConsensusBountyHuntersCsv.internal.mediaType"
    | "childConsensusBountyHuntersCsv.internal.owner"
    | "childConsensusBountyHuntersCsv.internal.type"
    | "childConsensusBountyHuntersCsv.name"
    | "childConsensusBountyHuntersCsv.parent.children"
    | "childConsensusBountyHuntersCsv.parent.children.children"
    | "childConsensusBountyHuntersCsv.parent.children.id"
    | "childConsensusBountyHuntersCsv.parent.id"
    | "childConsensusBountyHuntersCsv.parent.internal.content"
    | "childConsensusBountyHuntersCsv.parent.internal.contentDigest"
    | "childConsensusBountyHuntersCsv.parent.internal.description"
    | "childConsensusBountyHuntersCsv.parent.internal.fieldOwners"
    | "childConsensusBountyHuntersCsv.parent.internal.ignoreType"
    | "childConsensusBountyHuntersCsv.parent.internal.mediaType"
    | "childConsensusBountyHuntersCsv.parent.internal.owner"
    | "childConsensusBountyHuntersCsv.parent.internal.type"
    | "childConsensusBountyHuntersCsv.parent.parent.children"
    | "childConsensusBountyHuntersCsv.parent.parent.id"
    | "childConsensusBountyHuntersCsv.score"
    | "childConsensusBountyHuntersCsv.username"
    | "childDataJson.children"
    | "childDataJson.children.children"
    | "childDataJson.children.children.children"
    | "childDataJson.children.children.id"
    | "childDataJson.children.id"
    | "childDataJson.children.internal.content"
    | "childDataJson.children.internal.contentDigest"
    | "childDataJson.children.internal.description"
    | "childDataJson.children.internal.fieldOwners"
    | "childDataJson.children.internal.ignoreType"
    | "childDataJson.children.internal.mediaType"
    | "childDataJson.children.internal.owner"
    | "childDataJson.children.internal.type"
    | "childDataJson.children.parent.children"
    | "childDataJson.children.parent.id"
    | "childDataJson.commit"
    | "childDataJson.contributors"
    | "childDataJson.contributorsPerLine"
    | "childDataJson.contributors.avatar_url"
    | "childDataJson.contributors.contributions"
    | "childDataJson.contributors.login"
    | "childDataJson.contributors.name"
    | "childDataJson.contributors.profile"
    | "childDataJson.files"
    | "childDataJson.id"
    | "childDataJson.imageSize"
    | "childDataJson.internal.content"
    | "childDataJson.internal.contentDigest"
    | "childDataJson.internal.description"
    | "childDataJson.internal.fieldOwners"
    | "childDataJson.internal.ignoreType"
    | "childDataJson.internal.mediaType"
    | "childDataJson.internal.owner"
    | "childDataJson.internal.type"
    | "childDataJson.keyGen"
    | "childDataJson.keyGen.audits"
    | "childDataJson.keyGen.audits.name"
    | "childDataJson.keyGen.audits.url"
    | "childDataJson.keyGen.hasBugBounty"
    | "childDataJson.keyGen.hue"
    | "childDataJson.keyGen.isFoss"
    | "childDataJson.keyGen.isPermissionless"
    | "childDataJson.keyGen.isSelfCustody"
    | "childDataJson.keyGen.isTrustless"
    | "childDataJson.keyGen.launchDate"
    | "childDataJson.keyGen.matomo.eventAction"
    | "childDataJson.keyGen.matomo.eventCategory"
    | "childDataJson.keyGen.matomo.eventName"
    | "childDataJson.keyGen.name"
    | "childDataJson.keyGen.platforms"
    | "childDataJson.keyGen.socials.discord"
    | "childDataJson.keyGen.socials.github"
    | "childDataJson.keyGen.socials.twitter"
    | "childDataJson.keyGen.svgPath"
    | "childDataJson.keyGen.ui"
    | "childDataJson.keyGen.url"
    | "childDataJson.nodeTools"
    | "childDataJson.nodeTools.additionalStake"
    | "childDataJson.nodeTools.additionalStakeUnit"
    | "childDataJson.nodeTools.audits"
    | "childDataJson.nodeTools.audits.name"
    | "childDataJson.nodeTools.audits.url"
    | "childDataJson.nodeTools.easyClientSwitching"
    | "childDataJson.nodeTools.hasBugBounty"
    | "childDataJson.nodeTools.hue"
    | "childDataJson.nodeTools.isFoss"
    | "childDataJson.nodeTools.isPermissionless"
    | "childDataJson.nodeTools.isTrustless"
    | "childDataJson.nodeTools.launchDate"
    | "childDataJson.nodeTools.matomo.eventAction"
    | "childDataJson.nodeTools.matomo.eventCategory"
    | "childDataJson.nodeTools.matomo.eventName"
    | "childDataJson.nodeTools.minEth"
    | "childDataJson.nodeTools.multiClient"
    | "childDataJson.nodeTools.name"
    | "childDataJson.nodeTools.platforms"
    | "childDataJson.nodeTools.socials.discord"
    | "childDataJson.nodeTools.socials.github"
    | "childDataJson.nodeTools.socials.telegram"
    | "childDataJson.nodeTools.socials.twitter"
    | "childDataJson.nodeTools.svgPath"
    | "childDataJson.nodeTools.tokens"
    | "childDataJson.nodeTools.tokens.address"
    | "childDataJson.nodeTools.tokens.name"
    | "childDataJson.nodeTools.tokens.symbol"
    | "childDataJson.nodeTools.ui"
    | "childDataJson.nodeTools.url"
    | "childDataJson.parent.children"
    | "childDataJson.parent.children.children"
    | "childDataJson.parent.children.id"
    | "childDataJson.parent.id"
    | "childDataJson.parent.internal.content"
    | "childDataJson.parent.internal.contentDigest"
    | "childDataJson.parent.internal.description"
    | "childDataJson.parent.internal.fieldOwners"
    | "childDataJson.parent.internal.ignoreType"
    | "childDataJson.parent.internal.mediaType"
    | "childDataJson.parent.internal.owner"
    | "childDataJson.parent.internal.type"
    | "childDataJson.parent.parent.children"
    | "childDataJson.parent.parent.id"
    | "childDataJson.pools"
    | "childDataJson.pools.audits"
    | "childDataJson.pools.audits.date"
    | "childDataJson.pools.audits.name"
    | "childDataJson.pools.audits.url"
    | "childDataJson.pools.feePercentage"
    | "childDataJson.pools.hasBugBounty"
    | "childDataJson.pools.hasPermissionlessNodes"
    | "childDataJson.pools.hue"
    | "childDataJson.pools.isFoss"
    | "childDataJson.pools.isTrustless"
    | "childDataJson.pools.launchDate"
    | "childDataJson.pools.matomo.eventAction"
    | "childDataJson.pools.matomo.eventCategory"
    | "childDataJson.pools.matomo.eventName"
    | "childDataJson.pools.minEth"
    | "childDataJson.pools.name"
    | "childDataJson.pools.pctMajorityClient"
    | "childDataJson.pools.platforms"
    | "childDataJson.pools.socials.discord"
    | "childDataJson.pools.socials.github"
    | "childDataJson.pools.socials.reddit"
    | "childDataJson.pools.socials.telegram"
    | "childDataJson.pools.socials.twitter"
    | "childDataJson.pools.svgPath"
    | "childDataJson.pools.telegram"
    | "childDataJson.pools.tokens"
    | "childDataJson.pools.tokens.address"
    | "childDataJson.pools.tokens.name"
    | "childDataJson.pools.tokens.symbol"
    | "childDataJson.pools.twitter"
    | "childDataJson.pools.ui"
    | "childDataJson.pools.url"
    | "childDataJson.projectName"
    | "childDataJson.projectOwner"
    | "childDataJson.repoHost"
    | "childDataJson.repoType"
    | "childDataJson.saas"
    | "childDataJson.saas.additionalStake"
    | "childDataJson.saas.additionalStakeUnit"
    | "childDataJson.saas.audits"
    | "childDataJson.saas.audits.date"
    | "childDataJson.saas.audits.name"
    | "childDataJson.saas.audits.url"
    | "childDataJson.saas.hasBugBounty"
    | "childDataJson.saas.hue"
    | "childDataJson.saas.isFoss"
    | "childDataJson.saas.isPermissionless"
    | "childDataJson.saas.isSelfCustody"
    | "childDataJson.saas.isTrustless"
    | "childDataJson.saas.launchDate"
    | "childDataJson.saas.matomo.eventAction"
    | "childDataJson.saas.matomo.eventCategory"
    | "childDataJson.saas.matomo.eventName"
    | "childDataJson.saas.minEth"
    | "childDataJson.saas.monthlyFee"
    | "childDataJson.saas.monthlyFeeUnit"
    | "childDataJson.saas.name"
    | "childDataJson.saas.pctMajorityClient"
    | "childDataJson.saas.platforms"
    | "childDataJson.saas.socials.discord"
    | "childDataJson.saas.socials.github"
    | "childDataJson.saas.socials.telegram"
    | "childDataJson.saas.socials.twitter"
    | "childDataJson.saas.svgPath"
    | "childDataJson.saas.ui"
    | "childDataJson.saas.url"
    | "childDataJson.skipCi"
    | "childExchangesByCountryCsv.binance"
    | "childExchangesByCountryCsv.binanceus"
    | "childExchangesByCountryCsv.bitbuy"
    | "childExchangesByCountryCsv.bitfinex"
    | "childExchangesByCountryCsv.bitflyer"
    | "childExchangesByCountryCsv.bitkub"
    | "childExchangesByCountryCsv.bitso"
    | "childExchangesByCountryCsv.bittrex"
    | "childExchangesByCountryCsv.bitvavo"
    | "childExchangesByCountryCsv.bybit"
    | "childExchangesByCountryCsv.children"
    | "childExchangesByCountryCsv.children.children"
    | "childExchangesByCountryCsv.children.children.children"
    | "childExchangesByCountryCsv.children.children.id"
    | "childExchangesByCountryCsv.children.id"
    | "childExchangesByCountryCsv.children.internal.content"
    | "childExchangesByCountryCsv.children.internal.contentDigest"
    | "childExchangesByCountryCsv.children.internal.description"
    | "childExchangesByCountryCsv.children.internal.fieldOwners"
    | "childExchangesByCountryCsv.children.internal.ignoreType"
    | "childExchangesByCountryCsv.children.internal.mediaType"
    | "childExchangesByCountryCsv.children.internal.owner"
    | "childExchangesByCountryCsv.children.internal.type"
    | "childExchangesByCountryCsv.children.parent.children"
    | "childExchangesByCountryCsv.children.parent.id"
    | "childExchangesByCountryCsv.coinbase"
    | "childExchangesByCountryCsv.coinmama"
    | "childExchangesByCountryCsv.coinspot"
    | "childExchangesByCountryCsv.country"
    | "childExchangesByCountryCsv.cryptocom"
    | "childExchangesByCountryCsv.easycrypto"
    | "childExchangesByCountryCsv.ftx"
    | "childExchangesByCountryCsv.ftxus"
    | "childExchangesByCountryCsv.gateio"
    | "childExchangesByCountryCsv.gemini"
    | "childExchangesByCountryCsv.huobiglobal"
    | "childExchangesByCountryCsv.id"
    | "childExchangesByCountryCsv.internal.content"
    | "childExchangesByCountryCsv.internal.contentDigest"
    | "childExchangesByCountryCsv.internal.description"
    | "childExchangesByCountryCsv.internal.fieldOwners"
    | "childExchangesByCountryCsv.internal.ignoreType"
    | "childExchangesByCountryCsv.internal.mediaType"
    | "childExchangesByCountryCsv.internal.owner"
    | "childExchangesByCountryCsv.internal.type"
    | "childExchangesByCountryCsv.itezcom"
    | "childExchangesByCountryCsv.kraken"
    | "childExchangesByCountryCsv.kucoin"
    | "childExchangesByCountryCsv.moonpay"
    | "childExchangesByCountryCsv.mtpelerin"
    | "childExchangesByCountryCsv.okx"
    | "childExchangesByCountryCsv.parent.children"
    | "childExchangesByCountryCsv.parent.children.children"
    | "childExchangesByCountryCsv.parent.children.id"
    | "childExchangesByCountryCsv.parent.id"
    | "childExchangesByCountryCsv.parent.internal.content"
    | "childExchangesByCountryCsv.parent.internal.contentDigest"
    | "childExchangesByCountryCsv.parent.internal.description"
    | "childExchangesByCountryCsv.parent.internal.fieldOwners"
    | "childExchangesByCountryCsv.parent.internal.ignoreType"
    | "childExchangesByCountryCsv.parent.internal.mediaType"
    | "childExchangesByCountryCsv.parent.internal.owner"
    | "childExchangesByCountryCsv.parent.internal.type"
    | "childExchangesByCountryCsv.parent.parent.children"
    | "childExchangesByCountryCsv.parent.parent.id"
    | "childExchangesByCountryCsv.rain"
    | "childExchangesByCountryCsv.simplex"
    | "childExchangesByCountryCsv.wazirx"
    | "childExchangesByCountryCsv.wyre"
    | "childExecutionBountyHuntersCsv.children"
    | "childExecutionBountyHuntersCsv.children.children"
    | "childExecutionBountyHuntersCsv.children.children.children"
    | "childExecutionBountyHuntersCsv.children.children.id"
    | "childExecutionBountyHuntersCsv.children.id"
    | "childExecutionBountyHuntersCsv.children.internal.content"
    | "childExecutionBountyHuntersCsv.children.internal.contentDigest"
    | "childExecutionBountyHuntersCsv.children.internal.description"
    | "childExecutionBountyHuntersCsv.children.internal.fieldOwners"
    | "childExecutionBountyHuntersCsv.children.internal.ignoreType"
    | "childExecutionBountyHuntersCsv.children.internal.mediaType"
    | "childExecutionBountyHuntersCsv.children.internal.owner"
    | "childExecutionBountyHuntersCsv.children.internal.type"
    | "childExecutionBountyHuntersCsv.children.parent.children"
    | "childExecutionBountyHuntersCsv.children.parent.id"
    | "childExecutionBountyHuntersCsv.id"
    | "childExecutionBountyHuntersCsv.internal.content"
    | "childExecutionBountyHuntersCsv.internal.contentDigest"
    | "childExecutionBountyHuntersCsv.internal.description"
    | "childExecutionBountyHuntersCsv.internal.fieldOwners"
    | "childExecutionBountyHuntersCsv.internal.ignoreType"
    | "childExecutionBountyHuntersCsv.internal.mediaType"
    | "childExecutionBountyHuntersCsv.internal.owner"
    | "childExecutionBountyHuntersCsv.internal.type"
    | "childExecutionBountyHuntersCsv.name"
    | "childExecutionBountyHuntersCsv.parent.children"
    | "childExecutionBountyHuntersCsv.parent.children.children"
    | "childExecutionBountyHuntersCsv.parent.children.id"
    | "childExecutionBountyHuntersCsv.parent.id"
    | "childExecutionBountyHuntersCsv.parent.internal.content"
    | "childExecutionBountyHuntersCsv.parent.internal.contentDigest"
    | "childExecutionBountyHuntersCsv.parent.internal.description"
    | "childExecutionBountyHuntersCsv.parent.internal.fieldOwners"
    | "childExecutionBountyHuntersCsv.parent.internal.ignoreType"
    | "childExecutionBountyHuntersCsv.parent.internal.mediaType"
    | "childExecutionBountyHuntersCsv.parent.internal.owner"
    | "childExecutionBountyHuntersCsv.parent.internal.type"
    | "childExecutionBountyHuntersCsv.parent.parent.children"
    | "childExecutionBountyHuntersCsv.parent.parent.id"
    | "childExecutionBountyHuntersCsv.score"
    | "childExecutionBountyHuntersCsv.username"
    | "childExternalTutorialsJson.author"
    | "childExternalTutorialsJson.authorGithub"
    | "childExternalTutorialsJson.children"
    | "childExternalTutorialsJson.children.children"
    | "childExternalTutorialsJson.children.children.children"
    | "childExternalTutorialsJson.children.children.id"
    | "childExternalTutorialsJson.children.id"
    | "childExternalTutorialsJson.children.internal.content"
    | "childExternalTutorialsJson.children.internal.contentDigest"
    | "childExternalTutorialsJson.children.internal.description"
    | "childExternalTutorialsJson.children.internal.fieldOwners"
    | "childExternalTutorialsJson.children.internal.ignoreType"
    | "childExternalTutorialsJson.children.internal.mediaType"
    | "childExternalTutorialsJson.children.internal.owner"
    | "childExternalTutorialsJson.children.internal.type"
    | "childExternalTutorialsJson.children.parent.children"
    | "childExternalTutorialsJson.children.parent.id"
    | "childExternalTutorialsJson.description"
    | "childExternalTutorialsJson.id"
    | "childExternalTutorialsJson.internal.content"
    | "childExternalTutorialsJson.internal.contentDigest"
    | "childExternalTutorialsJson.internal.description"
    | "childExternalTutorialsJson.internal.fieldOwners"
    | "childExternalTutorialsJson.internal.ignoreType"
    | "childExternalTutorialsJson.internal.mediaType"
    | "childExternalTutorialsJson.internal.owner"
    | "childExternalTutorialsJson.internal.type"
    | "childExternalTutorialsJson.lang"
    | "childExternalTutorialsJson.parent.children"
    | "childExternalTutorialsJson.parent.children.children"
    | "childExternalTutorialsJson.parent.children.id"
    | "childExternalTutorialsJson.parent.id"
    | "childExternalTutorialsJson.parent.internal.content"
    | "childExternalTutorialsJson.parent.internal.contentDigest"
    | "childExternalTutorialsJson.parent.internal.description"
    | "childExternalTutorialsJson.parent.internal.fieldOwners"
    | "childExternalTutorialsJson.parent.internal.ignoreType"
    | "childExternalTutorialsJson.parent.internal.mediaType"
    | "childExternalTutorialsJson.parent.internal.owner"
    | "childExternalTutorialsJson.parent.internal.type"
    | "childExternalTutorialsJson.parent.parent.children"
    | "childExternalTutorialsJson.parent.parent.id"
    | "childExternalTutorialsJson.publishDate"
    | "childExternalTutorialsJson.skillLevel"
    | "childExternalTutorialsJson.tags"
    | "childExternalTutorialsJson.timeToRead"
    | "childExternalTutorialsJson.title"
    | "childExternalTutorialsJson.url"
    | "childImageSharp.children"
    | "childImageSharp.children.children"
    | "childImageSharp.children.children.children"
    | "childImageSharp.children.children.id"
    | "childImageSharp.children.id"
    | "childImageSharp.children.internal.content"
    | "childImageSharp.children.internal.contentDigest"
    | "childImageSharp.children.internal.description"
    | "childImageSharp.children.internal.fieldOwners"
    | "childImageSharp.children.internal.ignoreType"
    | "childImageSharp.children.internal.mediaType"
    | "childImageSharp.children.internal.owner"
    | "childImageSharp.children.internal.type"
    | "childImageSharp.children.parent.children"
    | "childImageSharp.children.parent.id"
    | "childImageSharp.fixed.aspectRatio"
    | "childImageSharp.fixed.base64"
    | "childImageSharp.fixed.height"
    | "childImageSharp.fixed.originalName"
    | "childImageSharp.fixed.src"
    | "childImageSharp.fixed.srcSet"
    | "childImageSharp.fixed.srcSetWebp"
    | "childImageSharp.fixed.srcWebp"
    | "childImageSharp.fixed.tracedSVG"
    | "childImageSharp.fixed.width"
    | "childImageSharp.fluid.aspectRatio"
    | "childImageSharp.fluid.base64"
    | "childImageSharp.fluid.originalImg"
    | "childImageSharp.fluid.originalName"
    | "childImageSharp.fluid.presentationHeight"
    | "childImageSharp.fluid.presentationWidth"
    | "childImageSharp.fluid.sizes"
    | "childImageSharp.fluid.src"
    | "childImageSharp.fluid.srcSet"
    | "childImageSharp.fluid.srcSetWebp"
    | "childImageSharp.fluid.srcWebp"
    | "childImageSharp.fluid.tracedSVG"
    | "childImageSharp.gatsbyImageData"
    | "childImageSharp.id"
    | "childImageSharp.internal.content"
    | "childImageSharp.internal.contentDigest"
    | "childImageSharp.internal.description"
    | "childImageSharp.internal.fieldOwners"
    | "childImageSharp.internal.ignoreType"
    | "childImageSharp.internal.mediaType"
    | "childImageSharp.internal.owner"
    | "childImageSharp.internal.type"
    | "childImageSharp.original.height"
    | "childImageSharp.original.src"
    | "childImageSharp.original.width"
    | "childImageSharp.parent.children"
    | "childImageSharp.parent.children.children"
    | "childImageSharp.parent.children.id"
    | "childImageSharp.parent.id"
    | "childImageSharp.parent.internal.content"
    | "childImageSharp.parent.internal.contentDigest"
    | "childImageSharp.parent.internal.description"
    | "childImageSharp.parent.internal.fieldOwners"
    | "childImageSharp.parent.internal.ignoreType"
    | "childImageSharp.parent.internal.mediaType"
    | "childImageSharp.parent.internal.owner"
    | "childImageSharp.parent.internal.type"
    | "childImageSharp.parent.parent.children"
    | "childImageSharp.parent.parent.id"
    | "childImageSharp.resize.aspectRatio"
    | "childImageSharp.resize.height"
    | "childImageSharp.resize.originalName"
    | "childImageSharp.resize.src"
    | "childImageSharp.resize.tracedSVG"
    | "childImageSharp.resize.width"
    | "childLayer2Json.children"
    | "childLayer2Json.children.children"
    | "childLayer2Json.children.children.children"
    | "childLayer2Json.children.children.id"
    | "childLayer2Json.children.id"
    | "childLayer2Json.children.internal.content"
    | "childLayer2Json.children.internal.contentDigest"
    | "childLayer2Json.children.internal.description"
    | "childLayer2Json.children.internal.fieldOwners"
    | "childLayer2Json.children.internal.ignoreType"
    | "childLayer2Json.children.internal.mediaType"
    | "childLayer2Json.children.internal.owner"
    | "childLayer2Json.children.internal.type"
    | "childLayer2Json.children.parent.children"
    | "childLayer2Json.children.parent.id"
    | "childLayer2Json.id"
    | "childLayer2Json.internal.content"
    | "childLayer2Json.internal.contentDigest"
    | "childLayer2Json.internal.description"
    | "childLayer2Json.internal.fieldOwners"
    | "childLayer2Json.internal.ignoreType"
    | "childLayer2Json.internal.mediaType"
    | "childLayer2Json.internal.owner"
    | "childLayer2Json.internal.type"
    | "childLayer2Json.optimistic"
    | "childLayer2Json.optimistic.background"
    | "childLayer2Json.optimistic.blockExplorer"
    | "childLayer2Json.optimistic.bridge"
    | "childLayer2Json.optimistic.bridgeWallets"
    | "childLayer2Json.optimistic.description"
    | "childLayer2Json.optimistic.developerDocs"
    | "childLayer2Json.optimistic.ecosystemPortal"
    | "childLayer2Json.optimistic.imageKey"
    | "childLayer2Json.optimistic.l2beat"
    | "childLayer2Json.optimistic.name"
    | "childLayer2Json.optimistic.noteKey"
    | "childLayer2Json.optimistic.purpose"
    | "childLayer2Json.optimistic.tokenLists"
    | "childLayer2Json.optimistic.website"
    | "childLayer2Json.parent.children"
    | "childLayer2Json.parent.children.children"
    | "childLayer2Json.parent.children.id"
    | "childLayer2Json.parent.id"
    | "childLayer2Json.parent.internal.content"
    | "childLayer2Json.parent.internal.contentDigest"
    | "childLayer2Json.parent.internal.description"
    | "childLayer2Json.parent.internal.fieldOwners"
    | "childLayer2Json.parent.internal.ignoreType"
    | "childLayer2Json.parent.internal.mediaType"
    | "childLayer2Json.parent.internal.owner"
    | "childLayer2Json.parent.internal.type"
    | "childLayer2Json.parent.parent.children"
    | "childLayer2Json.parent.parent.id"
    | "childLayer2Json.zk"
    | "childLayer2Json.zk.background"
    | "childLayer2Json.zk.blockExplorer"
    | "childLayer2Json.zk.bridge"
    | "childLayer2Json.zk.bridgeWallets"
    | "childLayer2Json.zk.description"
    | "childLayer2Json.zk.developerDocs"
    | "childLayer2Json.zk.ecosystemPortal"
    | "childLayer2Json.zk.imageKey"
    | "childLayer2Json.zk.l2beat"
    | "childLayer2Json.zk.name"
    | "childLayer2Json.zk.noteKey"
    | "childLayer2Json.zk.purpose"
    | "childLayer2Json.zk.tokenLists"
    | "childLayer2Json.zk.website"
    | "childMdx.body"
    | "childMdx.children"
    | "childMdx.children.children"
    | "childMdx.children.children.children"
    | "childMdx.children.children.id"
    | "childMdx.children.id"
    | "childMdx.children.internal.content"
    | "childMdx.children.internal.contentDigest"
    | "childMdx.children.internal.description"
    | "childMdx.children.internal.fieldOwners"
    | "childMdx.children.internal.ignoreType"
    | "childMdx.children.internal.mediaType"
    | "childMdx.children.internal.owner"
    | "childMdx.children.internal.type"
    | "childMdx.children.parent.children"
    | "childMdx.children.parent.id"
    | "childMdx.excerpt"
    | "childMdx.fields.isOutdated"
    | "childMdx.fields.readingTime.minutes"
    | "childMdx.fields.readingTime.text"
    | "childMdx.fields.readingTime.time"
    | "childMdx.fields.readingTime.words"
    | "childMdx.fields.relativePath"
    | "childMdx.fields.slug"
    | "childMdx.fileAbsolutePath"
    | "childMdx.frontmatter.address"
    | "childMdx.frontmatter.alt"
    | "childMdx.frontmatter.author"
    | "childMdx.frontmatter.compensation"
    | "childMdx.frontmatter.description"
    | "childMdx.frontmatter.emoji"
    | "childMdx.frontmatter.image.absolutePath"
    | "childMdx.frontmatter.image.accessTime"
    | "childMdx.frontmatter.image.atime"
    | "childMdx.frontmatter.image.atimeMs"
    | "childMdx.frontmatter.image.base"
    | "childMdx.frontmatter.image.birthTime"
    | "childMdx.frontmatter.image.birthtime"
    | "childMdx.frontmatter.image.birthtimeMs"
    | "childMdx.frontmatter.image.blksize"
    | "childMdx.frontmatter.image.blocks"
    | "childMdx.frontmatter.image.changeTime"
    | "childMdx.frontmatter.image.children"
    | "childMdx.frontmatter.image.childrenAlltimeJson"
    | "childMdx.frontmatter.image.childrenCexLayer2SupportJson"
    | "childMdx.frontmatter.image.childrenCommunityEventsJson"
    | "childMdx.frontmatter.image.childrenCommunityMeetupsJson"
    | "childMdx.frontmatter.image.childrenConsensusBountyHuntersCsv"
    | "childMdx.frontmatter.image.childrenDataJson"
    | "childMdx.frontmatter.image.childrenExchangesByCountryCsv"
    | "childMdx.frontmatter.image.childrenExecutionBountyHuntersCsv"
    | "childMdx.frontmatter.image.childrenExternalTutorialsJson"
    | "childMdx.frontmatter.image.childrenImageSharp"
    | "childMdx.frontmatter.image.childrenLayer2Json"
    | "childMdx.frontmatter.image.childrenMdx"
    | "childMdx.frontmatter.image.childrenMonthJson"
    | "childMdx.frontmatter.image.childrenQuarterJson"
    | "childMdx.frontmatter.image.childrenWalletsCsv"
    | "childMdx.frontmatter.image.ctime"
    | "childMdx.frontmatter.image.ctimeMs"
    | "childMdx.frontmatter.image.dev"
    | "childMdx.frontmatter.image.dir"
    | "childMdx.frontmatter.image.ext"
    | "childMdx.frontmatter.image.extension"
    | "childMdx.frontmatter.image.gid"
    | "childMdx.frontmatter.image.id"
    | "childMdx.frontmatter.image.ino"
    | "childMdx.frontmatter.image.mode"
    | "childMdx.frontmatter.image.modifiedTime"
    | "childMdx.frontmatter.image.mtime"
    | "childMdx.frontmatter.image.mtimeMs"
    | "childMdx.frontmatter.image.name"
    | "childMdx.frontmatter.image.nlink"
    | "childMdx.frontmatter.image.prettySize"
    | "childMdx.frontmatter.image.publicURL"
    | "childMdx.frontmatter.image.rdev"
    | "childMdx.frontmatter.image.relativeDirectory"
    | "childMdx.frontmatter.image.relativePath"
    | "childMdx.frontmatter.image.root"
    | "childMdx.frontmatter.image.size"
    | "childMdx.frontmatter.image.sourceInstanceName"
    | "childMdx.frontmatter.image.uid"
    | "childMdx.frontmatter.incomplete"
    | "childMdx.frontmatter.isOutdated"
    | "childMdx.frontmatter.lang"
    | "childMdx.frontmatter.link"
    | "childMdx.frontmatter.location"
    | "childMdx.frontmatter.position"
    | "childMdx.frontmatter.published"
    | "childMdx.frontmatter.sidebar"
    | "childMdx.frontmatter.sidebarDepth"
    | "childMdx.frontmatter.skill"
    | "childMdx.frontmatter.source"
    | "childMdx.frontmatter.sourceUrl"
    | "childMdx.frontmatter.summaryPoint1"
    | "childMdx.frontmatter.summaryPoint2"
    | "childMdx.frontmatter.summaryPoint3"
    | "childMdx.frontmatter.summaryPoint4"
    | "childMdx.frontmatter.summaryPoints"
    | "childMdx.frontmatter.tags"
    | "childMdx.frontmatter.template"
    | "childMdx.frontmatter.title"
    | "childMdx.frontmatter.type"
    | "childMdx.headings"
    | "childMdx.headings.depth"
    | "childMdx.headings.value"
    | "childMdx.html"
    | "childMdx.id"
    | "childMdx.internal.content"
    | "childMdx.internal.contentDigest"
    | "childMdx.internal.description"
    | "childMdx.internal.fieldOwners"
    | "childMdx.internal.ignoreType"
    | "childMdx.internal.mediaType"
    | "childMdx.internal.owner"
    | "childMdx.internal.type"
    | "childMdx.mdxAST"
    | "childMdx.parent.children"
    | "childMdx.parent.children.children"
    | "childMdx.parent.children.id"
    | "childMdx.parent.id"
    | "childMdx.parent.internal.content"
    | "childMdx.parent.internal.contentDigest"
    | "childMdx.parent.internal.description"
    | "childMdx.parent.internal.fieldOwners"
    | "childMdx.parent.internal.ignoreType"
    | "childMdx.parent.internal.mediaType"
    | "childMdx.parent.internal.owner"
    | "childMdx.parent.internal.type"
    | "childMdx.parent.parent.children"
    | "childMdx.parent.parent.id"
    | "childMdx.rawBody"
    | "childMdx.slug"
    | "childMdx.tableOfContents"
    | "childMdx.timeToRead"
    | "childMdx.wordCount.paragraphs"
    | "childMdx.wordCount.sentences"
    | "childMdx.wordCount.words"
    | "childMonthJson.children"
    | "childMonthJson.children.children"
    | "childMonthJson.children.children.children"
    | "childMonthJson.children.children.id"
    | "childMonthJson.children.id"
    | "childMonthJson.children.internal.content"
    | "childMonthJson.children.internal.contentDigest"
    | "childMonthJson.children.internal.description"
    | "childMonthJson.children.internal.fieldOwners"
    | "childMonthJson.children.internal.ignoreType"
    | "childMonthJson.children.internal.mediaType"
    | "childMonthJson.children.internal.owner"
    | "childMonthJson.children.internal.type"
    | "childMonthJson.children.parent.children"
    | "childMonthJson.children.parent.id"
    | "childMonthJson.currency"
    | "childMonthJson.data"
    | "childMonthJson.data.languages"
    | "childMonthJson.data.user.avatarUrl"
    | "childMonthJson.data.user.fullName"
    | "childMonthJson.data.user.id"
    | "childMonthJson.data.user.preTranslated"
    | "childMonthJson.data.user.totalCosts"
    | "childMonthJson.data.user.userRole"
    | "childMonthJson.data.user.username"
    | "childMonthJson.dateRange.from"
    | "childMonthJson.dateRange.to"
    | "childMonthJson.id"
    | "childMonthJson.internal.content"
    | "childMonthJson.internal.contentDigest"
    | "childMonthJson.internal.description"
    | "childMonthJson.internal.fieldOwners"
    | "childMonthJson.internal.ignoreType"
    | "childMonthJson.internal.mediaType"
    | "childMonthJson.internal.owner"
    | "childMonthJson.internal.type"
    | "childMonthJson.mode"
    | "childMonthJson.name"
    | "childMonthJson.parent.children"
    | "childMonthJson.parent.children.children"
    | "childMonthJson.parent.children.id"
    | "childMonthJson.parent.id"
    | "childMonthJson.parent.internal.content"
    | "childMonthJson.parent.internal.contentDigest"
    | "childMonthJson.parent.internal.description"
    | "childMonthJson.parent.internal.fieldOwners"
    | "childMonthJson.parent.internal.ignoreType"
    | "childMonthJson.parent.internal.mediaType"
    | "childMonthJson.parent.internal.owner"
    | "childMonthJson.parent.internal.type"
    | "childMonthJson.parent.parent.children"
    | "childMonthJson.parent.parent.id"
    | "childMonthJson.totalCosts"
    | "childMonthJson.totalPreTranslated"
    | "childMonthJson.totalTMSavings"
    | "childMonthJson.unit"
    | "childMonthJson.url"
    | "childQuarterJson.children"
    | "childQuarterJson.children.children"
    | "childQuarterJson.children.children.children"
    | "childQuarterJson.children.children.id"
    | "childQuarterJson.children.id"
    | "childQuarterJson.children.internal.content"
    | "childQuarterJson.children.internal.contentDigest"
    | "childQuarterJson.children.internal.description"
    | "childQuarterJson.children.internal.fieldOwners"
    | "childQuarterJson.children.internal.ignoreType"
    | "childQuarterJson.children.internal.mediaType"
    | "childQuarterJson.children.internal.owner"
    | "childQuarterJson.children.internal.type"
    | "childQuarterJson.children.parent.children"
    | "childQuarterJson.children.parent.id"
    | "childQuarterJson.currency"
    | "childQuarterJson.data"
    | "childQuarterJson.data.languages"
    | "childQuarterJson.data.user.avatarUrl"
    | "childQuarterJson.data.user.fullName"
    | "childQuarterJson.data.user.id"
    | "childQuarterJson.data.user.preTranslated"
    | "childQuarterJson.data.user.totalCosts"
    | "childQuarterJson.data.user.userRole"
    | "childQuarterJson.data.user.username"
    | "childQuarterJson.dateRange.from"
    | "childQuarterJson.dateRange.to"
    | "childQuarterJson.id"
    | "childQuarterJson.internal.content"
    | "childQuarterJson.internal.contentDigest"
    | "childQuarterJson.internal.description"
    | "childQuarterJson.internal.fieldOwners"
    | "childQuarterJson.internal.ignoreType"
    | "childQuarterJson.internal.mediaType"
    | "childQuarterJson.internal.owner"
    | "childQuarterJson.internal.type"
    | "childQuarterJson.mode"
    | "childQuarterJson.name"
    | "childQuarterJson.parent.children"
    | "childQuarterJson.parent.children.children"
    | "childQuarterJson.parent.children.id"
    | "childQuarterJson.parent.id"
    | "childQuarterJson.parent.internal.content"
    | "childQuarterJson.parent.internal.contentDigest"
    | "childQuarterJson.parent.internal.description"
    | "childQuarterJson.parent.internal.fieldOwners"
    | "childQuarterJson.parent.internal.ignoreType"
    | "childQuarterJson.parent.internal.mediaType"
    | "childQuarterJson.parent.internal.owner"
    | "childQuarterJson.parent.internal.type"
    | "childQuarterJson.parent.parent.children"
    | "childQuarterJson.parent.parent.id"
    | "childQuarterJson.totalCosts"
    | "childQuarterJson.totalPreTranslated"
    | "childQuarterJson.totalTMSavings"
    | "childQuarterJson.unit"
    | "childQuarterJson.url"
    | "childWalletsCsv.brand_color"
    | "childWalletsCsv.children"
    | "childWalletsCsv.children.children"
    | "childWalletsCsv.children.children.children"
    | "childWalletsCsv.children.children.id"
    | "childWalletsCsv.children.id"
    | "childWalletsCsv.children.internal.content"
    | "childWalletsCsv.children.internal.contentDigest"
    | "childWalletsCsv.children.internal.description"
    | "childWalletsCsv.children.internal.fieldOwners"
    | "childWalletsCsv.children.internal.ignoreType"
    | "childWalletsCsv.children.internal.mediaType"
    | "childWalletsCsv.children.internal.owner"
    | "childWalletsCsv.children.internal.type"
    | "childWalletsCsv.children.parent.children"
    | "childWalletsCsv.children.parent.id"
    | "childWalletsCsv.has_bank_withdrawals"
    | "childWalletsCsv.has_card_deposits"
    | "childWalletsCsv.has_defi_integrations"
    | "childWalletsCsv.has_desktop"
    | "childWalletsCsv.has_dex_integrations"
    | "childWalletsCsv.has_explore_dapps"
    | "childWalletsCsv.has_hardware"
    | "childWalletsCsv.has_high_volume_purchases"
    | "childWalletsCsv.has_limits_protection"
    | "childWalletsCsv.has_mobile"
    | "childWalletsCsv.has_multisig"
    | "childWalletsCsv.has_web"
    | "childWalletsCsv.id"
    | "childWalletsCsv.internal.content"
    | "childWalletsCsv.internal.contentDigest"
    | "childWalletsCsv.internal.description"
    | "childWalletsCsv.internal.fieldOwners"
    | "childWalletsCsv.internal.ignoreType"
    | "childWalletsCsv.internal.mediaType"
    | "childWalletsCsv.internal.owner"
    | "childWalletsCsv.internal.type"
    | "childWalletsCsv.name"
    | "childWalletsCsv.parent.children"
    | "childWalletsCsv.parent.children.children"
    | "childWalletsCsv.parent.children.id"
    | "childWalletsCsv.parent.id"
    | "childWalletsCsv.parent.internal.content"
    | "childWalletsCsv.parent.internal.contentDigest"
    | "childWalletsCsv.parent.internal.description"
    | "childWalletsCsv.parent.internal.fieldOwners"
    | "childWalletsCsv.parent.internal.ignoreType"
    | "childWalletsCsv.parent.internal.mediaType"
    | "childWalletsCsv.parent.internal.owner"
    | "childWalletsCsv.parent.internal.type"
    | "childWalletsCsv.parent.parent.children"
    | "childWalletsCsv.parent.parent.id"
    | "childWalletsCsv.url"
    | "children"
    | "childrenAlltimeJson"
    | "childrenAlltimeJson.children"
    | "childrenAlltimeJson.children.children"
    | "childrenAlltimeJson.children.children.children"
    | "childrenAlltimeJson.children.children.id"
    | "childrenAlltimeJson.children.id"
    | "childrenAlltimeJson.children.internal.content"
    | "childrenAlltimeJson.children.internal.contentDigest"
    | "childrenAlltimeJson.children.internal.description"
    | "childrenAlltimeJson.children.internal.fieldOwners"
    | "childrenAlltimeJson.children.internal.ignoreType"
    | "childrenAlltimeJson.children.internal.mediaType"
    | "childrenAlltimeJson.children.internal.owner"
    | "childrenAlltimeJson.children.internal.type"
    | "childrenAlltimeJson.children.parent.children"
    | "childrenAlltimeJson.children.parent.id"
    | "childrenAlltimeJson.currency"
    | "childrenAlltimeJson.data"
    | "childrenAlltimeJson.data.languages"
    | "childrenAlltimeJson.data.user.avatarUrl"
    | "childrenAlltimeJson.data.user.fullName"
    | "childrenAlltimeJson.data.user.id"
    | "childrenAlltimeJson.data.user.preTranslated"
    | "childrenAlltimeJson.data.user.totalCosts"
    | "childrenAlltimeJson.data.user.userRole"
    | "childrenAlltimeJson.data.user.username"
    | "childrenAlltimeJson.dateRange.from"
    | "childrenAlltimeJson.dateRange.to"
    | "childrenAlltimeJson.id"
    | "childrenAlltimeJson.internal.content"
    | "childrenAlltimeJson.internal.contentDigest"
    | "childrenAlltimeJson.internal.description"
    | "childrenAlltimeJson.internal.fieldOwners"
    | "childrenAlltimeJson.internal.ignoreType"
    | "childrenAlltimeJson.internal.mediaType"
    | "childrenAlltimeJson.internal.owner"
    | "childrenAlltimeJson.internal.type"
    | "childrenAlltimeJson.mode"
    | "childrenAlltimeJson.name"
    | "childrenAlltimeJson.parent.children"
    | "childrenAlltimeJson.parent.children.children"
    | "childrenAlltimeJson.parent.children.id"
    | "childrenAlltimeJson.parent.id"
    | "childrenAlltimeJson.parent.internal.content"
    | "childrenAlltimeJson.parent.internal.contentDigest"
    | "childrenAlltimeJson.parent.internal.description"
    | "childrenAlltimeJson.parent.internal.fieldOwners"
    | "childrenAlltimeJson.parent.internal.ignoreType"
    | "childrenAlltimeJson.parent.internal.mediaType"
    | "childrenAlltimeJson.parent.internal.owner"
    | "childrenAlltimeJson.parent.internal.type"
    | "childrenAlltimeJson.parent.parent.children"
    | "childrenAlltimeJson.parent.parent.id"
    | "childrenAlltimeJson.totalCosts"
    | "childrenAlltimeJson.totalPreTranslated"
    | "childrenAlltimeJson.totalTMSavings"
    | "childrenAlltimeJson.unit"
    | "childrenAlltimeJson.url"
    | "childrenCexLayer2SupportJson"
    | "childrenCexLayer2SupportJson.children"
    | "childrenCexLayer2SupportJson.children.children"
    | "childrenCexLayer2SupportJson.children.children.children"
    | "childrenCexLayer2SupportJson.children.children.id"
    | "childrenCexLayer2SupportJson.children.id"
    | "childrenCexLayer2SupportJson.children.internal.content"
    | "childrenCexLayer2SupportJson.children.internal.contentDigest"
    | "childrenCexLayer2SupportJson.children.internal.description"
    | "childrenCexLayer2SupportJson.children.internal.fieldOwners"
    | "childrenCexLayer2SupportJson.children.internal.ignoreType"
    | "childrenCexLayer2SupportJson.children.internal.mediaType"
    | "childrenCexLayer2SupportJson.children.internal.owner"
    | "childrenCexLayer2SupportJson.children.internal.type"
    | "childrenCexLayer2SupportJson.children.parent.children"
    | "childrenCexLayer2SupportJson.children.parent.id"
    | "childrenCexLayer2SupportJson.id"
    | "childrenCexLayer2SupportJson.internal.content"
    | "childrenCexLayer2SupportJson.internal.contentDigest"
    | "childrenCexLayer2SupportJson.internal.description"
    | "childrenCexLayer2SupportJson.internal.fieldOwners"
    | "childrenCexLayer2SupportJson.internal.ignoreType"
    | "childrenCexLayer2SupportJson.internal.mediaType"
    | "childrenCexLayer2SupportJson.internal.owner"
    | "childrenCexLayer2SupportJson.internal.type"
    | "childrenCexLayer2SupportJson.name"
    | "childrenCexLayer2SupportJson.parent.children"
    | "childrenCexLayer2SupportJson.parent.children.children"
    | "childrenCexLayer2SupportJson.parent.children.id"
    | "childrenCexLayer2SupportJson.parent.id"
    | "childrenCexLayer2SupportJson.parent.internal.content"
    | "childrenCexLayer2SupportJson.parent.internal.contentDigest"
    | "childrenCexLayer2SupportJson.parent.internal.description"
    | "childrenCexLayer2SupportJson.parent.internal.fieldOwners"
    | "childrenCexLayer2SupportJson.parent.internal.ignoreType"
    | "childrenCexLayer2SupportJson.parent.internal.mediaType"
    | "childrenCexLayer2SupportJson.parent.internal.owner"
    | "childrenCexLayer2SupportJson.parent.internal.type"
    | "childrenCexLayer2SupportJson.parent.parent.children"
    | "childrenCexLayer2SupportJson.parent.parent.id"
    | "childrenCexLayer2SupportJson.supports_deposits"
    | "childrenCexLayer2SupportJson.supports_withdrawals"
    | "childrenCexLayer2SupportJson.url"
    | "childrenCommunityEventsJson"
    | "childrenCommunityEventsJson.children"
    | "childrenCommunityEventsJson.children.children"
    | "childrenCommunityEventsJson.children.children.children"
    | "childrenCommunityEventsJson.children.children.id"
    | "childrenCommunityEventsJson.children.id"
    | "childrenCommunityEventsJson.children.internal.content"
    | "childrenCommunityEventsJson.children.internal.contentDigest"
    | "childrenCommunityEventsJson.children.internal.description"
    | "childrenCommunityEventsJson.children.internal.fieldOwners"
    | "childrenCommunityEventsJson.children.internal.ignoreType"
    | "childrenCommunityEventsJson.children.internal.mediaType"
    | "childrenCommunityEventsJson.children.internal.owner"
    | "childrenCommunityEventsJson.children.internal.type"
    | "childrenCommunityEventsJson.children.parent.children"
    | "childrenCommunityEventsJson.children.parent.id"
    | "childrenCommunityEventsJson.description"
    | "childrenCommunityEventsJson.endDate"
    | "childrenCommunityEventsJson.id"
    | "childrenCommunityEventsJson.internal.content"
    | "childrenCommunityEventsJson.internal.contentDigest"
    | "childrenCommunityEventsJson.internal.description"
    | "childrenCommunityEventsJson.internal.fieldOwners"
    | "childrenCommunityEventsJson.internal.ignoreType"
    | "childrenCommunityEventsJson.internal.mediaType"
    | "childrenCommunityEventsJson.internal.owner"
    | "childrenCommunityEventsJson.internal.type"
    | "childrenCommunityEventsJson.location"
    | "childrenCommunityEventsJson.parent.children"
    | "childrenCommunityEventsJson.parent.children.children"
    | "childrenCommunityEventsJson.parent.children.id"
    | "childrenCommunityEventsJson.parent.id"
    | "childrenCommunityEventsJson.parent.internal.content"
    | "childrenCommunityEventsJson.parent.internal.contentDigest"
    | "childrenCommunityEventsJson.parent.internal.description"
    | "childrenCommunityEventsJson.parent.internal.fieldOwners"
    | "childrenCommunityEventsJson.parent.internal.ignoreType"
    | "childrenCommunityEventsJson.parent.internal.mediaType"
    | "childrenCommunityEventsJson.parent.internal.owner"
    | "childrenCommunityEventsJson.parent.internal.type"
    | "childrenCommunityEventsJson.parent.parent.children"
    | "childrenCommunityEventsJson.parent.parent.id"
    | "childrenCommunityEventsJson.sponsor"
    | "childrenCommunityEventsJson.startDate"
    | "childrenCommunityEventsJson.title"
    | "childrenCommunityEventsJson.to"
    | "childrenCommunityMeetupsJson"
    | "childrenCommunityMeetupsJson.children"
    | "childrenCommunityMeetupsJson.children.children"
    | "childrenCommunityMeetupsJson.children.children.children"
    | "childrenCommunityMeetupsJson.children.children.id"
    | "childrenCommunityMeetupsJson.children.id"
    | "childrenCommunityMeetupsJson.children.internal.content"
    | "childrenCommunityMeetupsJson.children.internal.contentDigest"
    | "childrenCommunityMeetupsJson.children.internal.description"
    | "childrenCommunityMeetupsJson.children.internal.fieldOwners"
    | "childrenCommunityMeetupsJson.children.internal.ignoreType"
    | "childrenCommunityMeetupsJson.children.internal.mediaType"
    | "childrenCommunityMeetupsJson.children.internal.owner"
    | "childrenCommunityMeetupsJson.children.internal.type"
    | "childrenCommunityMeetupsJson.children.parent.children"
    | "childrenCommunityMeetupsJson.children.parent.id"
    | "childrenCommunityMeetupsJson.emoji"
    | "childrenCommunityMeetupsJson.id"
    | "childrenCommunityMeetupsJson.internal.content"
    | "childrenCommunityMeetupsJson.internal.contentDigest"
    | "childrenCommunityMeetupsJson.internal.description"
    | "childrenCommunityMeetupsJson.internal.fieldOwners"
    | "childrenCommunityMeetupsJson.internal.ignoreType"
    | "childrenCommunityMeetupsJson.internal.mediaType"
    | "childrenCommunityMeetupsJson.internal.owner"
    | "childrenCommunityMeetupsJson.internal.type"
    | "childrenCommunityMeetupsJson.link"
    | "childrenCommunityMeetupsJson.location"
    | "childrenCommunityMeetupsJson.parent.children"
    | "childrenCommunityMeetupsJson.parent.children.children"
    | "childrenCommunityMeetupsJson.parent.children.id"
    | "childrenCommunityMeetupsJson.parent.id"
    | "childrenCommunityMeetupsJson.parent.internal.content"
    | "childrenCommunityMeetupsJson.parent.internal.contentDigest"
    | "childrenCommunityMeetupsJson.parent.internal.description"
    | "childrenCommunityMeetupsJson.parent.internal.fieldOwners"
    | "childrenCommunityMeetupsJson.parent.internal.ignoreType"
    | "childrenCommunityMeetupsJson.parent.internal.mediaType"
    | "childrenCommunityMeetupsJson.parent.internal.owner"
    | "childrenCommunityMeetupsJson.parent.internal.type"
    | "childrenCommunityMeetupsJson.parent.parent.children"
    | "childrenCommunityMeetupsJson.parent.parent.id"
    | "childrenCommunityMeetupsJson.title"
    | "childrenConsensusBountyHuntersCsv"
    | "childrenConsensusBountyHuntersCsv.children"
    | "childrenConsensusBountyHuntersCsv.children.children"
    | "childrenConsensusBountyHuntersCsv.children.children.children"
    | "childrenConsensusBountyHuntersCsv.children.children.id"
    | "childrenConsensusBountyHuntersCsv.children.id"
    | "childrenConsensusBountyHuntersCsv.children.internal.content"
    | "childrenConsensusBountyHuntersCsv.children.internal.contentDigest"
    | "childrenConsensusBountyHuntersCsv.children.internal.description"
    | "childrenConsensusBountyHuntersCsv.children.internal.fieldOwners"
    | "childrenConsensusBountyHuntersCsv.children.internal.ignoreType"
    | "childrenConsensusBountyHuntersCsv.children.internal.mediaType"
    | "childrenConsensusBountyHuntersCsv.children.internal.owner"
    | "childrenConsensusBountyHuntersCsv.children.internal.type"
    | "childrenConsensusBountyHuntersCsv.children.parent.children"
    | "childrenConsensusBountyHuntersCsv.children.parent.id"
    | "childrenConsensusBountyHuntersCsv.id"
    | "childrenConsensusBountyHuntersCsv.internal.content"
    | "childrenConsensusBountyHuntersCsv.internal.contentDigest"
    | "childrenConsensusBountyHuntersCsv.internal.description"
    | "childrenConsensusBountyHuntersCsv.internal.fieldOwners"
    | "childrenConsensusBountyHuntersCsv.internal.ignoreType"
    | "childrenConsensusBountyHuntersCsv.internal.mediaType"
    | "childrenConsensusBountyHuntersCsv.internal.owner"
    | "childrenConsensusBountyHuntersCsv.internal.type"
    | "childrenConsensusBountyHuntersCsv.name"
    | "childrenConsensusBountyHuntersCsv.parent.children"
    | "childrenConsensusBountyHuntersCsv.parent.children.children"
    | "childrenConsensusBountyHuntersCsv.parent.children.id"
    | "childrenConsensusBountyHuntersCsv.parent.id"
    | "childrenConsensusBountyHuntersCsv.parent.internal.content"
    | "childrenConsensusBountyHuntersCsv.parent.internal.contentDigest"
    | "childrenConsensusBountyHuntersCsv.parent.internal.description"
    | "childrenConsensusBountyHuntersCsv.parent.internal.fieldOwners"
    | "childrenConsensusBountyHuntersCsv.parent.internal.ignoreType"
    | "childrenConsensusBountyHuntersCsv.parent.internal.mediaType"
    | "childrenConsensusBountyHuntersCsv.parent.internal.owner"
    | "childrenConsensusBountyHuntersCsv.parent.internal.type"
    | "childrenConsensusBountyHuntersCsv.parent.parent.children"
    | "childrenConsensusBountyHuntersCsv.parent.parent.id"
    | "childrenConsensusBountyHuntersCsv.score"
    | "childrenConsensusBountyHuntersCsv.username"
    | "childrenDataJson"
    | "childrenDataJson.children"
    | "childrenDataJson.children.children"
    | "childrenDataJson.children.children.children"
    | "childrenDataJson.children.children.id"
    | "childrenDataJson.children.id"
    | "childrenDataJson.children.internal.content"
    | "childrenDataJson.children.internal.contentDigest"
    | "childrenDataJson.children.internal.description"
    | "childrenDataJson.children.internal.fieldOwners"
    | "childrenDataJson.children.internal.ignoreType"
    | "childrenDataJson.children.internal.mediaType"
    | "childrenDataJson.children.internal.owner"
    | "childrenDataJson.children.internal.type"
    | "childrenDataJson.children.parent.children"
    | "childrenDataJson.children.parent.id"
    | "childrenDataJson.commit"
    | "childrenDataJson.contributors"
    | "childrenDataJson.contributorsPerLine"
    | "childrenDataJson.contributors.avatar_url"
    | "childrenDataJson.contributors.contributions"
    | "childrenDataJson.contributors.login"
    | "childrenDataJson.contributors.name"
    | "childrenDataJson.contributors.profile"
    | "childrenDataJson.files"
    | "childrenDataJson.id"
    | "childrenDataJson.imageSize"
    | "childrenDataJson.internal.content"
    | "childrenDataJson.internal.contentDigest"
    | "childrenDataJson.internal.description"
    | "childrenDataJson.internal.fieldOwners"
    | "childrenDataJson.internal.ignoreType"
    | "childrenDataJson.internal.mediaType"
    | "childrenDataJson.internal.owner"
    | "childrenDataJson.internal.type"
    | "childrenDataJson.keyGen"
    | "childrenDataJson.keyGen.audits"
    | "childrenDataJson.keyGen.audits.name"
    | "childrenDataJson.keyGen.audits.url"
    | "childrenDataJson.keyGen.hasBugBounty"
    | "childrenDataJson.keyGen.hue"
    | "childrenDataJson.keyGen.isFoss"
    | "childrenDataJson.keyGen.isPermissionless"
    | "childrenDataJson.keyGen.isSelfCustody"
    | "childrenDataJson.keyGen.isTrustless"
    | "childrenDataJson.keyGen.launchDate"
    | "childrenDataJson.keyGen.matomo.eventAction"
    | "childrenDataJson.keyGen.matomo.eventCategory"
    | "childrenDataJson.keyGen.matomo.eventName"
    | "childrenDataJson.keyGen.name"
    | "childrenDataJson.keyGen.platforms"
    | "childrenDataJson.keyGen.socials.discord"
    | "childrenDataJson.keyGen.socials.github"
    | "childrenDataJson.keyGen.socials.twitter"
    | "childrenDataJson.keyGen.svgPath"
    | "childrenDataJson.keyGen.ui"
    | "childrenDataJson.keyGen.url"
    | "childrenDataJson.nodeTools"
    | "childrenDataJson.nodeTools.additionalStake"
    | "childrenDataJson.nodeTools.additionalStakeUnit"
    | "childrenDataJson.nodeTools.audits"
    | "childrenDataJson.nodeTools.audits.name"
    | "childrenDataJson.nodeTools.audits.url"
    | "childrenDataJson.nodeTools.easyClientSwitching"
    | "childrenDataJson.nodeTools.hasBugBounty"
    | "childrenDataJson.nodeTools.hue"
    | "childrenDataJson.nodeTools.isFoss"
    | "childrenDataJson.nodeTools.isPermissionless"
    | "childrenDataJson.nodeTools.isTrustless"
    | "childrenDataJson.nodeTools.launchDate"
    | "childrenDataJson.nodeTools.matomo.eventAction"
    | "childrenDataJson.nodeTools.matomo.eventCategory"
    | "childrenDataJson.nodeTools.matomo.eventName"
    | "childrenDataJson.nodeTools.minEth"
    | "childrenDataJson.nodeTools.multiClient"
    | "childrenDataJson.nodeTools.name"
    | "childrenDataJson.nodeTools.platforms"
    | "childrenDataJson.nodeTools.socials.discord"
    | "childrenDataJson.nodeTools.socials.github"
    | "childrenDataJson.nodeTools.socials.telegram"
    | "childrenDataJson.nodeTools.socials.twitter"
    | "childrenDataJson.nodeTools.svgPath"
    | "childrenDataJson.nodeTools.tokens"
    | "childrenDataJson.nodeTools.tokens.address"
    | "childrenDataJson.nodeTools.tokens.name"
    | "childrenDataJson.nodeTools.tokens.symbol"
    | "childrenDataJson.nodeTools.ui"
    | "childrenDataJson.nodeTools.url"
    | "childrenDataJson.parent.children"
    | "childrenDataJson.parent.children.children"
    | "childrenDataJson.parent.children.id"
    | "childrenDataJson.parent.id"
    | "childrenDataJson.parent.internal.content"
    | "childrenDataJson.parent.internal.contentDigest"
    | "childrenDataJson.parent.internal.description"
    | "childrenDataJson.parent.internal.fieldOwners"
    | "childrenDataJson.parent.internal.ignoreType"
    | "childrenDataJson.parent.internal.mediaType"
    | "childrenDataJson.parent.internal.owner"
    | "childrenDataJson.parent.internal.type"
    | "childrenDataJson.parent.parent.children"
    | "childrenDataJson.parent.parent.id"
    | "childrenDataJson.pools"
    | "childrenDataJson.pools.audits"
    | "childrenDataJson.pools.audits.date"
    | "childrenDataJson.pools.audits.name"
    | "childrenDataJson.pools.audits.url"
    | "childrenDataJson.pools.feePercentage"
    | "childrenDataJson.pools.hasBugBounty"
    | "childrenDataJson.pools.hasPermissionlessNodes"
    | "childrenDataJson.pools.hue"
    | "childrenDataJson.pools.isFoss"
    | "childrenDataJson.pools.isTrustless"
    | "childrenDataJson.pools.launchDate"
    | "childrenDataJson.pools.matomo.eventAction"
    | "childrenDataJson.pools.matomo.eventCategory"
    | "childrenDataJson.pools.matomo.eventName"
    | "childrenDataJson.pools.minEth"
    | "childrenDataJson.pools.name"
    | "childrenDataJson.pools.pctMajorityClient"
    | "childrenDataJson.pools.platforms"
    | "childrenDataJson.pools.socials.discord"
    | "childrenDataJson.pools.socials.github"
    | "childrenDataJson.pools.socials.reddit"
    | "childrenDataJson.pools.socials.telegram"
    | "childrenDataJson.pools.socials.twitter"
    | "childrenDataJson.pools.svgPath"
    | "childrenDataJson.pools.telegram"
    | "childrenDataJson.pools.tokens"
    | "childrenDataJson.pools.tokens.address"
    | "childrenDataJson.pools.tokens.name"
    | "childrenDataJson.pools.tokens.symbol"
    | "childrenDataJson.pools.twitter"
    | "childrenDataJson.pools.ui"
    | "childrenDataJson.pools.url"
    | "childrenDataJson.projectName"
    | "childrenDataJson.projectOwner"
    | "childrenDataJson.repoHost"
    | "childrenDataJson.repoType"
    | "childrenDataJson.saas"
    | "childrenDataJson.saas.additionalStake"
    | "childrenDataJson.saas.additionalStakeUnit"
    | "childrenDataJson.saas.audits"
    | "childrenDataJson.saas.audits.date"
    | "childrenDataJson.saas.audits.name"
    | "childrenDataJson.saas.audits.url"
    | "childrenDataJson.saas.hasBugBounty"
    | "childrenDataJson.saas.hue"
    | "childrenDataJson.saas.isFoss"
    | "childrenDataJson.saas.isPermissionless"
    | "childrenDataJson.saas.isSelfCustody"
    | "childrenDataJson.saas.isTrustless"
    | "childrenDataJson.saas.launchDate"
    | "childrenDataJson.saas.matomo.eventAction"
    | "childrenDataJson.saas.matomo.eventCategory"
    | "childrenDataJson.saas.matomo.eventName"
    | "childrenDataJson.saas.minEth"
    | "childrenDataJson.saas.monthlyFee"
    | "childrenDataJson.saas.monthlyFeeUnit"
    | "childrenDataJson.saas.name"
    | "childrenDataJson.saas.pctMajorityClient"
    | "childrenDataJson.saas.platforms"
    | "childrenDataJson.saas.socials.discord"
    | "childrenDataJson.saas.socials.github"
    | "childrenDataJson.saas.socials.telegram"
    | "childrenDataJson.saas.socials.twitter"
    | "childrenDataJson.saas.svgPath"
    | "childrenDataJson.saas.ui"
    | "childrenDataJson.saas.url"
    | "childrenDataJson.skipCi"
    | "childrenExchangesByCountryCsv"
    | "childrenExchangesByCountryCsv.binance"
    | "childrenExchangesByCountryCsv.binanceus"
    | "childrenExchangesByCountryCsv.bitbuy"
    | "childrenExchangesByCountryCsv.bitfinex"
    | "childrenExchangesByCountryCsv.bitflyer"
    | "childrenExchangesByCountryCsv.bitkub"
    | "childrenExchangesByCountryCsv.bitso"
    | "childrenExchangesByCountryCsv.bittrex"
    | "childrenExchangesByCountryCsv.bitvavo"
    | "childrenExchangesByCountryCsv.bybit"
    | "childrenExchangesByCountryCsv.children"
    | "childrenExchangesByCountryCsv.children.children"
    | "childrenExchangesByCountryCsv.children.children.children"
    | "childrenExchangesByCountryCsv.children.children.id"
    | "childrenExchangesByCountryCsv.children.id"
    | "childrenExchangesByCountryCsv.children.internal.content"
    | "childrenExchangesByCountryCsv.children.internal.contentDigest"
    | "childrenExchangesByCountryCsv.children.internal.description"
    | "childrenExchangesByCountryCsv.children.internal.fieldOwners"
    | "childrenExchangesByCountryCsv.children.internal.ignoreType"
    | "childrenExchangesByCountryCsv.children.internal.mediaType"
    | "childrenExchangesByCountryCsv.children.internal.owner"
    | "childrenExchangesByCountryCsv.children.internal.type"
    | "childrenExchangesByCountryCsv.children.parent.children"
    | "childrenExchangesByCountryCsv.children.parent.id"
    | "childrenExchangesByCountryCsv.coinbase"
    | "childrenExchangesByCountryCsv.coinmama"
    | "childrenExchangesByCountryCsv.coinspot"
    | "childrenExchangesByCountryCsv.country"
    | "childrenExchangesByCountryCsv.cryptocom"
    | "childrenExchangesByCountryCsv.easycrypto"
    | "childrenExchangesByCountryCsv.ftx"
    | "childrenExchangesByCountryCsv.ftxus"
    | "childrenExchangesByCountryCsv.gateio"
    | "childrenExchangesByCountryCsv.gemini"
    | "childrenExchangesByCountryCsv.huobiglobal"
    | "childrenExchangesByCountryCsv.id"
    | "childrenExchangesByCountryCsv.internal.content"
    | "childrenExchangesByCountryCsv.internal.contentDigest"
    | "childrenExchangesByCountryCsv.internal.description"
    | "childrenExchangesByCountryCsv.internal.fieldOwners"
    | "childrenExchangesByCountryCsv.internal.ignoreType"
    | "childrenExchangesByCountryCsv.internal.mediaType"
    | "childrenExchangesByCountryCsv.internal.owner"
    | "childrenExchangesByCountryCsv.internal.type"
    | "childrenExchangesByCountryCsv.itezcom"
    | "childrenExchangesByCountryCsv.kraken"
    | "childrenExchangesByCountryCsv.kucoin"
    | "childrenExchangesByCountryCsv.moonpay"
    | "childrenExchangesByCountryCsv.mtpelerin"
    | "childrenExchangesByCountryCsv.okx"
    | "childrenExchangesByCountryCsv.parent.children"
    | "childrenExchangesByCountryCsv.parent.children.children"
    | "childrenExchangesByCountryCsv.parent.children.id"
    | "childrenExchangesByCountryCsv.parent.id"
    | "childrenExchangesByCountryCsv.parent.internal.content"
    | "childrenExchangesByCountryCsv.parent.internal.contentDigest"
    | "childrenExchangesByCountryCsv.parent.internal.description"
    | "childrenExchangesByCountryCsv.parent.internal.fieldOwners"
    | "childrenExchangesByCountryCsv.parent.internal.ignoreType"
    | "childrenExchangesByCountryCsv.parent.internal.mediaType"
    | "childrenExchangesByCountryCsv.parent.internal.owner"
    | "childrenExchangesByCountryCsv.parent.internal.type"
    | "childrenExchangesByCountryCsv.parent.parent.children"
    | "childrenExchangesByCountryCsv.parent.parent.id"
    | "childrenExchangesByCountryCsv.rain"
    | "childrenExchangesByCountryCsv.simplex"
    | "childrenExchangesByCountryCsv.wazirx"
    | "childrenExchangesByCountryCsv.wyre"
    | "childrenExecutionBountyHuntersCsv"
    | "childrenExecutionBountyHuntersCsv.children"
    | "childrenExecutionBountyHuntersCsv.children.children"
    | "childrenExecutionBountyHuntersCsv.children.children.children"
    | "childrenExecutionBountyHuntersCsv.children.children.id"
    | "childrenExecutionBountyHuntersCsv.children.id"
    | "childrenExecutionBountyHuntersCsv.children.internal.content"
    | "childrenExecutionBountyHuntersCsv.children.internal.contentDigest"
    | "childrenExecutionBountyHuntersCsv.children.internal.description"
    | "childrenExecutionBountyHuntersCsv.children.internal.fieldOwners"
    | "childrenExecutionBountyHuntersCsv.children.internal.ignoreType"
    | "childrenExecutionBountyHuntersCsv.children.internal.mediaType"
    | "childrenExecutionBountyHuntersCsv.children.internal.owner"
    | "childrenExecutionBountyHuntersCsv.children.internal.type"
    | "childrenExecutionBountyHuntersCsv.children.parent.children"
    | "childrenExecutionBountyHuntersCsv.children.parent.id"
    | "childrenExecutionBountyHuntersCsv.id"
    | "childrenExecutionBountyHuntersCsv.internal.content"
    | "childrenExecutionBountyHuntersCsv.internal.contentDigest"
    | "childrenExecutionBountyHuntersCsv.internal.description"
    | "childrenExecutionBountyHuntersCsv.internal.fieldOwners"
    | "childrenExecutionBountyHuntersCsv.internal.ignoreType"
    | "childrenExecutionBountyHuntersCsv.internal.mediaType"
    | "childrenExecutionBountyHuntersCsv.internal.owner"
    | "childrenExecutionBountyHuntersCsv.internal.type"
    | "childrenExecutionBountyHuntersCsv.name"
    | "childrenExecutionBountyHuntersCsv.parent.children"
    | "childrenExecutionBountyHuntersCsv.parent.children.children"
    | "childrenExecutionBountyHuntersCsv.parent.children.id"
    | "childrenExecutionBountyHuntersCsv.parent.id"
    | "childrenExecutionBountyHuntersCsv.parent.internal.content"
    | "childrenExecutionBountyHuntersCsv.parent.internal.contentDigest"
    | "childrenExecutionBountyHuntersCsv.parent.internal.description"
    | "childrenExecutionBountyHuntersCsv.parent.internal.fieldOwners"
    | "childrenExecutionBountyHuntersCsv.parent.internal.ignoreType"
    | "childrenExecutionBountyHuntersCsv.parent.internal.mediaType"
    | "childrenExecutionBountyHuntersCsv.parent.internal.owner"
    | "childrenExecutionBountyHuntersCsv.parent.internal.type"
    | "childrenExecutionBountyHuntersCsv.parent.parent.children"
    | "childrenExecutionBountyHuntersCsv.parent.parent.id"
    | "childrenExecutionBountyHuntersCsv.score"
    | "childrenExecutionBountyHuntersCsv.username"
    | "childrenExternalTutorialsJson"
    | "childrenExternalTutorialsJson.author"
    | "childrenExternalTutorialsJson.authorGithub"
    | "childrenExternalTutorialsJson.children"
    | "childrenExternalTutorialsJson.children.children"
    | "childrenExternalTutorialsJson.children.children.children"
    | "childrenExternalTutorialsJson.children.children.id"
    | "childrenExternalTutorialsJson.children.id"
    | "childrenExternalTutorialsJson.children.internal.content"
    | "childrenExternalTutorialsJson.children.internal.contentDigest"
    | "childrenExternalTutorialsJson.children.internal.description"
    | "childrenExternalTutorialsJson.children.internal.fieldOwners"
    | "childrenExternalTutorialsJson.children.internal.ignoreType"
    | "childrenExternalTutorialsJson.children.internal.mediaType"
    | "childrenExternalTutorialsJson.children.internal.owner"
    | "childrenExternalTutorialsJson.children.internal.type"
    | "childrenExternalTutorialsJson.children.parent.children"
    | "childrenExternalTutorialsJson.children.parent.id"
    | "childrenExternalTutorialsJson.description"
    | "childrenExternalTutorialsJson.id"
    | "childrenExternalTutorialsJson.internal.content"
    | "childrenExternalTutorialsJson.internal.contentDigest"
    | "childrenExternalTutorialsJson.internal.description"
    | "childrenExternalTutorialsJson.internal.fieldOwners"
    | "childrenExternalTutorialsJson.internal.ignoreType"
    | "childrenExternalTutorialsJson.internal.mediaType"
    | "childrenExternalTutorialsJson.internal.owner"
    | "childrenExternalTutorialsJson.internal.type"
    | "childrenExternalTutorialsJson.lang"
    | "childrenExternalTutorialsJson.parent.children"
    | "childrenExternalTutorialsJson.parent.children.children"
    | "childrenExternalTutorialsJson.parent.children.id"
    | "childrenExternalTutorialsJson.parent.id"
    | "childrenExternalTutorialsJson.parent.internal.content"
    | "childrenExternalTutorialsJson.parent.internal.contentDigest"
    | "childrenExternalTutorialsJson.parent.internal.description"
    | "childrenExternalTutorialsJson.parent.internal.fieldOwners"
    | "childrenExternalTutorialsJson.parent.internal.ignoreType"
    | "childrenExternalTutorialsJson.parent.internal.mediaType"
    | "childrenExternalTutorialsJson.parent.internal.owner"
    | "childrenExternalTutorialsJson.parent.internal.type"
    | "childrenExternalTutorialsJson.parent.parent.children"
    | "childrenExternalTutorialsJson.parent.parent.id"
    | "childrenExternalTutorialsJson.publishDate"
    | "childrenExternalTutorialsJson.skillLevel"
    | "childrenExternalTutorialsJson.tags"
    | "childrenExternalTutorialsJson.timeToRead"
    | "childrenExternalTutorialsJson.title"
    | "childrenExternalTutorialsJson.url"
    | "childrenImageSharp"
    | "childrenImageSharp.children"
    | "childrenImageSharp.children.children"
    | "childrenImageSharp.children.children.children"
    | "childrenImageSharp.children.children.id"
    | "childrenImageSharp.children.id"
    | "childrenImageSharp.children.internal.content"
    | "childrenImageSharp.children.internal.contentDigest"
    | "childrenImageSharp.children.internal.description"
    | "childrenImageSharp.children.internal.fieldOwners"
    | "childrenImageSharp.children.internal.ignoreType"
    | "childrenImageSharp.children.internal.mediaType"
    | "childrenImageSharp.children.internal.owner"
    | "childrenImageSharp.children.internal.type"
    | "childrenImageSharp.children.parent.children"
    | "childrenImageSharp.children.parent.id"
    | "childrenImageSharp.fixed.aspectRatio"
    | "childrenImageSharp.fixed.base64"
    | "childrenImageSharp.fixed.height"
    | "childrenImageSharp.fixed.originalName"
    | "childrenImageSharp.fixed.src"
    | "childrenImageSharp.fixed.srcSet"
    | "childrenImageSharp.fixed.srcSetWebp"
    | "childrenImageSharp.fixed.srcWebp"
    | "childrenImageSharp.fixed.tracedSVG"
    | "childrenImageSharp.fixed.width"
    | "childrenImageSharp.fluid.aspectRatio"
    | "childrenImageSharp.fluid.base64"
    | "childrenImageSharp.fluid.originalImg"
    | "childrenImageSharp.fluid.originalName"
    | "childrenImageSharp.fluid.presentationHeight"
    | "childrenImageSharp.fluid.presentationWidth"
    | "childrenImageSharp.fluid.sizes"
    | "childrenImageSharp.fluid.src"
    | "childrenImageSharp.fluid.srcSet"
    | "childrenImageSharp.fluid.srcSetWebp"
    | "childrenImageSharp.fluid.srcWebp"
    | "childrenImageSharp.fluid.tracedSVG"
    | "childrenImageSharp.gatsbyImageData"
    | "childrenImageSharp.id"
    | "childrenImageSharp.internal.content"
    | "childrenImageSharp.internal.contentDigest"
    | "childrenImageSharp.internal.description"
    | "childrenImageSharp.internal.fieldOwners"
    | "childrenImageSharp.internal.ignoreType"
    | "childrenImageSharp.internal.mediaType"
    | "childrenImageSharp.internal.owner"
    | "childrenImageSharp.internal.type"
    | "childrenImageSharp.original.height"
    | "childrenImageSharp.original.src"
    | "childrenImageSharp.original.width"
    | "childrenImageSharp.parent.children"
    | "childrenImageSharp.parent.children.children"
    | "childrenImageSharp.parent.children.id"
    | "childrenImageSharp.parent.id"
    | "childrenImageSharp.parent.internal.content"
    | "childrenImageSharp.parent.internal.contentDigest"
    | "childrenImageSharp.parent.internal.description"
    | "childrenImageSharp.parent.internal.fieldOwners"
    | "childrenImageSharp.parent.internal.ignoreType"
    | "childrenImageSharp.parent.internal.mediaType"
    | "childrenImageSharp.parent.internal.owner"
    | "childrenImageSharp.parent.internal.type"
    | "childrenImageSharp.parent.parent.children"
    | "childrenImageSharp.parent.parent.id"
    | "childrenImageSharp.resize.aspectRatio"
    | "childrenImageSharp.resize.height"
    | "childrenImageSharp.resize.originalName"
    | "childrenImageSharp.resize.src"
    | "childrenImageSharp.resize.tracedSVG"
    | "childrenImageSharp.resize.width"
    | "childrenLayer2Json"
    | "childrenLayer2Json.children"
    | "childrenLayer2Json.children.children"
    | "childrenLayer2Json.children.children.children"
    | "childrenLayer2Json.children.children.id"
    | "childrenLayer2Json.children.id"
    | "childrenLayer2Json.children.internal.content"
    | "childrenLayer2Json.children.internal.contentDigest"
    | "childrenLayer2Json.children.internal.description"
    | "childrenLayer2Json.children.internal.fieldOwners"
    | "childrenLayer2Json.children.internal.ignoreType"
    | "childrenLayer2Json.children.internal.mediaType"
    | "childrenLayer2Json.children.internal.owner"
    | "childrenLayer2Json.children.internal.type"
    | "childrenLayer2Json.children.parent.children"
    | "childrenLayer2Json.children.parent.id"
    | "childrenLayer2Json.id"
    | "childrenLayer2Json.internal.content"
    | "childrenLayer2Json.internal.contentDigest"
    | "childrenLayer2Json.internal.description"
    | "childrenLayer2Json.internal.fieldOwners"
    | "childrenLayer2Json.internal.ignoreType"
    | "childrenLayer2Json.internal.mediaType"
    | "childrenLayer2Json.internal.owner"
    | "childrenLayer2Json.internal.type"
    | "childrenLayer2Json.optimistic"
    | "childrenLayer2Json.optimistic.background"
    | "childrenLayer2Json.optimistic.blockExplorer"
    | "childrenLayer2Json.optimistic.bridge"
    | "childrenLayer2Json.optimistic.bridgeWallets"
    | "childrenLayer2Json.optimistic.description"
    | "childrenLayer2Json.optimistic.developerDocs"
    | "childrenLayer2Json.optimistic.ecosystemPortal"
    | "childrenLayer2Json.optimistic.imageKey"
    | "childrenLayer2Json.optimistic.l2beat"
    | "childrenLayer2Json.optimistic.name"
    | "childrenLayer2Json.optimistic.noteKey"
    | "childrenLayer2Json.optimistic.purpose"
    | "childrenLayer2Json.optimistic.tokenLists"
    | "childrenLayer2Json.optimistic.website"
    | "childrenLayer2Json.parent.children"
    | "childrenLayer2Json.parent.children.children"
    | "childrenLayer2Json.parent.children.id"
    | "childrenLayer2Json.parent.id"
    | "childrenLayer2Json.parent.internal.content"
    | "childrenLayer2Json.parent.internal.contentDigest"
    | "childrenLayer2Json.parent.internal.description"
    | "childrenLayer2Json.parent.internal.fieldOwners"
    | "childrenLayer2Json.parent.internal.ignoreType"
    | "childrenLayer2Json.parent.internal.mediaType"
    | "childrenLayer2Json.parent.internal.owner"
    | "childrenLayer2Json.parent.internal.type"
    | "childrenLayer2Json.parent.parent.children"
    | "childrenLayer2Json.parent.parent.id"
    | "childrenLayer2Json.zk"
    | "childrenLayer2Json.zk.background"
    | "childrenLayer2Json.zk.blockExplorer"
    | "childrenLayer2Json.zk.bridge"
    | "childrenLayer2Json.zk.bridgeWallets"
    | "childrenLayer2Json.zk.description"
    | "childrenLayer2Json.zk.developerDocs"
    | "childrenLayer2Json.zk.ecosystemPortal"
    | "childrenLayer2Json.zk.imageKey"
    | "childrenLayer2Json.zk.l2beat"
    | "childrenLayer2Json.zk.name"
    | "childrenLayer2Json.zk.noteKey"
    | "childrenLayer2Json.zk.purpose"
    | "childrenLayer2Json.zk.tokenLists"
    | "childrenLayer2Json.zk.website"
    | "childrenMdx"
    | "childrenMdx.body"
    | "childrenMdx.children"
    | "childrenMdx.children.children"
    | "childrenMdx.children.children.children"
    | "childrenMdx.children.children.id"
    | "childrenMdx.children.id"
    | "childrenMdx.children.internal.content"
    | "childrenMdx.children.internal.contentDigest"
    | "childrenMdx.children.internal.description"
    | "childrenMdx.children.internal.fieldOwners"
    | "childrenMdx.children.internal.ignoreType"
    | "childrenMdx.children.internal.mediaType"
    | "childrenMdx.children.internal.owner"
    | "childrenMdx.children.internal.type"
    | "childrenMdx.children.parent.children"
    | "childrenMdx.children.parent.id"
    | "childrenMdx.excerpt"
    | "childrenMdx.fields.isOutdated"
    | "childrenMdx.fields.readingTime.minutes"
    | "childrenMdx.fields.readingTime.text"
    | "childrenMdx.fields.readingTime.time"
    | "childrenMdx.fields.readingTime.words"
    | "childrenMdx.fields.relativePath"
    | "childrenMdx.fields.slug"
    | "childrenMdx.fileAbsolutePath"
    | "childrenMdx.frontmatter.address"
    | "childrenMdx.frontmatter.alt"
    | "childrenMdx.frontmatter.author"
    | "childrenMdx.frontmatter.compensation"
    | "childrenMdx.frontmatter.description"
    | "childrenMdx.frontmatter.emoji"
    | "childrenMdx.frontmatter.image.absolutePath"
    | "childrenMdx.frontmatter.image.accessTime"
    | "childrenMdx.frontmatter.image.atime"
    | "childrenMdx.frontmatter.image.atimeMs"
    | "childrenMdx.frontmatter.image.base"
    | "childrenMdx.frontmatter.image.birthTime"
    | "childrenMdx.frontmatter.image.birthtime"
    | "childrenMdx.frontmatter.image.birthtimeMs"
    | "childrenMdx.frontmatter.image.blksize"
    | "childrenMdx.frontmatter.image.blocks"
    | "childrenMdx.frontmatter.image.changeTime"
    | "childrenMdx.frontmatter.image.children"
    | "childrenMdx.frontmatter.image.childrenAlltimeJson"
    | "childrenMdx.frontmatter.image.childrenCexLayer2SupportJson"
    | "childrenMdx.frontmatter.image.childrenCommunityEventsJson"
    | "childrenMdx.frontmatter.image.childrenCommunityMeetupsJson"
    | "childrenMdx.frontmatter.image.childrenConsensusBountyHuntersCsv"
    | "childrenMdx.frontmatter.image.childrenDataJson"
    | "childrenMdx.frontmatter.image.childrenExchangesByCountryCsv"
    | "childrenMdx.frontmatter.image.childrenExecutionBountyHuntersCsv"
    | "childrenMdx.frontmatter.image.childrenExternalTutorialsJson"
    | "childrenMdx.frontmatter.image.childrenImageSharp"
    | "childrenMdx.frontmatter.image.childrenLayer2Json"
    | "childrenMdx.frontmatter.image.childrenMdx"
    | "childrenMdx.frontmatter.image.childrenMonthJson"
    | "childrenMdx.frontmatter.image.childrenQuarterJson"
    | "childrenMdx.frontmatter.image.childrenWalletsCsv"
    | "childrenMdx.frontmatter.image.ctime"
    | "childrenMdx.frontmatter.image.ctimeMs"
    | "childrenMdx.frontmatter.image.dev"
    | "childrenMdx.frontmatter.image.dir"
    | "childrenMdx.frontmatter.image.ext"
    | "childrenMdx.frontmatter.image.extension"
    | "childrenMdx.frontmatter.image.gid"
    | "childrenMdx.frontmatter.image.id"
    | "childrenMdx.frontmatter.image.ino"
    | "childrenMdx.frontmatter.image.mode"
    | "childrenMdx.frontmatter.image.modifiedTime"
    | "childrenMdx.frontmatter.image.mtime"
    | "childrenMdx.frontmatter.image.mtimeMs"
    | "childrenMdx.frontmatter.image.name"
    | "childrenMdx.frontmatter.image.nlink"
    | "childrenMdx.frontmatter.image.prettySize"
    | "childrenMdx.frontmatter.image.publicURL"
    | "childrenMdx.frontmatter.image.rdev"
    | "childrenMdx.frontmatter.image.relativeDirectory"
    | "childrenMdx.frontmatter.image.relativePath"
    | "childrenMdx.frontmatter.image.root"
    | "childrenMdx.frontmatter.image.size"
    | "childrenMdx.frontmatter.image.sourceInstanceName"
    | "childrenMdx.frontmatter.image.uid"
    | "childrenMdx.frontmatter.incomplete"
    | "childrenMdx.frontmatter.isOutdated"
    | "childrenMdx.frontmatter.lang"
    | "childrenMdx.frontmatter.link"
    | "childrenMdx.frontmatter.location"
    | "childrenMdx.frontmatter.position"
    | "childrenMdx.frontmatter.published"
    | "childrenMdx.frontmatter.sidebar"
    | "childrenMdx.frontmatter.sidebarDepth"
    | "childrenMdx.frontmatter.skill"
    | "childrenMdx.frontmatter.source"
    | "childrenMdx.frontmatter.sourceUrl"
    | "childrenMdx.frontmatter.summaryPoint1"
    | "childrenMdx.frontmatter.summaryPoint2"
    | "childrenMdx.frontmatter.summaryPoint3"
    | "childrenMdx.frontmatter.summaryPoint4"
    | "childrenMdx.frontmatter.summaryPoints"
    | "childrenMdx.frontmatter.tags"
    | "childrenMdx.frontmatter.template"
    | "childrenMdx.frontmatter.title"
    | "childrenMdx.frontmatter.type"
    | "childrenMdx.headings"
    | "childrenMdx.headings.depth"
    | "childrenMdx.headings.value"
    | "childrenMdx.html"
    | "childrenMdx.id"
    | "childrenMdx.internal.content"
    | "childrenMdx.internal.contentDigest"
    | "childrenMdx.internal.description"
    | "childrenMdx.internal.fieldOwners"
    | "childrenMdx.internal.ignoreType"
    | "childrenMdx.internal.mediaType"
    | "childrenMdx.internal.owner"
    | "childrenMdx.internal.type"
    | "childrenMdx.mdxAST"
    | "childrenMdx.parent.children"
    | "childrenMdx.parent.children.children"
    | "childrenMdx.parent.children.id"
    | "childrenMdx.parent.id"
    | "childrenMdx.parent.internal.content"
    | "childrenMdx.parent.internal.contentDigest"
    | "childrenMdx.parent.internal.description"
    | "childrenMdx.parent.internal.fieldOwners"
    | "childrenMdx.parent.internal.ignoreType"
    | "childrenMdx.parent.internal.mediaType"
    | "childrenMdx.parent.internal.owner"
    | "childrenMdx.parent.internal.type"
    | "childrenMdx.parent.parent.children"
    | "childrenMdx.parent.parent.id"
    | "childrenMdx.rawBody"
    | "childrenMdx.slug"
    | "childrenMdx.tableOfContents"
    | "childrenMdx.timeToRead"
    | "childrenMdx.wordCount.paragraphs"
    | "childrenMdx.wordCount.sentences"
    | "childrenMdx.wordCount.words"
    | "childrenMonthJson"
    | "childrenMonthJson.children"
    | "childrenMonthJson.children.children"
    | "childrenMonthJson.children.children.children"
    | "childrenMonthJson.children.children.id"
    | "childrenMonthJson.children.id"
    | "childrenMonthJson.children.internal.content"
    | "childrenMonthJson.children.internal.contentDigest"
    | "childrenMonthJson.children.internal.description"
    | "childrenMonthJson.children.internal.fieldOwners"
    | "childrenMonthJson.children.internal.ignoreType"
    | "childrenMonthJson.children.internal.mediaType"
    | "childrenMonthJson.children.internal.owner"
    | "childrenMonthJson.children.internal.type"
    | "childrenMonthJson.children.parent.children"
    | "childrenMonthJson.children.parent.id"
    | "childrenMonthJson.currency"
    | "childrenMonthJson.data"
    | "childrenMonthJson.data.languages"
    | "childrenMonthJson.data.user.avatarUrl"
    | "childrenMonthJson.data.user.fullName"
    | "childrenMonthJson.data.user.id"
    | "childrenMonthJson.data.user.preTranslated"
    | "childrenMonthJson.data.user.totalCosts"
    | "childrenMonthJson.data.user.userRole"
    | "childrenMonthJson.data.user.username"
    | "childrenMonthJson.dateRange.from"
    | "childrenMonthJson.dateRange.to"
    | "childrenMonthJson.id"
    | "childrenMonthJson.internal.content"
    | "childrenMonthJson.internal.contentDigest"
    | "childrenMonthJson.internal.description"
    | "childrenMonthJson.internal.fieldOwners"
    | "childrenMonthJson.internal.ignoreType"
    | "childrenMonthJson.internal.mediaType"
    | "childrenMonthJson.internal.owner"
    | "childrenMonthJson.internal.type"
    | "childrenMonthJson.mode"
    | "childrenMonthJson.name"
    | "childrenMonthJson.parent.children"
    | "childrenMonthJson.parent.children.children"
    | "childrenMonthJson.parent.children.id"
    | "childrenMonthJson.parent.id"
    | "childrenMonthJson.parent.internal.content"
    | "childrenMonthJson.parent.internal.contentDigest"
    | "childrenMonthJson.parent.internal.description"
    | "childrenMonthJson.parent.internal.fieldOwners"
    | "childrenMonthJson.parent.internal.ignoreType"
    | "childrenMonthJson.parent.internal.mediaType"
    | "childrenMonthJson.parent.internal.owner"
    | "childrenMonthJson.parent.internal.type"
    | "childrenMonthJson.parent.parent.children"
    | "childrenMonthJson.parent.parent.id"
    | "childrenMonthJson.totalCosts"
    | "childrenMonthJson.totalPreTranslated"
    | "childrenMonthJson.totalTMSavings"
    | "childrenMonthJson.unit"
    | "childrenMonthJson.url"
    | "childrenQuarterJson"
    | "childrenQuarterJson.children"
    | "childrenQuarterJson.children.children"
    | "childrenQuarterJson.children.children.children"
    | "childrenQuarterJson.children.children.id"
    | "childrenQuarterJson.children.id"
    | "childrenQuarterJson.children.internal.content"
    | "childrenQuarterJson.children.internal.contentDigest"
    | "childrenQuarterJson.children.internal.description"
    | "childrenQuarterJson.children.internal.fieldOwners"
    | "childrenQuarterJson.children.internal.ignoreType"
    | "childrenQuarterJson.children.internal.mediaType"
    | "childrenQuarterJson.children.internal.owner"
    | "childrenQuarterJson.children.internal.type"
    | "childrenQuarterJson.children.parent.children"
    | "childrenQuarterJson.children.parent.id"
    | "childrenQuarterJson.currency"
    | "childrenQuarterJson.data"
    | "childrenQuarterJson.data.languages"
    | "childrenQuarterJson.data.user.avatarUrl"
    | "childrenQuarterJson.data.user.fullName"
    | "childrenQuarterJson.data.user.id"
    | "childrenQuarterJson.data.user.preTranslated"
    | "childrenQuarterJson.data.user.totalCosts"
    | "childrenQuarterJson.data.user.userRole"
    | "childrenQuarterJson.data.user.username"
    | "childrenQuarterJson.dateRange.from"
    | "childrenQuarterJson.dateRange.to"
    | "childrenQuarterJson.id"
    | "childrenQuarterJson.internal.content"
    | "childrenQuarterJson.internal.contentDigest"
    | "childrenQuarterJson.internal.description"
    | "childrenQuarterJson.internal.fieldOwners"
    | "childrenQuarterJson.internal.ignoreType"
    | "childrenQuarterJson.internal.mediaType"
    | "childrenQuarterJson.internal.owner"
    | "childrenQuarterJson.internal.type"
    | "childrenQuarterJson.mode"
    | "childrenQuarterJson.name"
    | "childrenQuarterJson.parent.children"
    | "childrenQuarterJson.parent.children.children"
    | "childrenQuarterJson.parent.children.id"
    | "childrenQuarterJson.parent.id"
    | "childrenQuarterJson.parent.internal.content"
    | "childrenQuarterJson.parent.internal.contentDigest"
    | "childrenQuarterJson.parent.internal.description"
    | "childrenQuarterJson.parent.internal.fieldOwners"
    | "childrenQuarterJson.parent.internal.ignoreType"
    | "childrenQuarterJson.parent.internal.mediaType"
    | "childrenQuarterJson.parent.internal.owner"
    | "childrenQuarterJson.parent.internal.type"
    | "childrenQuarterJson.parent.parent.children"
    | "childrenQuarterJson.parent.parent.id"
    | "childrenQuarterJson.totalCosts"
    | "childrenQuarterJson.totalPreTranslated"
    | "childrenQuarterJson.totalTMSavings"
    | "childrenQuarterJson.unit"
    | "childrenQuarterJson.url"
    | "childrenWalletsCsv"
    | "childrenWalletsCsv.brand_color"
    | "childrenWalletsCsv.children"
    | "childrenWalletsCsv.children.children"
    | "childrenWalletsCsv.children.children.children"
    | "childrenWalletsCsv.children.children.id"
    | "childrenWalletsCsv.children.id"
    | "childrenWalletsCsv.children.internal.content"
    | "childrenWalletsCsv.children.internal.contentDigest"
    | "childrenWalletsCsv.children.internal.description"
    | "childrenWalletsCsv.children.internal.fieldOwners"
    | "childrenWalletsCsv.children.internal.ignoreType"
    | "childrenWalletsCsv.children.internal.mediaType"
    | "childrenWalletsCsv.children.internal.owner"
    | "childrenWalletsCsv.children.internal.type"
    | "childrenWalletsCsv.children.parent.children"
    | "childrenWalletsCsv.children.parent.id"
    | "childrenWalletsCsv.has_bank_withdrawals"
    | "childrenWalletsCsv.has_card_deposits"
    | "childrenWalletsCsv.has_defi_integrations"
    | "childrenWalletsCsv.has_desktop"
    | "childrenWalletsCsv.has_dex_integrations"
    | "childrenWalletsCsv.has_explore_dapps"
    | "childrenWalletsCsv.has_hardware"
    | "childrenWalletsCsv.has_high_volume_purchases"
    | "childrenWalletsCsv.has_limits_protection"
    | "childrenWalletsCsv.has_mobile"
    | "childrenWalletsCsv.has_multisig"
    | "childrenWalletsCsv.has_web"
    | "childrenWalletsCsv.id"
    | "childrenWalletsCsv.internal.content"
    | "childrenWalletsCsv.internal.contentDigest"
    | "childrenWalletsCsv.internal.description"
    | "childrenWalletsCsv.internal.fieldOwners"
    | "childrenWalletsCsv.internal.ignoreType"
    | "childrenWalletsCsv.internal.mediaType"
    | "childrenWalletsCsv.internal.owner"
    | "childrenWalletsCsv.internal.type"
    | "childrenWalletsCsv.name"
    | "childrenWalletsCsv.parent.children"
    | "childrenWalletsCsv.parent.children.children"
    | "childrenWalletsCsv.parent.children.id"
    | "childrenWalletsCsv.parent.id"
    | "childrenWalletsCsv.parent.internal.content"
    | "childrenWalletsCsv.parent.internal.contentDigest"
    | "childrenWalletsCsv.parent.internal.description"
    | "childrenWalletsCsv.parent.internal.fieldOwners"
    | "childrenWalletsCsv.parent.internal.ignoreType"
    | "childrenWalletsCsv.parent.internal.mediaType"
    | "childrenWalletsCsv.parent.internal.owner"
    | "childrenWalletsCsv.parent.internal.type"
    | "childrenWalletsCsv.parent.parent.children"
    | "childrenWalletsCsv.parent.parent.id"
    | "childrenWalletsCsv.url"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "ctime"
    | "ctimeMs"
    | "dev"
    | "dir"
    | "ext"
    | "extension"
    | "fields.gitLogLatestAuthorEmail"
    | "fields.gitLogLatestAuthorName"
    | "fields.gitLogLatestDate"
    | "gid"
    | "id"
    | "ino"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "mode"
    | "modifiedTime"
    | "mtime"
    | "mtimeMs"
    | "name"
    | "nlink"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "prettySize"
    | "publicURL"
    | "rdev"
    | "relativeDirectory"
    | "relativePath"
    | "root"
    | "size"
    | "sourceInstanceName"
    | "uid"

  type FileFieldsFilterInput = {
    readonly gitLogLatestAuthorEmail: InputMaybe<StringQueryOperatorInput>
    readonly gitLogLatestAuthorName: InputMaybe<StringQueryOperatorInput>
    readonly gitLogLatestDate: InputMaybe<DateQueryOperatorInput>
  }

  type FileFilterInput = {
    readonly absolutePath: InputMaybe<StringQueryOperatorInput>
    readonly accessTime: InputMaybe<DateQueryOperatorInput>
    readonly atime: InputMaybe<DateQueryOperatorInput>
    readonly atimeMs: InputMaybe<FloatQueryOperatorInput>
    readonly base: InputMaybe<StringQueryOperatorInput>
    readonly birthTime: InputMaybe<DateQueryOperatorInput>
    readonly birthtime: InputMaybe<DateQueryOperatorInput>
    readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>
    readonly blksize: InputMaybe<IntQueryOperatorInput>
    readonly blocks: InputMaybe<IntQueryOperatorInput>
    readonly changeTime: InputMaybe<DateQueryOperatorInput>
    readonly childAlltimeJson: InputMaybe<AlltimeJsonFilterInput>
    readonly childCexLayer2SupportJson: InputMaybe<CexLayer2SupportJsonFilterInput>
    readonly childCommunityEventsJson: InputMaybe<CommunityEventsJsonFilterInput>
    readonly childCommunityMeetupsJson: InputMaybe<CommunityMeetupsJsonFilterInput>
    readonly childConsensusBountyHuntersCsv: InputMaybe<ConsensusBountyHuntersCsvFilterInput>
    readonly childDataJson: InputMaybe<DataJsonFilterInput>
    readonly childExchangesByCountryCsv: InputMaybe<ExchangesByCountryCsvFilterInput>
    readonly childExecutionBountyHuntersCsv: InputMaybe<ExecutionBountyHuntersCsvFilterInput>
    readonly childExternalTutorialsJson: InputMaybe<ExternalTutorialsJsonFilterInput>
    readonly childImageSharp: InputMaybe<ImageSharpFilterInput>
    readonly childLayer2Json: InputMaybe<Layer2JsonFilterInput>
    readonly childMdx: InputMaybe<MdxFilterInput>
    readonly childMonthJson: InputMaybe<MonthJsonFilterInput>
    readonly childQuarterJson: InputMaybe<QuarterJsonFilterInput>
    readonly childWalletsCsv: InputMaybe<WalletsCsvFilterInput>
    readonly children: InputMaybe<NodeFilterListInput>
    readonly childrenAlltimeJson: InputMaybe<AlltimeJsonFilterListInput>
    readonly childrenCexLayer2SupportJson: InputMaybe<CexLayer2SupportJsonFilterListInput>
    readonly childrenCommunityEventsJson: InputMaybe<CommunityEventsJsonFilterListInput>
    readonly childrenCommunityMeetupsJson: InputMaybe<CommunityMeetupsJsonFilterListInput>
    readonly childrenConsensusBountyHuntersCsv: InputMaybe<ConsensusBountyHuntersCsvFilterListInput>
    readonly childrenDataJson: InputMaybe<DataJsonFilterListInput>
    readonly childrenExchangesByCountryCsv: InputMaybe<ExchangesByCountryCsvFilterListInput>
    readonly childrenExecutionBountyHuntersCsv: InputMaybe<ExecutionBountyHuntersCsvFilterListInput>
    readonly childrenExternalTutorialsJson: InputMaybe<ExternalTutorialsJsonFilterListInput>
    readonly childrenImageSharp: InputMaybe<ImageSharpFilterListInput>
    readonly childrenLayer2Json: InputMaybe<Layer2JsonFilterListInput>
    readonly childrenMdx: InputMaybe<MdxFilterListInput>
    readonly childrenMonthJson: InputMaybe<MonthJsonFilterListInput>
    readonly childrenQuarterJson: InputMaybe<QuarterJsonFilterListInput>
    readonly childrenWalletsCsv: InputMaybe<WalletsCsvFilterListInput>
    readonly ctime: InputMaybe<DateQueryOperatorInput>
    readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>
    readonly dev: InputMaybe<IntQueryOperatorInput>
    readonly dir: InputMaybe<StringQueryOperatorInput>
    readonly ext: InputMaybe<StringQueryOperatorInput>
    readonly extension: InputMaybe<StringQueryOperatorInput>
    readonly fields: InputMaybe<FileFieldsFilterInput>
    readonly gid: InputMaybe<IntQueryOperatorInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly ino: InputMaybe<FloatQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly mode: InputMaybe<IntQueryOperatorInput>
    readonly modifiedTime: InputMaybe<DateQueryOperatorInput>
    readonly mtime: InputMaybe<DateQueryOperatorInput>
    readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly nlink: InputMaybe<IntQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly prettySize: InputMaybe<StringQueryOperatorInput>
    readonly publicURL: InputMaybe<StringQueryOperatorInput>
    readonly rdev: InputMaybe<IntQueryOperatorInput>
    readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>
    readonly relativePath: InputMaybe<StringQueryOperatorInput>
    readonly root: InputMaybe<StringQueryOperatorInput>
    readonly size: InputMaybe<IntQueryOperatorInput>
    readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>
    readonly uid: InputMaybe<IntQueryOperatorInput>
  }

  type FileGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<FileEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<FileGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<File>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type FileGroupConnection_distinctArgs = {
    field: FileFieldsEnum
  }

  type FileGroupConnection_groupArgs = {
    field: FileFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type FileGroupConnection_maxArgs = {
    field: FileFieldsEnum
  }

  type FileGroupConnection_minArgs = {
    field: FileFieldsEnum
  }

  type FileGroupConnection_sumArgs = {
    field: FileFieldsEnum
  }

  type FileSortInput = {
    readonly fields: InputMaybe<ReadonlyArray<InputMaybe<FileFieldsEnum>>>
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type FloatQueryOperatorInput = {
    readonly eq: InputMaybe<Scalars["Float"]>
    readonly gt: InputMaybe<Scalars["Float"]>
    readonly gte: InputMaybe<Scalars["Float"]>
    readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars["Float"]>>>
    readonly lt: InputMaybe<Scalars["Float"]>
    readonly lte: InputMaybe<Scalars["Float"]>
    readonly ne: InputMaybe<Scalars["Float"]>
    readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars["Float"]>>>
  }

  type Frontmatter = {
    readonly address: Maybe<Scalars["String"]>
    readonly alt: Maybe<Scalars["String"]>
    readonly author: Maybe<Scalars["String"]>
    readonly compensation: Maybe<Scalars["String"]>
    readonly description: Maybe<Scalars["String"]>
    readonly emoji: Maybe<Scalars["String"]>
    readonly image: Maybe<File>
    readonly incomplete: Maybe<Scalars["Boolean"]>
    readonly isOutdated: Maybe<Scalars["Boolean"]>
    readonly lang: Maybe<Scalars["String"]>
    readonly link: Maybe<Scalars["String"]>
    readonly location: Maybe<Scalars["String"]>
    readonly position: Maybe<Scalars["String"]>
    readonly published: Maybe<Scalars["String"]>
    readonly sidebar: Maybe<Scalars["Boolean"]>
    readonly sidebarDepth: Maybe<Scalars["Int"]>
    readonly skill: Maybe<Scalars["String"]>
    readonly source: Maybe<Scalars["String"]>
    readonly sourceUrl: Maybe<Scalars["String"]>
    readonly summaryPoint1: Scalars["String"]
    readonly summaryPoint2: Scalars["String"]
    readonly summaryPoint3: Scalars["String"]
    readonly summaryPoint4: Scalars["String"]
    readonly summaryPoints: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly tags: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly template: Maybe<Scalars["String"]>
    readonly title: Maybe<Scalars["String"]>
    readonly type: Maybe<Scalars["String"]>
  }

  type FrontmatterFilterInput = {
    readonly address: InputMaybe<StringQueryOperatorInput>
    readonly alt: InputMaybe<StringQueryOperatorInput>
    readonly author: InputMaybe<StringQueryOperatorInput>
    readonly compensation: InputMaybe<StringQueryOperatorInput>
    readonly description: InputMaybe<StringQueryOperatorInput>
    readonly emoji: InputMaybe<StringQueryOperatorInput>
    readonly image: InputMaybe<FileFilterInput>
    readonly incomplete: InputMaybe<BooleanQueryOperatorInput>
    readonly isOutdated: InputMaybe<BooleanQueryOperatorInput>
    readonly lang: InputMaybe<StringQueryOperatorInput>
    readonly link: InputMaybe<StringQueryOperatorInput>
    readonly location: InputMaybe<StringQueryOperatorInput>
    readonly position: InputMaybe<StringQueryOperatorInput>
    readonly published: InputMaybe<StringQueryOperatorInput>
    readonly sidebar: InputMaybe<BooleanQueryOperatorInput>
    readonly sidebarDepth: InputMaybe<IntQueryOperatorInput>
    readonly skill: InputMaybe<StringQueryOperatorInput>
    readonly source: InputMaybe<StringQueryOperatorInput>
    readonly sourceUrl: InputMaybe<StringQueryOperatorInput>
    readonly summaryPoint1: InputMaybe<StringQueryOperatorInput>
    readonly summaryPoint2: InputMaybe<StringQueryOperatorInput>
    readonly summaryPoint3: InputMaybe<StringQueryOperatorInput>
    readonly summaryPoint4: InputMaybe<StringQueryOperatorInput>
    readonly summaryPoints: InputMaybe<StringQueryOperatorInput>
    readonly tags: InputMaybe<StringQueryOperatorInput>
    readonly template: InputMaybe<StringQueryOperatorInput>
    readonly title: InputMaybe<StringQueryOperatorInput>
    readonly type: InputMaybe<StringQueryOperatorInput>
  }

  type GatsbyImageFormat =
    | "auto"
    | "avif"
    | "jpg"
    | "NO_CHANGE"
    | "png"
    | "webp"

  type GatsbyImageLayout = "constrained" | "fixed" | "fullWidth"

  type GatsbyImagePlaceholder =
    | "blurred"
    | "dominantColor"
    | "none"
    | "tracedSVG"

  type HeadingsMdx = "h1" | "h2" | "h3" | "h4" | "h5" | "h6"

  type ImageCropFocus = 17 | "CENTER" | 2 | 16 | 1 | 5 | 8 | 3 | 6 | 7 | 4

  type ImageFit = "contain" | "cover" | "fill" | "inside" | "outside"

  type ImageFormat = "AUTO" | "avif" | "jpg" | "NO_CHANGE" | "png" | "webp"

  type ImageLayout = "constrained" | "fixed" | "fullWidth"

  type ImagePlaceholder = "blurred" | "dominantColor" | "none" | "tracedSVG"

  type ImageSharp = Node & {
    readonly children: ReadonlyArray<Node>
    readonly fixed: Maybe<ImageSharpFixed>
    readonly fluid: Maybe<ImageSharpFluid>
    readonly gatsbyImageData: Scalars["JSON"]
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly original: Maybe<ImageSharpOriginal>
    readonly parent: Maybe<Node>
    readonly resize: Maybe<ImageSharpResize>
  }

  type ImageSharp_fixedArgs = {
    background?: InputMaybe<Scalars["String"]>
    base64Width: InputMaybe<Scalars["Int"]>
    cropFocus?: InputMaybe<ImageCropFocus>
    duotone: InputMaybe<DuotoneGradient>
    fit?: InputMaybe<ImageFit>
    grayscale?: InputMaybe<Scalars["Boolean"]>
    height: InputMaybe<Scalars["Int"]>
    jpegProgressive?: InputMaybe<Scalars["Boolean"]>
    jpegQuality: InputMaybe<Scalars["Int"]>
    pngCompressionSpeed?: InputMaybe<Scalars["Int"]>
    pngQuality: InputMaybe<Scalars["Int"]>
    quality: InputMaybe<Scalars["Int"]>
    rotate?: InputMaybe<Scalars["Int"]>
    toFormat?: InputMaybe<ImageFormat>
    toFormatBase64?: InputMaybe<ImageFormat>
    traceSVG: InputMaybe<Potrace>
    trim?: InputMaybe<Scalars["Float"]>
    webpQuality: InputMaybe<Scalars["Int"]>
    width: InputMaybe<Scalars["Int"]>
  }

  type ImageSharp_fluidArgs = {
    background?: InputMaybe<Scalars["String"]>
    base64Width: InputMaybe<Scalars["Int"]>
    cropFocus?: InputMaybe<ImageCropFocus>
    duotone: InputMaybe<DuotoneGradient>
    fit?: InputMaybe<ImageFit>
    grayscale?: InputMaybe<Scalars["Boolean"]>
    jpegProgressive?: InputMaybe<Scalars["Boolean"]>
    jpegQuality: InputMaybe<Scalars["Int"]>
    maxHeight: InputMaybe<Scalars["Int"]>
    maxWidth: InputMaybe<Scalars["Int"]>
    pngCompressionSpeed?: InputMaybe<Scalars["Int"]>
    pngQuality: InputMaybe<Scalars["Int"]>
    quality: InputMaybe<Scalars["Int"]>
    rotate?: InputMaybe<Scalars["Int"]>
    sizes?: InputMaybe<Scalars["String"]>
    srcSetBreakpoints?: InputMaybe<ReadonlyArray<InputMaybe<Scalars["Int"]>>>
    toFormat?: InputMaybe<ImageFormat>
    toFormatBase64?: InputMaybe<ImageFormat>
    traceSVG: InputMaybe<Potrace>
    trim?: InputMaybe<Scalars["Float"]>
    webpQuality: InputMaybe<Scalars["Int"]>
  }

  type ImageSharp_gatsbyImageDataArgs = {
    aspectRatio: InputMaybe<Scalars["Float"]>
    avifOptions: InputMaybe<AVIFOptions>
    backgroundColor: InputMaybe<Scalars["String"]>
    blurredOptions: InputMaybe<BlurredOptions>
    breakpoints: InputMaybe<ReadonlyArray<InputMaybe<Scalars["Int"]>>>
    formats: InputMaybe<ReadonlyArray<InputMaybe<ImageFormat>>>
    height: InputMaybe<Scalars["Int"]>
    jpgOptions: InputMaybe<JPGOptions>
    layout?: InputMaybe<ImageLayout>
    outputPixelDensities: InputMaybe<
      ReadonlyArray<InputMaybe<Scalars["Float"]>>
    >
    placeholder: InputMaybe<ImagePlaceholder>
    pngOptions: InputMaybe<PNGOptions>
    quality: InputMaybe<Scalars["Int"]>
    sizes: InputMaybe<Scalars["String"]>
    tracedSVGOptions: InputMaybe<Potrace>
    transformOptions: InputMaybe<TransformOptions>
    webpOptions: InputMaybe<WebPOptions>
    width: InputMaybe<Scalars["Int"]>
  }

  type ImageSharp_resizeArgs = {
    background?: InputMaybe<Scalars["String"]>
    base64?: InputMaybe<Scalars["Boolean"]>
    cropFocus?: InputMaybe<ImageCropFocus>
    duotone: InputMaybe<DuotoneGradient>
    fit?: InputMaybe<ImageFit>
    grayscale?: InputMaybe<Scalars["Boolean"]>
    height: InputMaybe<Scalars["Int"]>
    jpegProgressive?: InputMaybe<Scalars["Boolean"]>
    jpegQuality: InputMaybe<Scalars["Int"]>
    pngCompressionLevel?: InputMaybe<Scalars["Int"]>
    pngCompressionSpeed?: InputMaybe<Scalars["Int"]>
    pngQuality: InputMaybe<Scalars["Int"]>
    quality: InputMaybe<Scalars["Int"]>
    rotate?: InputMaybe<Scalars["Int"]>
    toFormat?: InputMaybe<ImageFormat>
    traceSVG: InputMaybe<Potrace>
    trim?: InputMaybe<Scalars["Float"]>
    webpQuality: InputMaybe<Scalars["Int"]>
    width: InputMaybe<Scalars["Int"]>
  }

  type ImageSharpConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<ImageSharpEdge>
    readonly group: ReadonlyArray<ImageSharpGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<ImageSharp>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type ImageSharpConnection_distinctArgs = {
    field: ImageSharpFieldsEnum
  }

  type ImageSharpConnection_groupArgs = {
    field: ImageSharpFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type ImageSharpConnection_maxArgs = {
    field: ImageSharpFieldsEnum
  }

  type ImageSharpConnection_minArgs = {
    field: ImageSharpFieldsEnum
  }

  type ImageSharpConnection_sumArgs = {
    field: ImageSharpFieldsEnum
  }

  type ImageSharpEdge = {
    readonly next: Maybe<ImageSharp>
    readonly node: ImageSharp
    readonly previous: Maybe<ImageSharp>
  }

  type ImageSharpFieldsEnum =
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "fixed.aspectRatio"
    | "fixed.base64"
    | "fixed.height"
    | "fixed.originalName"
    | "fixed.src"
    | "fixed.srcSet"
    | "fixed.srcSetWebp"
    | "fixed.srcWebp"
    | "fixed.tracedSVG"
    | "fixed.width"
    | "fluid.aspectRatio"
    | "fluid.base64"
    | "fluid.originalImg"
    | "fluid.originalName"
    | "fluid.presentationHeight"
    | "fluid.presentationWidth"
    | "fluid.sizes"
    | "fluid.src"
    | "fluid.srcSet"
    | "fluid.srcSetWebp"
    | "fluid.srcWebp"
    | "fluid.tracedSVG"
    | "gatsbyImageData"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "original.height"
    | "original.src"
    | "original.width"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "resize.aspectRatio"
    | "resize.height"
    | "resize.originalName"
    | "resize.src"
    | "resize.tracedSVG"
    | "resize.width"

  type ImageSharpFilterInput = {
    readonly children: InputMaybe<NodeFilterListInput>
    readonly fixed: InputMaybe<ImageSharpFixedFilterInput>
    readonly fluid: InputMaybe<ImageSharpFluidFilterInput>
    readonly gatsbyImageData: InputMaybe<JSONQueryOperatorInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly original: InputMaybe<ImageSharpOriginalFilterInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly resize: InputMaybe<ImageSharpResizeFilterInput>
  }

  type ImageSharpFilterListInput = {
    readonly elemMatch: InputMaybe<ImageSharpFilterInput>
  }

  type ImageSharpFixed = {
    readonly aspectRatio: Maybe<Scalars["Float"]>
    readonly base64: Maybe<Scalars["String"]>
    readonly height: Scalars["Float"]
    readonly originalName: Maybe<Scalars["String"]>
    readonly src: Scalars["String"]
    readonly srcSet: Scalars["String"]
    readonly srcSetWebp: Maybe<Scalars["String"]>
    readonly srcWebp: Maybe<Scalars["String"]>
    readonly tracedSVG: Maybe<Scalars["String"]>
    readonly width: Scalars["Float"]
  }

  type ImageSharpFixedFilterInput = {
    readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>
    readonly base64: InputMaybe<StringQueryOperatorInput>
    readonly height: InputMaybe<FloatQueryOperatorInput>
    readonly originalName: InputMaybe<StringQueryOperatorInput>
    readonly src: InputMaybe<StringQueryOperatorInput>
    readonly srcSet: InputMaybe<StringQueryOperatorInput>
    readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>
    readonly srcWebp: InputMaybe<StringQueryOperatorInput>
    readonly tracedSVG: InputMaybe<StringQueryOperatorInput>
    readonly width: InputMaybe<FloatQueryOperatorInput>
  }

  type ImageSharpFluid = {
    readonly aspectRatio: Scalars["Float"]
    readonly base64: Maybe<Scalars["String"]>
    readonly originalImg: Maybe<Scalars["String"]>
    readonly originalName: Maybe<Scalars["String"]>
    readonly presentationHeight: Scalars["Int"]
    readonly presentationWidth: Scalars["Int"]
    readonly sizes: Scalars["String"]
    readonly src: Scalars["String"]
    readonly srcSet: Scalars["String"]
    readonly srcSetWebp: Maybe<Scalars["String"]>
    readonly srcWebp: Maybe<Scalars["String"]>
    readonly tracedSVG: Maybe<Scalars["String"]>
  }

  type ImageSharpFluidFilterInput = {
    readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>
    readonly base64: InputMaybe<StringQueryOperatorInput>
    readonly originalImg: InputMaybe<StringQueryOperatorInput>
    readonly originalName: InputMaybe<StringQueryOperatorInput>
    readonly presentationHeight: InputMaybe<IntQueryOperatorInput>
    readonly presentationWidth: InputMaybe<IntQueryOperatorInput>
    readonly sizes: InputMaybe<StringQueryOperatorInput>
    readonly src: InputMaybe<StringQueryOperatorInput>
    readonly srcSet: InputMaybe<StringQueryOperatorInput>
    readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>
    readonly srcWebp: InputMaybe<StringQueryOperatorInput>
    readonly tracedSVG: InputMaybe<StringQueryOperatorInput>
  }

  type ImageSharpGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<ImageSharpEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<ImageSharpGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<ImageSharp>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type ImageSharpGroupConnection_distinctArgs = {
    field: ImageSharpFieldsEnum
  }

  type ImageSharpGroupConnection_groupArgs = {
    field: ImageSharpFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type ImageSharpGroupConnection_maxArgs = {
    field: ImageSharpFieldsEnum
  }

  type ImageSharpGroupConnection_minArgs = {
    field: ImageSharpFieldsEnum
  }

  type ImageSharpGroupConnection_sumArgs = {
    field: ImageSharpFieldsEnum
  }

  type ImageSharpOriginal = {
    readonly height: Maybe<Scalars["Float"]>
    readonly src: Maybe<Scalars["String"]>
    readonly width: Maybe<Scalars["Float"]>
  }

  type ImageSharpOriginalFilterInput = {
    readonly height: InputMaybe<FloatQueryOperatorInput>
    readonly src: InputMaybe<StringQueryOperatorInput>
    readonly width: InputMaybe<FloatQueryOperatorInput>
  }

  type ImageSharpResize = {
    readonly aspectRatio: Maybe<Scalars["Float"]>
    readonly height: Maybe<Scalars["Int"]>
    readonly originalName: Maybe<Scalars["String"]>
    readonly src: Maybe<Scalars["String"]>
    readonly tracedSVG: Maybe<Scalars["String"]>
    readonly width: Maybe<Scalars["Int"]>
  }

  type ImageSharpResizeFilterInput = {
    readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>
    readonly height: InputMaybe<IntQueryOperatorInput>
    readonly originalName: InputMaybe<StringQueryOperatorInput>
    readonly src: InputMaybe<StringQueryOperatorInput>
    readonly tracedSVG: InputMaybe<StringQueryOperatorInput>
    readonly width: InputMaybe<IntQueryOperatorInput>
  }

  type ImageSharpSortInput = {
    readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ImageSharpFieldsEnum>>>
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type IntQueryOperatorInput = {
    readonly eq: InputMaybe<Scalars["Int"]>
    readonly gt: InputMaybe<Scalars["Int"]>
    readonly gte: InputMaybe<Scalars["Int"]>
    readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars["Int"]>>>
    readonly lt: InputMaybe<Scalars["Int"]>
    readonly lte: InputMaybe<Scalars["Int"]>
    readonly ne: InputMaybe<Scalars["Int"]>
    readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars["Int"]>>>
  }

  type Internal = {
    readonly content: Maybe<Scalars["String"]>
    readonly contentDigest: Scalars["String"]
    readonly description: Maybe<Scalars["String"]>
    readonly fieldOwners: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly ignoreType: Maybe<Scalars["Boolean"]>
    readonly mediaType: Maybe<Scalars["String"]>
    readonly owner: Scalars["String"]
    readonly type: Scalars["String"]
  }

  type InternalFilterInput = {
    readonly content: InputMaybe<StringQueryOperatorInput>
    readonly contentDigest: InputMaybe<StringQueryOperatorInput>
    readonly description: InputMaybe<StringQueryOperatorInput>
    readonly fieldOwners: InputMaybe<StringQueryOperatorInput>
    readonly ignoreType: InputMaybe<BooleanQueryOperatorInput>
    readonly mediaType: InputMaybe<StringQueryOperatorInput>
    readonly owner: InputMaybe<StringQueryOperatorInput>
    readonly type: InputMaybe<StringQueryOperatorInput>
  }

  type JPGOptions = {
    readonly progressive: InputMaybe<Scalars["Boolean"]>
    readonly quality: InputMaybe<Scalars["Int"]>
  }

  type JSONQueryOperatorInput = {
    readonly eq: InputMaybe<Scalars["JSON"]>
    readonly glob: InputMaybe<Scalars["JSON"]>
    readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars["JSON"]>>>
    readonly ne: InputMaybe<Scalars["JSON"]>
    readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars["JSON"]>>>
    readonly regex: InputMaybe<Scalars["JSON"]>
  }

  type Layer2Json = Node & {
    readonly children: ReadonlyArray<Node>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly optimistic: Maybe<ReadonlyArray<Maybe<Layer2JsonOptimistic>>>
    readonly parent: Maybe<Node>
    readonly zk: Maybe<ReadonlyArray<Maybe<Layer2JsonZk>>>
  }

  type Layer2JsonConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<Layer2JsonEdge>
    readonly group: ReadonlyArray<Layer2JsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<Layer2Json>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type Layer2JsonConnection_distinctArgs = {
    field: Layer2JsonFieldsEnum
  }

  type Layer2JsonConnection_groupArgs = {
    field: Layer2JsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type Layer2JsonConnection_maxArgs = {
    field: Layer2JsonFieldsEnum
  }

  type Layer2JsonConnection_minArgs = {
    field: Layer2JsonFieldsEnum
  }

  type Layer2JsonConnection_sumArgs = {
    field: Layer2JsonFieldsEnum
  }

  type Layer2JsonEdge = {
    readonly next: Maybe<Layer2Json>
    readonly node: Layer2Json
    readonly previous: Maybe<Layer2Json>
  }

  type Layer2JsonFieldsEnum =
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "optimistic"
    | "optimistic.background"
    | "optimistic.blockExplorer"
    | "optimistic.bridge"
    | "optimistic.bridgeWallets"
    | "optimistic.description"
    | "optimistic.developerDocs"
    | "optimistic.ecosystemPortal"
    | "optimistic.imageKey"
    | "optimistic.l2beat"
    | "optimistic.name"
    | "optimistic.noteKey"
    | "optimistic.purpose"
    | "optimistic.tokenLists"
    | "optimistic.website"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "zk"
    | "zk.background"
    | "zk.blockExplorer"
    | "zk.bridge"
    | "zk.bridgeWallets"
    | "zk.description"
    | "zk.developerDocs"
    | "zk.ecosystemPortal"
    | "zk.imageKey"
    | "zk.l2beat"
    | "zk.name"
    | "zk.noteKey"
    | "zk.purpose"
    | "zk.tokenLists"
    | "zk.website"

  type Layer2JsonFilterInput = {
    readonly children: InputMaybe<NodeFilterListInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly optimistic: InputMaybe<Layer2JsonOptimisticFilterListInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly zk: InputMaybe<Layer2JsonZkFilterListInput>
  }

  type Layer2JsonFilterListInput = {
    readonly elemMatch: InputMaybe<Layer2JsonFilterInput>
  }

  type Layer2JsonGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<Layer2JsonEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<Layer2JsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<Layer2Json>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type Layer2JsonGroupConnection_distinctArgs = {
    field: Layer2JsonFieldsEnum
  }

  type Layer2JsonGroupConnection_groupArgs = {
    field: Layer2JsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type Layer2JsonGroupConnection_maxArgs = {
    field: Layer2JsonFieldsEnum
  }

  type Layer2JsonGroupConnection_minArgs = {
    field: Layer2JsonFieldsEnum
  }

  type Layer2JsonGroupConnection_sumArgs = {
    field: Layer2JsonFieldsEnum
  }

  type Layer2JsonOptimistic = {
    readonly background: Maybe<Scalars["String"]>
    readonly blockExplorer: Maybe<Scalars["String"]>
    readonly bridge: Maybe<Scalars["String"]>
    readonly bridgeWallets: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly description: Maybe<Scalars["String"]>
    readonly developerDocs: Maybe<Scalars["String"]>
    readonly ecosystemPortal: Maybe<Scalars["String"]>
    readonly imageKey: Maybe<Scalars["String"]>
    readonly l2beat: Maybe<Scalars["String"]>
    readonly name: Maybe<Scalars["String"]>
    readonly noteKey: Maybe<Scalars["String"]>
    readonly purpose: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly tokenLists: Maybe<Scalars["String"]>
    readonly website: Maybe<Scalars["String"]>
  }

  type Layer2JsonOptimisticFilterInput = {
    readonly background: InputMaybe<StringQueryOperatorInput>
    readonly blockExplorer: InputMaybe<StringQueryOperatorInput>
    readonly bridge: InputMaybe<StringQueryOperatorInput>
    readonly bridgeWallets: InputMaybe<StringQueryOperatorInput>
    readonly description: InputMaybe<StringQueryOperatorInput>
    readonly developerDocs: InputMaybe<StringQueryOperatorInput>
    readonly ecosystemPortal: InputMaybe<StringQueryOperatorInput>
    readonly imageKey: InputMaybe<StringQueryOperatorInput>
    readonly l2beat: InputMaybe<StringQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly noteKey: InputMaybe<StringQueryOperatorInput>
    readonly purpose: InputMaybe<StringQueryOperatorInput>
    readonly tokenLists: InputMaybe<StringQueryOperatorInput>
    readonly website: InputMaybe<StringQueryOperatorInput>
  }

  type Layer2JsonOptimisticFilterListInput = {
    readonly elemMatch: InputMaybe<Layer2JsonOptimisticFilterInput>
  }

  type Layer2JsonSortInput = {
    readonly fields: InputMaybe<ReadonlyArray<InputMaybe<Layer2JsonFieldsEnum>>>
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type Layer2JsonZk = {
    readonly background: Maybe<Scalars["String"]>
    readonly blockExplorer: Maybe<Scalars["String"]>
    readonly bridge: Maybe<Scalars["String"]>
    readonly bridgeWallets: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly description: Maybe<Scalars["String"]>
    readonly developerDocs: Maybe<Scalars["String"]>
    readonly ecosystemPortal: Maybe<Scalars["String"]>
    readonly imageKey: Maybe<Scalars["String"]>
    readonly l2beat: Maybe<Scalars["String"]>
    readonly name: Maybe<Scalars["String"]>
    readonly noteKey: Maybe<Scalars["String"]>
    readonly purpose: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly tokenLists: Maybe<Scalars["String"]>
    readonly website: Maybe<Scalars["String"]>
  }

  type Layer2JsonZkFilterInput = {
    readonly background: InputMaybe<StringQueryOperatorInput>
    readonly blockExplorer: InputMaybe<StringQueryOperatorInput>
    readonly bridge: InputMaybe<StringQueryOperatorInput>
    readonly bridgeWallets: InputMaybe<StringQueryOperatorInput>
    readonly description: InputMaybe<StringQueryOperatorInput>
    readonly developerDocs: InputMaybe<StringQueryOperatorInput>
    readonly ecosystemPortal: InputMaybe<StringQueryOperatorInput>
    readonly imageKey: InputMaybe<StringQueryOperatorInput>
    readonly l2beat: InputMaybe<StringQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly noteKey: InputMaybe<StringQueryOperatorInput>
    readonly purpose: InputMaybe<StringQueryOperatorInput>
    readonly tokenLists: InputMaybe<StringQueryOperatorInput>
    readonly website: InputMaybe<StringQueryOperatorInput>
  }

  type Layer2JsonZkFilterListInput = {
    readonly elemMatch: InputMaybe<Layer2JsonZkFilterInput>
  }

  type Mdx = Node & {
    readonly body: Scalars["String"]
    readonly children: ReadonlyArray<Node>
    readonly excerpt: Scalars["String"]
    readonly fields: Maybe<MdxFields>
    readonly fileAbsolutePath: Scalars["String"]
    readonly frontmatter: Maybe<Frontmatter>
    readonly headings: Maybe<ReadonlyArray<Maybe<MdxHeadingMdx>>>
    readonly html: Maybe<Scalars["String"]>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly mdxAST: Maybe<Scalars["JSON"]>
    readonly parent: Maybe<Node>
    readonly rawBody: Scalars["String"]
    readonly slug: Maybe<Scalars["String"]>
    readonly tableOfContents: Maybe<Scalars["JSON"]>
    readonly timeToRead: Maybe<Scalars["Int"]>
    readonly wordCount: Maybe<MdxWordCount>
  }

  type Mdx_excerptArgs = {
    pruneLength?: InputMaybe<Scalars["Int"]>
    truncate?: InputMaybe<Scalars["Boolean"]>
  }

  type Mdx_headingsArgs = {
    depth: InputMaybe<HeadingsMdx>
  }

  type Mdx_tableOfContentsArgs = {
    maxDepth: InputMaybe<Scalars["Int"]>
  }

  type MdxConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<MdxEdge>
    readonly group: ReadonlyArray<MdxGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<Mdx>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type MdxConnection_distinctArgs = {
    field: MdxFieldsEnum
  }

  type MdxConnection_groupArgs = {
    field: MdxFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type MdxConnection_maxArgs = {
    field: MdxFieldsEnum
  }

  type MdxConnection_minArgs = {
    field: MdxFieldsEnum
  }

  type MdxConnection_sumArgs = {
    field: MdxFieldsEnum
  }

  type MdxEdge = {
    readonly next: Maybe<Mdx>
    readonly node: Mdx
    readonly previous: Maybe<Mdx>
  }

  type MdxFields = {
    readonly isOutdated: Maybe<Scalars["Boolean"]>
    readonly readingTime: Maybe<MdxFieldsReadingTime>
    readonly relativePath: Maybe<Scalars["String"]>
    readonly slug: Maybe<Scalars["String"]>
  }

  type MdxFieldsEnum =
    | "body"
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "excerpt"
    | "fields.isOutdated"
    | "fields.readingTime.minutes"
    | "fields.readingTime.text"
    | "fields.readingTime.time"
    | "fields.readingTime.words"
    | "fields.relativePath"
    | "fields.slug"
    | "fileAbsolutePath"
    | "frontmatter.address"
    | "frontmatter.alt"
    | "frontmatter.author"
    | "frontmatter.compensation"
    | "frontmatter.description"
    | "frontmatter.emoji"
    | "frontmatter.image.absolutePath"
    | "frontmatter.image.accessTime"
    | "frontmatter.image.atime"
    | "frontmatter.image.atimeMs"
    | "frontmatter.image.base"
    | "frontmatter.image.birthTime"
    | "frontmatter.image.birthtime"
    | "frontmatter.image.birthtimeMs"
    | "frontmatter.image.blksize"
    | "frontmatter.image.blocks"
    | "frontmatter.image.changeTime"
    | "frontmatter.image.childAlltimeJson.children"
    | "frontmatter.image.childAlltimeJson.currency"
    | "frontmatter.image.childAlltimeJson.data"
    | "frontmatter.image.childAlltimeJson.id"
    | "frontmatter.image.childAlltimeJson.mode"
    | "frontmatter.image.childAlltimeJson.name"
    | "frontmatter.image.childAlltimeJson.totalCosts"
    | "frontmatter.image.childAlltimeJson.totalPreTranslated"
    | "frontmatter.image.childAlltimeJson.totalTMSavings"
    | "frontmatter.image.childAlltimeJson.unit"
    | "frontmatter.image.childAlltimeJson.url"
    | "frontmatter.image.childCexLayer2SupportJson.children"
    | "frontmatter.image.childCexLayer2SupportJson.id"
    | "frontmatter.image.childCexLayer2SupportJson.name"
    | "frontmatter.image.childCexLayer2SupportJson.supports_deposits"
    | "frontmatter.image.childCexLayer2SupportJson.supports_withdrawals"
    | "frontmatter.image.childCexLayer2SupportJson.url"
    | "frontmatter.image.childCommunityEventsJson.children"
    | "frontmatter.image.childCommunityEventsJson.description"
    | "frontmatter.image.childCommunityEventsJson.endDate"
    | "frontmatter.image.childCommunityEventsJson.id"
    | "frontmatter.image.childCommunityEventsJson.location"
    | "frontmatter.image.childCommunityEventsJson.sponsor"
    | "frontmatter.image.childCommunityEventsJson.startDate"
    | "frontmatter.image.childCommunityEventsJson.title"
    | "frontmatter.image.childCommunityEventsJson.to"
    | "frontmatter.image.childCommunityMeetupsJson.children"
    | "frontmatter.image.childCommunityMeetupsJson.emoji"
    | "frontmatter.image.childCommunityMeetupsJson.id"
    | "frontmatter.image.childCommunityMeetupsJson.link"
    | "frontmatter.image.childCommunityMeetupsJson.location"
    | "frontmatter.image.childCommunityMeetupsJson.title"
    | "frontmatter.image.childConsensusBountyHuntersCsv.children"
    | "frontmatter.image.childConsensusBountyHuntersCsv.id"
    | "frontmatter.image.childConsensusBountyHuntersCsv.name"
    | "frontmatter.image.childConsensusBountyHuntersCsv.score"
    | "frontmatter.image.childConsensusBountyHuntersCsv.username"
    | "frontmatter.image.childDataJson.children"
    | "frontmatter.image.childDataJson.commit"
    | "frontmatter.image.childDataJson.contributors"
    | "frontmatter.image.childDataJson.contributorsPerLine"
    | "frontmatter.image.childDataJson.files"
    | "frontmatter.image.childDataJson.id"
    | "frontmatter.image.childDataJson.imageSize"
    | "frontmatter.image.childDataJson.keyGen"
    | "frontmatter.image.childDataJson.nodeTools"
    | "frontmatter.image.childDataJson.pools"
    | "frontmatter.image.childDataJson.projectName"
    | "frontmatter.image.childDataJson.projectOwner"
    | "frontmatter.image.childDataJson.repoHost"
    | "frontmatter.image.childDataJson.repoType"
    | "frontmatter.image.childDataJson.saas"
    | "frontmatter.image.childDataJson.skipCi"
    | "frontmatter.image.childExchangesByCountryCsv.binance"
    | "frontmatter.image.childExchangesByCountryCsv.binanceus"
    | "frontmatter.image.childExchangesByCountryCsv.bitbuy"
    | "frontmatter.image.childExchangesByCountryCsv.bitfinex"
    | "frontmatter.image.childExchangesByCountryCsv.bitflyer"
    | "frontmatter.image.childExchangesByCountryCsv.bitkub"
    | "frontmatter.image.childExchangesByCountryCsv.bitso"
    | "frontmatter.image.childExchangesByCountryCsv.bittrex"
    | "frontmatter.image.childExchangesByCountryCsv.bitvavo"
    | "frontmatter.image.childExchangesByCountryCsv.bybit"
    | "frontmatter.image.childExchangesByCountryCsv.children"
    | "frontmatter.image.childExchangesByCountryCsv.coinbase"
    | "frontmatter.image.childExchangesByCountryCsv.coinmama"
    | "frontmatter.image.childExchangesByCountryCsv.coinspot"
    | "frontmatter.image.childExchangesByCountryCsv.country"
    | "frontmatter.image.childExchangesByCountryCsv.cryptocom"
    | "frontmatter.image.childExchangesByCountryCsv.easycrypto"
    | "frontmatter.image.childExchangesByCountryCsv.ftx"
    | "frontmatter.image.childExchangesByCountryCsv.ftxus"
    | "frontmatter.image.childExchangesByCountryCsv.gateio"
    | "frontmatter.image.childExchangesByCountryCsv.gemini"
    | "frontmatter.image.childExchangesByCountryCsv.huobiglobal"
    | "frontmatter.image.childExchangesByCountryCsv.id"
    | "frontmatter.image.childExchangesByCountryCsv.itezcom"
    | "frontmatter.image.childExchangesByCountryCsv.kraken"
    | "frontmatter.image.childExchangesByCountryCsv.kucoin"
    | "frontmatter.image.childExchangesByCountryCsv.moonpay"
    | "frontmatter.image.childExchangesByCountryCsv.mtpelerin"
    | "frontmatter.image.childExchangesByCountryCsv.okx"
    | "frontmatter.image.childExchangesByCountryCsv.rain"
    | "frontmatter.image.childExchangesByCountryCsv.simplex"
    | "frontmatter.image.childExchangesByCountryCsv.wazirx"
    | "frontmatter.image.childExchangesByCountryCsv.wyre"
    | "frontmatter.image.childExecutionBountyHuntersCsv.children"
    | "frontmatter.image.childExecutionBountyHuntersCsv.id"
    | "frontmatter.image.childExecutionBountyHuntersCsv.name"
    | "frontmatter.image.childExecutionBountyHuntersCsv.score"
    | "frontmatter.image.childExecutionBountyHuntersCsv.username"
    | "frontmatter.image.childExternalTutorialsJson.author"
    | "frontmatter.image.childExternalTutorialsJson.authorGithub"
    | "frontmatter.image.childExternalTutorialsJson.children"
    | "frontmatter.image.childExternalTutorialsJson.description"
    | "frontmatter.image.childExternalTutorialsJson.id"
    | "frontmatter.image.childExternalTutorialsJson.lang"
    | "frontmatter.image.childExternalTutorialsJson.publishDate"
    | "frontmatter.image.childExternalTutorialsJson.skillLevel"
    | "frontmatter.image.childExternalTutorialsJson.tags"
    | "frontmatter.image.childExternalTutorialsJson.timeToRead"
    | "frontmatter.image.childExternalTutorialsJson.title"
    | "frontmatter.image.childExternalTutorialsJson.url"
    | "frontmatter.image.childImageSharp.children"
    | "frontmatter.image.childImageSharp.gatsbyImageData"
    | "frontmatter.image.childImageSharp.id"
    | "frontmatter.image.childLayer2Json.children"
    | "frontmatter.image.childLayer2Json.id"
    | "frontmatter.image.childLayer2Json.optimistic"
    | "frontmatter.image.childLayer2Json.zk"
    | "frontmatter.image.childMdx.body"
    | "frontmatter.image.childMdx.children"
    | "frontmatter.image.childMdx.excerpt"
    | "frontmatter.image.childMdx.fileAbsolutePath"
    | "frontmatter.image.childMdx.headings"
    | "frontmatter.image.childMdx.html"
    | "frontmatter.image.childMdx.id"
    | "frontmatter.image.childMdx.mdxAST"
    | "frontmatter.image.childMdx.rawBody"
    | "frontmatter.image.childMdx.slug"
    | "frontmatter.image.childMdx.tableOfContents"
    | "frontmatter.image.childMdx.timeToRead"
    | "frontmatter.image.childMonthJson.children"
    | "frontmatter.image.childMonthJson.currency"
    | "frontmatter.image.childMonthJson.data"
    | "frontmatter.image.childMonthJson.id"
    | "frontmatter.image.childMonthJson.mode"
    | "frontmatter.image.childMonthJson.name"
    | "frontmatter.image.childMonthJson.totalCosts"
    | "frontmatter.image.childMonthJson.totalPreTranslated"
    | "frontmatter.image.childMonthJson.totalTMSavings"
    | "frontmatter.image.childMonthJson.unit"
    | "frontmatter.image.childMonthJson.url"
    | "frontmatter.image.childQuarterJson.children"
    | "frontmatter.image.childQuarterJson.currency"
    | "frontmatter.image.childQuarterJson.data"
    | "frontmatter.image.childQuarterJson.id"
    | "frontmatter.image.childQuarterJson.mode"
    | "frontmatter.image.childQuarterJson.name"
    | "frontmatter.image.childQuarterJson.totalCosts"
    | "frontmatter.image.childQuarterJson.totalPreTranslated"
    | "frontmatter.image.childQuarterJson.totalTMSavings"
    | "frontmatter.image.childQuarterJson.unit"
    | "frontmatter.image.childQuarterJson.url"
    | "frontmatter.image.childWalletsCsv.brand_color"
    | "frontmatter.image.childWalletsCsv.children"
    | "frontmatter.image.childWalletsCsv.has_bank_withdrawals"
    | "frontmatter.image.childWalletsCsv.has_card_deposits"
    | "frontmatter.image.childWalletsCsv.has_defi_integrations"
    | "frontmatter.image.childWalletsCsv.has_desktop"
    | "frontmatter.image.childWalletsCsv.has_dex_integrations"
    | "frontmatter.image.childWalletsCsv.has_explore_dapps"
    | "frontmatter.image.childWalletsCsv.has_hardware"
    | "frontmatter.image.childWalletsCsv.has_high_volume_purchases"
    | "frontmatter.image.childWalletsCsv.has_limits_protection"
    | "frontmatter.image.childWalletsCsv.has_mobile"
    | "frontmatter.image.childWalletsCsv.has_multisig"
    | "frontmatter.image.childWalletsCsv.has_web"
    | "frontmatter.image.childWalletsCsv.id"
    | "frontmatter.image.childWalletsCsv.name"
    | "frontmatter.image.childWalletsCsv.url"
    | "frontmatter.image.children"
    | "frontmatter.image.childrenAlltimeJson"
    | "frontmatter.image.childrenAlltimeJson.children"
    | "frontmatter.image.childrenAlltimeJson.currency"
    | "frontmatter.image.childrenAlltimeJson.data"
    | "frontmatter.image.childrenAlltimeJson.id"
    | "frontmatter.image.childrenAlltimeJson.mode"
    | "frontmatter.image.childrenAlltimeJson.name"
    | "frontmatter.image.childrenAlltimeJson.totalCosts"
    | "frontmatter.image.childrenAlltimeJson.totalPreTranslated"
    | "frontmatter.image.childrenAlltimeJson.totalTMSavings"
    | "frontmatter.image.childrenAlltimeJson.unit"
    | "frontmatter.image.childrenAlltimeJson.url"
    | "frontmatter.image.childrenCexLayer2SupportJson"
    | "frontmatter.image.childrenCexLayer2SupportJson.children"
    | "frontmatter.image.childrenCexLayer2SupportJson.id"
    | "frontmatter.image.childrenCexLayer2SupportJson.name"
    | "frontmatter.image.childrenCexLayer2SupportJson.supports_deposits"
    | "frontmatter.image.childrenCexLayer2SupportJson.supports_withdrawals"
    | "frontmatter.image.childrenCexLayer2SupportJson.url"
    | "frontmatter.image.childrenCommunityEventsJson"
    | "frontmatter.image.childrenCommunityEventsJson.children"
    | "frontmatter.image.childrenCommunityEventsJson.description"
    | "frontmatter.image.childrenCommunityEventsJson.endDate"
    | "frontmatter.image.childrenCommunityEventsJson.id"
    | "frontmatter.image.childrenCommunityEventsJson.location"
    | "frontmatter.image.childrenCommunityEventsJson.sponsor"
    | "frontmatter.image.childrenCommunityEventsJson.startDate"
    | "frontmatter.image.childrenCommunityEventsJson.title"
    | "frontmatter.image.childrenCommunityEventsJson.to"
    | "frontmatter.image.childrenCommunityMeetupsJson"
    | "frontmatter.image.childrenCommunityMeetupsJson.children"
    | "frontmatter.image.childrenCommunityMeetupsJson.emoji"
    | "frontmatter.image.childrenCommunityMeetupsJson.id"
    | "frontmatter.image.childrenCommunityMeetupsJson.link"
    | "frontmatter.image.childrenCommunityMeetupsJson.location"
    | "frontmatter.image.childrenCommunityMeetupsJson.title"
    | "frontmatter.image.childrenConsensusBountyHuntersCsv"
    | "frontmatter.image.childrenConsensusBountyHuntersCsv.children"
    | "frontmatter.image.childrenConsensusBountyHuntersCsv.id"
    | "frontmatter.image.childrenConsensusBountyHuntersCsv.name"
    | "frontmatter.image.childrenConsensusBountyHuntersCsv.score"
    | "frontmatter.image.childrenConsensusBountyHuntersCsv.username"
    | "frontmatter.image.childrenDataJson"
    | "frontmatter.image.childrenDataJson.children"
    | "frontmatter.image.childrenDataJson.commit"
    | "frontmatter.image.childrenDataJson.contributors"
    | "frontmatter.image.childrenDataJson.contributorsPerLine"
    | "frontmatter.image.childrenDataJson.files"
    | "frontmatter.image.childrenDataJson.id"
    | "frontmatter.image.childrenDataJson.imageSize"
    | "frontmatter.image.childrenDataJson.keyGen"
    | "frontmatter.image.childrenDataJson.nodeTools"
    | "frontmatter.image.childrenDataJson.pools"
    | "frontmatter.image.childrenDataJson.projectName"
    | "frontmatter.image.childrenDataJson.projectOwner"
    | "frontmatter.image.childrenDataJson.repoHost"
    | "frontmatter.image.childrenDataJson.repoType"
    | "frontmatter.image.childrenDataJson.saas"
    | "frontmatter.image.childrenDataJson.skipCi"
    | "frontmatter.image.childrenExchangesByCountryCsv"
    | "frontmatter.image.childrenExchangesByCountryCsv.binance"
    | "frontmatter.image.childrenExchangesByCountryCsv.binanceus"
    | "frontmatter.image.childrenExchangesByCountryCsv.bitbuy"
    | "frontmatter.image.childrenExchangesByCountryCsv.bitfinex"
    | "frontmatter.image.childrenExchangesByCountryCsv.bitflyer"
    | "frontmatter.image.childrenExchangesByCountryCsv.bitkub"
    | "frontmatter.image.childrenExchangesByCountryCsv.bitso"
    | "frontmatter.image.childrenExchangesByCountryCsv.bittrex"
    | "frontmatter.image.childrenExchangesByCountryCsv.bitvavo"
    | "frontmatter.image.childrenExchangesByCountryCsv.bybit"
    | "frontmatter.image.childrenExchangesByCountryCsv.children"
    | "frontmatter.image.childrenExchangesByCountryCsv.coinbase"
    | "frontmatter.image.childrenExchangesByCountryCsv.coinmama"
    | "frontmatter.image.childrenExchangesByCountryCsv.coinspot"
    | "frontmatter.image.childrenExchangesByCountryCsv.country"
    | "frontmatter.image.childrenExchangesByCountryCsv.cryptocom"
    | "frontmatter.image.childrenExchangesByCountryCsv.easycrypto"
    | "frontmatter.image.childrenExchangesByCountryCsv.ftx"
    | "frontmatter.image.childrenExchangesByCountryCsv.ftxus"
    | "frontmatter.image.childrenExchangesByCountryCsv.gateio"
    | "frontmatter.image.childrenExchangesByCountryCsv.gemini"
    | "frontmatter.image.childrenExchangesByCountryCsv.huobiglobal"
    | "frontmatter.image.childrenExchangesByCountryCsv.id"
    | "frontmatter.image.childrenExchangesByCountryCsv.itezcom"
    | "frontmatter.image.childrenExchangesByCountryCsv.kraken"
    | "frontmatter.image.childrenExchangesByCountryCsv.kucoin"
    | "frontmatter.image.childrenExchangesByCountryCsv.moonpay"
    | "frontmatter.image.childrenExchangesByCountryCsv.mtpelerin"
    | "frontmatter.image.childrenExchangesByCountryCsv.okx"
    | "frontmatter.image.childrenExchangesByCountryCsv.rain"
    | "frontmatter.image.childrenExchangesByCountryCsv.simplex"
    | "frontmatter.image.childrenExchangesByCountryCsv.wazirx"
    | "frontmatter.image.childrenExchangesByCountryCsv.wyre"
    | "frontmatter.image.childrenExecutionBountyHuntersCsv"
    | "frontmatter.image.childrenExecutionBountyHuntersCsv.children"
    | "frontmatter.image.childrenExecutionBountyHuntersCsv.id"
    | "frontmatter.image.childrenExecutionBountyHuntersCsv.name"
    | "frontmatter.image.childrenExecutionBountyHuntersCsv.score"
    | "frontmatter.image.childrenExecutionBountyHuntersCsv.username"
    | "frontmatter.image.childrenExternalTutorialsJson"
    | "frontmatter.image.childrenExternalTutorialsJson.author"
    | "frontmatter.image.childrenExternalTutorialsJson.authorGithub"
    | "frontmatter.image.childrenExternalTutorialsJson.children"
    | "frontmatter.image.childrenExternalTutorialsJson.description"
    | "frontmatter.image.childrenExternalTutorialsJson.id"
    | "frontmatter.image.childrenExternalTutorialsJson.lang"
    | "frontmatter.image.childrenExternalTutorialsJson.publishDate"
    | "frontmatter.image.childrenExternalTutorialsJson.skillLevel"
    | "frontmatter.image.childrenExternalTutorialsJson.tags"
    | "frontmatter.image.childrenExternalTutorialsJson.timeToRead"
    | "frontmatter.image.childrenExternalTutorialsJson.title"
    | "frontmatter.image.childrenExternalTutorialsJson.url"
    | "frontmatter.image.childrenImageSharp"
    | "frontmatter.image.childrenImageSharp.children"
    | "frontmatter.image.childrenImageSharp.gatsbyImageData"
    | "frontmatter.image.childrenImageSharp.id"
    | "frontmatter.image.childrenLayer2Json"
    | "frontmatter.image.childrenLayer2Json.children"
    | "frontmatter.image.childrenLayer2Json.id"
    | "frontmatter.image.childrenLayer2Json.optimistic"
    | "frontmatter.image.childrenLayer2Json.zk"
    | "frontmatter.image.childrenMdx"
    | "frontmatter.image.childrenMdx.body"
    | "frontmatter.image.childrenMdx.children"
    | "frontmatter.image.childrenMdx.excerpt"
    | "frontmatter.image.childrenMdx.fileAbsolutePath"
    | "frontmatter.image.childrenMdx.headings"
    | "frontmatter.image.childrenMdx.html"
    | "frontmatter.image.childrenMdx.id"
    | "frontmatter.image.childrenMdx.mdxAST"
    | "frontmatter.image.childrenMdx.rawBody"
    | "frontmatter.image.childrenMdx.slug"
    | "frontmatter.image.childrenMdx.tableOfContents"
    | "frontmatter.image.childrenMdx.timeToRead"
    | "frontmatter.image.childrenMonthJson"
    | "frontmatter.image.childrenMonthJson.children"
    | "frontmatter.image.childrenMonthJson.currency"
    | "frontmatter.image.childrenMonthJson.data"
    | "frontmatter.image.childrenMonthJson.id"
    | "frontmatter.image.childrenMonthJson.mode"
    | "frontmatter.image.childrenMonthJson.name"
    | "frontmatter.image.childrenMonthJson.totalCosts"
    | "frontmatter.image.childrenMonthJson.totalPreTranslated"
    | "frontmatter.image.childrenMonthJson.totalTMSavings"
    | "frontmatter.image.childrenMonthJson.unit"
    | "frontmatter.image.childrenMonthJson.url"
    | "frontmatter.image.childrenQuarterJson"
    | "frontmatter.image.childrenQuarterJson.children"
    | "frontmatter.image.childrenQuarterJson.currency"
    | "frontmatter.image.childrenQuarterJson.data"
    | "frontmatter.image.childrenQuarterJson.id"
    | "frontmatter.image.childrenQuarterJson.mode"
    | "frontmatter.image.childrenQuarterJson.name"
    | "frontmatter.image.childrenQuarterJson.totalCosts"
    | "frontmatter.image.childrenQuarterJson.totalPreTranslated"
    | "frontmatter.image.childrenQuarterJson.totalTMSavings"
    | "frontmatter.image.childrenQuarterJson.unit"
    | "frontmatter.image.childrenQuarterJson.url"
    | "frontmatter.image.childrenWalletsCsv"
    | "frontmatter.image.childrenWalletsCsv.brand_color"
    | "frontmatter.image.childrenWalletsCsv.children"
    | "frontmatter.image.childrenWalletsCsv.has_bank_withdrawals"
    | "frontmatter.image.childrenWalletsCsv.has_card_deposits"
    | "frontmatter.image.childrenWalletsCsv.has_defi_integrations"
    | "frontmatter.image.childrenWalletsCsv.has_desktop"
    | "frontmatter.image.childrenWalletsCsv.has_dex_integrations"
    | "frontmatter.image.childrenWalletsCsv.has_explore_dapps"
    | "frontmatter.image.childrenWalletsCsv.has_hardware"
    | "frontmatter.image.childrenWalletsCsv.has_high_volume_purchases"
    | "frontmatter.image.childrenWalletsCsv.has_limits_protection"
    | "frontmatter.image.childrenWalletsCsv.has_mobile"
    | "frontmatter.image.childrenWalletsCsv.has_multisig"
    | "frontmatter.image.childrenWalletsCsv.has_web"
    | "frontmatter.image.childrenWalletsCsv.id"
    | "frontmatter.image.childrenWalletsCsv.name"
    | "frontmatter.image.childrenWalletsCsv.url"
    | "frontmatter.image.children.children"
    | "frontmatter.image.children.id"
    | "frontmatter.image.ctime"
    | "frontmatter.image.ctimeMs"
    | "frontmatter.image.dev"
    | "frontmatter.image.dir"
    | "frontmatter.image.ext"
    | "frontmatter.image.extension"
    | "frontmatter.image.fields.gitLogLatestAuthorEmail"
    | "frontmatter.image.fields.gitLogLatestAuthorName"
    | "frontmatter.image.fields.gitLogLatestDate"
    | "frontmatter.image.gid"
    | "frontmatter.image.id"
    | "frontmatter.image.ino"
    | "frontmatter.image.internal.content"
    | "frontmatter.image.internal.contentDigest"
    | "frontmatter.image.internal.description"
    | "frontmatter.image.internal.fieldOwners"
    | "frontmatter.image.internal.ignoreType"
    | "frontmatter.image.internal.mediaType"
    | "frontmatter.image.internal.owner"
    | "frontmatter.image.internal.type"
    | "frontmatter.image.mode"
    | "frontmatter.image.modifiedTime"
    | "frontmatter.image.mtime"
    | "frontmatter.image.mtimeMs"
    | "frontmatter.image.name"
    | "frontmatter.image.nlink"
    | "frontmatter.image.parent.children"
    | "frontmatter.image.parent.id"
    | "frontmatter.image.prettySize"
    | "frontmatter.image.publicURL"
    | "frontmatter.image.rdev"
    | "frontmatter.image.relativeDirectory"
    | "frontmatter.image.relativePath"
    | "frontmatter.image.root"
    | "frontmatter.image.size"
    | "frontmatter.image.sourceInstanceName"
    | "frontmatter.image.uid"
    | "frontmatter.incomplete"
    | "frontmatter.isOutdated"
    | "frontmatter.lang"
    | "frontmatter.link"
    | "frontmatter.location"
    | "frontmatter.position"
    | "frontmatter.published"
    | "frontmatter.sidebar"
    | "frontmatter.sidebarDepth"
    | "frontmatter.skill"
    | "frontmatter.source"
    | "frontmatter.sourceUrl"
    | "frontmatter.summaryPoint1"
    | "frontmatter.summaryPoint2"
    | "frontmatter.summaryPoint3"
    | "frontmatter.summaryPoint4"
    | "frontmatter.summaryPoints"
    | "frontmatter.tags"
    | "frontmatter.template"
    | "frontmatter.title"
    | "frontmatter.type"
    | "headings"
    | "headings.depth"
    | "headings.value"
    | "html"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "mdxAST"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "rawBody"
    | "slug"
    | "tableOfContents"
    | "timeToRead"
    | "wordCount.paragraphs"
    | "wordCount.sentences"
    | "wordCount.words"

  type MdxFieldsFilterInput = {
    readonly isOutdated: InputMaybe<BooleanQueryOperatorInput>
    readonly readingTime: InputMaybe<MdxFieldsReadingTimeFilterInput>
    readonly relativePath: InputMaybe<StringQueryOperatorInput>
    readonly slug: InputMaybe<StringQueryOperatorInput>
  }

  type MdxFieldsReadingTime = {
    readonly minutes: Maybe<Scalars["Float"]>
    readonly text: Maybe<Scalars["String"]>
    readonly time: Maybe<Scalars["Int"]>
    readonly words: Maybe<Scalars["Int"]>
  }

  type MdxFieldsReadingTimeFilterInput = {
    readonly minutes: InputMaybe<FloatQueryOperatorInput>
    readonly text: InputMaybe<StringQueryOperatorInput>
    readonly time: InputMaybe<IntQueryOperatorInput>
    readonly words: InputMaybe<IntQueryOperatorInput>
  }

  type MdxFilterInput = {
    readonly body: InputMaybe<StringQueryOperatorInput>
    readonly children: InputMaybe<NodeFilterListInput>
    readonly excerpt: InputMaybe<StringQueryOperatorInput>
    readonly fields: InputMaybe<MdxFieldsFilterInput>
    readonly fileAbsolutePath: InputMaybe<StringQueryOperatorInput>
    readonly frontmatter: InputMaybe<FrontmatterFilterInput>
    readonly headings: InputMaybe<MdxHeadingMdxFilterListInput>
    readonly html: InputMaybe<StringQueryOperatorInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly mdxAST: InputMaybe<JSONQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly rawBody: InputMaybe<StringQueryOperatorInput>
    readonly slug: InputMaybe<StringQueryOperatorInput>
    readonly tableOfContents: InputMaybe<JSONQueryOperatorInput>
    readonly timeToRead: InputMaybe<IntQueryOperatorInput>
    readonly wordCount: InputMaybe<MdxWordCountFilterInput>
  }

  type MdxFilterListInput = {
    readonly elemMatch: InputMaybe<MdxFilterInput>
  }

  type MdxFrontmatter = {
    readonly title: Scalars["String"]
  }

  type MdxGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<MdxEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<MdxGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<Mdx>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type MdxGroupConnection_distinctArgs = {
    field: MdxFieldsEnum
  }

  type MdxGroupConnection_groupArgs = {
    field: MdxFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type MdxGroupConnection_maxArgs = {
    field: MdxFieldsEnum
  }

  type MdxGroupConnection_minArgs = {
    field: MdxFieldsEnum
  }

  type MdxGroupConnection_sumArgs = {
    field: MdxFieldsEnum
  }

  type MdxHeadingMdx = {
    readonly depth: Maybe<Scalars["Int"]>
    readonly value: Maybe<Scalars["String"]>
  }

  type MdxHeadingMdxFilterInput = {
    readonly depth: InputMaybe<IntQueryOperatorInput>
    readonly value: InputMaybe<StringQueryOperatorInput>
  }

  type MdxHeadingMdxFilterListInput = {
    readonly elemMatch: InputMaybe<MdxHeadingMdxFilterInput>
  }

  type MdxSortInput = {
    readonly fields: InputMaybe<ReadonlyArray<InputMaybe<MdxFieldsEnum>>>
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type MdxWordCount = {
    readonly paragraphs: Maybe<Scalars["Int"]>
    readonly sentences: Maybe<Scalars["Int"]>
    readonly words: Maybe<Scalars["Int"]>
  }

  type MdxWordCountFilterInput = {
    readonly paragraphs: InputMaybe<IntQueryOperatorInput>
    readonly sentences: InputMaybe<IntQueryOperatorInput>
    readonly words: InputMaybe<IntQueryOperatorInput>
  }

  type MonthJson = Node & {
    readonly children: ReadonlyArray<Node>
    readonly currency: Maybe<Scalars["String"]>
    readonly data: Maybe<ReadonlyArray<Maybe<MonthJsonData>>>
    readonly dateRange: Maybe<MonthJsonDateRange>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly mode: Maybe<Scalars["String"]>
    readonly name: Maybe<Scalars["String"]>
    readonly parent: Maybe<Node>
    readonly totalCosts: Maybe<Scalars["Int"]>
    readonly totalPreTranslated: Maybe<Scalars["Int"]>
    readonly totalTMSavings: Maybe<Scalars["Int"]>
    readonly unit: Maybe<Scalars["String"]>
    readonly url: Maybe<Scalars["String"]>
  }

  type MonthJsonConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<MonthJsonEdge>
    readonly group: ReadonlyArray<MonthJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<MonthJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type MonthJsonConnection_distinctArgs = {
    field: MonthJsonFieldsEnum
  }

  type MonthJsonConnection_groupArgs = {
    field: MonthJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type MonthJsonConnection_maxArgs = {
    field: MonthJsonFieldsEnum
  }

  type MonthJsonConnection_minArgs = {
    field: MonthJsonFieldsEnum
  }

  type MonthJsonConnection_sumArgs = {
    field: MonthJsonFieldsEnum
  }

  type MonthJsonData = {
    readonly languages: Maybe<ReadonlyArray<Maybe<MonthJsonDataLanguages>>>
    readonly user: Maybe<MonthJsonDataUser>
  }

  type MonthJsonDataFilterInput = {
    readonly languages: InputMaybe<MonthJsonDataLanguagesFilterListInput>
    readonly user: InputMaybe<MonthJsonDataUserFilterInput>
  }

  type MonthJsonDataFilterListInput = {
    readonly elemMatch: InputMaybe<MonthJsonDataFilterInput>
  }

  type MonthJsonDataLanguages = {
    readonly approvalCosts: Maybe<MonthJsonDataLanguagesApprovalCosts>
    readonly approved: Maybe<MonthJsonDataLanguagesApproved>
    readonly language: Maybe<MonthJsonDataLanguagesLanguage>
    readonly targetTranslated: Maybe<MonthJsonDataLanguagesTargetTranslated>
    readonly translated: Maybe<MonthJsonDataLanguagesTranslated>
    readonly translatedByMt: Maybe<MonthJsonDataLanguagesTranslatedByMt>
    readonly translationCosts: Maybe<MonthJsonDataLanguagesTranslationCosts>
  }

  type MonthJsonDataLanguagesApprovalCosts = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type MonthJsonDataLanguagesApprovalCostsFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type MonthJsonDataLanguagesApproved = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type MonthJsonDataLanguagesApprovedFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type MonthJsonDataLanguagesFilterInput = {
    readonly approvalCosts: InputMaybe<MonthJsonDataLanguagesApprovalCostsFilterInput>
    readonly approved: InputMaybe<MonthJsonDataLanguagesApprovedFilterInput>
    readonly language: InputMaybe<MonthJsonDataLanguagesLanguageFilterInput>
    readonly targetTranslated: InputMaybe<MonthJsonDataLanguagesTargetTranslatedFilterInput>
    readonly translated: InputMaybe<MonthJsonDataLanguagesTranslatedFilterInput>
    readonly translatedByMt: InputMaybe<MonthJsonDataLanguagesTranslatedByMtFilterInput>
    readonly translationCosts: InputMaybe<MonthJsonDataLanguagesTranslationCostsFilterInput>
  }

  type MonthJsonDataLanguagesFilterListInput = {
    readonly elemMatch: InputMaybe<MonthJsonDataLanguagesFilterInput>
  }

  type MonthJsonDataLanguagesLanguage = {
    readonly id: Maybe<Scalars["String"]>
    readonly name: Maybe<Scalars["String"]>
    readonly preTranslate: Maybe<Scalars["Int"]>
    readonly tmSavings: Maybe<Scalars["Int"]>
    readonly totalCosts: Maybe<Scalars["Int"]>
  }

  type MonthJsonDataLanguagesLanguageFilterInput = {
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly preTranslate: InputMaybe<IntQueryOperatorInput>
    readonly tmSavings: InputMaybe<IntQueryOperatorInput>
    readonly totalCosts: InputMaybe<IntQueryOperatorInput>
  }

  type MonthJsonDataLanguagesTargetTranslated = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type MonthJsonDataLanguagesTargetTranslatedFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type MonthJsonDataLanguagesTranslated = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type MonthJsonDataLanguagesTranslatedByMt = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type MonthJsonDataLanguagesTranslatedByMtFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type MonthJsonDataLanguagesTranslatedFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type MonthJsonDataLanguagesTranslationCosts = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type MonthJsonDataLanguagesTranslationCostsFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type MonthJsonDataUser = {
    readonly avatarUrl: Maybe<Scalars["String"]>
    readonly fullName: Maybe<Scalars["String"]>
    readonly id: Maybe<Scalars["Int"]>
    readonly preTranslated: Maybe<Scalars["Int"]>
    readonly totalCosts: Maybe<Scalars["Int"]>
    readonly userRole: Maybe<Scalars["String"]>
    readonly username: Maybe<Scalars["String"]>
  }

  type MonthJsonDataUserFilterInput = {
    readonly avatarUrl: InputMaybe<StringQueryOperatorInput>
    readonly fullName: InputMaybe<StringQueryOperatorInput>
    readonly id: InputMaybe<IntQueryOperatorInput>
    readonly preTranslated: InputMaybe<IntQueryOperatorInput>
    readonly totalCosts: InputMaybe<IntQueryOperatorInput>
    readonly userRole: InputMaybe<StringQueryOperatorInput>
    readonly username: InputMaybe<StringQueryOperatorInput>
  }

  type MonthJsonDateRange = {
    readonly from: Maybe<Scalars["Date"]>
    readonly to: Maybe<Scalars["Date"]>
  }

  type MonthJsonDateRange_fromArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type MonthJsonDateRange_toArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type MonthJsonDateRangeFilterInput = {
    readonly from: InputMaybe<DateQueryOperatorInput>
    readonly to: InputMaybe<DateQueryOperatorInput>
  }

  type MonthJsonEdge = {
    readonly next: Maybe<MonthJson>
    readonly node: MonthJson
    readonly previous: Maybe<MonthJson>
  }

  type MonthJsonFieldsEnum =
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "currency"
    | "data"
    | "data.languages"
    | "data.languages.approvalCosts.default"
    | "data.languages.approvalCosts.tmMatch"
    | "data.languages.approvalCosts.total"
    | "data.languages.approved.default"
    | "data.languages.approved.tmMatch"
    | "data.languages.approved.total"
    | "data.languages.language.id"
    | "data.languages.language.name"
    | "data.languages.language.preTranslate"
    | "data.languages.language.tmSavings"
    | "data.languages.language.totalCosts"
    | "data.languages.targetTranslated.default"
    | "data.languages.targetTranslated.tmMatch"
    | "data.languages.targetTranslated.total"
    | "data.languages.translatedByMt.default"
    | "data.languages.translatedByMt.tmMatch"
    | "data.languages.translatedByMt.total"
    | "data.languages.translated.default"
    | "data.languages.translated.tmMatch"
    | "data.languages.translated.total"
    | "data.languages.translationCosts.default"
    | "data.languages.translationCosts.tmMatch"
    | "data.languages.translationCosts.total"
    | "data.user.avatarUrl"
    | "data.user.fullName"
    | "data.user.id"
    | "data.user.preTranslated"
    | "data.user.totalCosts"
    | "data.user.userRole"
    | "data.user.username"
    | "dateRange.from"
    | "dateRange.to"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "mode"
    | "name"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "totalCosts"
    | "totalPreTranslated"
    | "totalTMSavings"
    | "unit"
    | "url"

  type MonthJsonFilterInput = {
    readonly children: InputMaybe<NodeFilterListInput>
    readonly currency: InputMaybe<StringQueryOperatorInput>
    readonly data: InputMaybe<MonthJsonDataFilterListInput>
    readonly dateRange: InputMaybe<MonthJsonDateRangeFilterInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly mode: InputMaybe<StringQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly totalCosts: InputMaybe<IntQueryOperatorInput>
    readonly totalPreTranslated: InputMaybe<IntQueryOperatorInput>
    readonly totalTMSavings: InputMaybe<IntQueryOperatorInput>
    readonly unit: InputMaybe<StringQueryOperatorInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type MonthJsonFilterListInput = {
    readonly elemMatch: InputMaybe<MonthJsonFilterInput>
  }

  type MonthJsonGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<MonthJsonEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<MonthJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<MonthJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type MonthJsonGroupConnection_distinctArgs = {
    field: MonthJsonFieldsEnum
  }

  type MonthJsonGroupConnection_groupArgs = {
    field: MonthJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type MonthJsonGroupConnection_maxArgs = {
    field: MonthJsonFieldsEnum
  }

  type MonthJsonGroupConnection_minArgs = {
    field: MonthJsonFieldsEnum
  }

  type MonthJsonGroupConnection_sumArgs = {
    field: MonthJsonFieldsEnum
  }

  type MonthJsonSortInput = {
    readonly fields: InputMaybe<ReadonlyArray<InputMaybe<MonthJsonFieldsEnum>>>
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  /** Node Interface */
  type Node = {
    readonly children: ReadonlyArray<Node>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly parent: Maybe<Node>
  }

  type NodeFilterInput = {
    readonly children: InputMaybe<NodeFilterListInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly parent: InputMaybe<NodeFilterInput>
  }

  type NodeFilterListInput = {
    readonly elemMatch: InputMaybe<NodeFilterInput>
  }

  type PNGOptions = {
    readonly compressionSpeed: InputMaybe<Scalars["Int"]>
    readonly quality: InputMaybe<Scalars["Int"]>
  }

  type PageInfo = {
    readonly currentPage: Scalars["Int"]
    readonly hasNextPage: Scalars["Boolean"]
    readonly hasPreviousPage: Scalars["Boolean"]
    readonly itemCount: Scalars["Int"]
    readonly pageCount: Scalars["Int"]
    readonly perPage: Maybe<Scalars["Int"]>
    readonly totalCount: Scalars["Int"]
  }

  type Potrace = {
    readonly alphaMax: InputMaybe<Scalars["Float"]>
    readonly background: InputMaybe<Scalars["String"]>
    readonly blackOnWhite: InputMaybe<Scalars["Boolean"]>
    readonly color: InputMaybe<Scalars["String"]>
    readonly optCurve: InputMaybe<Scalars["Boolean"]>
    readonly optTolerance: InputMaybe<Scalars["Float"]>
    readonly threshold: InputMaybe<Scalars["Int"]>
    readonly turdSize: InputMaybe<Scalars["Float"]>
    readonly turnPolicy: InputMaybe<PotraceTurnPolicy>
  }

  type PotraceTurnPolicy =
    | "black"
    | "left"
    | "majority"
    | "minority"
    | "right"
    | "white"

  type QuarterJson = Node & {
    readonly children: ReadonlyArray<Node>
    readonly currency: Maybe<Scalars["String"]>
    readonly data: Maybe<ReadonlyArray<Maybe<QuarterJsonData>>>
    readonly dateRange: Maybe<QuarterJsonDateRange>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly mode: Maybe<Scalars["String"]>
    readonly name: Maybe<Scalars["String"]>
    readonly parent: Maybe<Node>
    readonly totalCosts: Maybe<Scalars["Int"]>
    readonly totalPreTranslated: Maybe<Scalars["Int"]>
    readonly totalTMSavings: Maybe<Scalars["Int"]>
    readonly unit: Maybe<Scalars["String"]>
    readonly url: Maybe<Scalars["String"]>
  }

  type QuarterJsonConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<QuarterJsonEdge>
    readonly group: ReadonlyArray<QuarterJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<QuarterJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type QuarterJsonConnection_distinctArgs = {
    field: QuarterJsonFieldsEnum
  }

  type QuarterJsonConnection_groupArgs = {
    field: QuarterJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type QuarterJsonConnection_maxArgs = {
    field: QuarterJsonFieldsEnum
  }

  type QuarterJsonConnection_minArgs = {
    field: QuarterJsonFieldsEnum
  }

  type QuarterJsonConnection_sumArgs = {
    field: QuarterJsonFieldsEnum
  }

  type QuarterJsonData = {
    readonly languages: Maybe<ReadonlyArray<Maybe<QuarterJsonDataLanguages>>>
    readonly user: Maybe<QuarterJsonDataUser>
  }

  type QuarterJsonDataFilterInput = {
    readonly languages: InputMaybe<QuarterJsonDataLanguagesFilterListInput>
    readonly user: InputMaybe<QuarterJsonDataUserFilterInput>
  }

  type QuarterJsonDataFilterListInput = {
    readonly elemMatch: InputMaybe<QuarterJsonDataFilterInput>
  }

  type QuarterJsonDataLanguages = {
    readonly approvalCosts: Maybe<QuarterJsonDataLanguagesApprovalCosts>
    readonly approved: Maybe<QuarterJsonDataLanguagesApproved>
    readonly language: Maybe<QuarterJsonDataLanguagesLanguage>
    readonly targetTranslated: Maybe<QuarterJsonDataLanguagesTargetTranslated>
    readonly translated: Maybe<QuarterJsonDataLanguagesTranslated>
    readonly translatedByMt: Maybe<QuarterJsonDataLanguagesTranslatedByMt>
    readonly translationCosts: Maybe<QuarterJsonDataLanguagesTranslationCosts>
  }

  type QuarterJsonDataLanguagesApprovalCosts = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type QuarterJsonDataLanguagesApprovalCostsFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type QuarterJsonDataLanguagesApproved = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type QuarterJsonDataLanguagesApprovedFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type QuarterJsonDataLanguagesFilterInput = {
    readonly approvalCosts: InputMaybe<QuarterJsonDataLanguagesApprovalCostsFilterInput>
    readonly approved: InputMaybe<QuarterJsonDataLanguagesApprovedFilterInput>
    readonly language: InputMaybe<QuarterJsonDataLanguagesLanguageFilterInput>
    readonly targetTranslated: InputMaybe<QuarterJsonDataLanguagesTargetTranslatedFilterInput>
    readonly translated: InputMaybe<QuarterJsonDataLanguagesTranslatedFilterInput>
    readonly translatedByMt: InputMaybe<QuarterJsonDataLanguagesTranslatedByMtFilterInput>
    readonly translationCosts: InputMaybe<QuarterJsonDataLanguagesTranslationCostsFilterInput>
  }

  type QuarterJsonDataLanguagesFilterListInput = {
    readonly elemMatch: InputMaybe<QuarterJsonDataLanguagesFilterInput>
  }

  type QuarterJsonDataLanguagesLanguage = {
    readonly id: Maybe<Scalars["String"]>
    readonly name: Maybe<Scalars["String"]>
    readonly preTranslate: Maybe<Scalars["Int"]>
    readonly tmSavings: Maybe<Scalars["Int"]>
    readonly totalCosts: Maybe<Scalars["Int"]>
  }

  type QuarterJsonDataLanguagesLanguageFilterInput = {
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly preTranslate: InputMaybe<IntQueryOperatorInput>
    readonly tmSavings: InputMaybe<IntQueryOperatorInput>
    readonly totalCosts: InputMaybe<IntQueryOperatorInput>
  }

  type QuarterJsonDataLanguagesTargetTranslated = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type QuarterJsonDataLanguagesTargetTranslatedFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type QuarterJsonDataLanguagesTranslated = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type QuarterJsonDataLanguagesTranslatedByMt = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type QuarterJsonDataLanguagesTranslatedByMtFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type QuarterJsonDataLanguagesTranslatedFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type QuarterJsonDataLanguagesTranslationCosts = {
    readonly default: Maybe<Scalars["Int"]>
    readonly tmMatch: Maybe<Scalars["Int"]>
    readonly total: Maybe<Scalars["Int"]>
  }

  type QuarterJsonDataLanguagesTranslationCostsFilterInput = {
    readonly default: InputMaybe<IntQueryOperatorInput>
    readonly tmMatch: InputMaybe<IntQueryOperatorInput>
    readonly total: InputMaybe<IntQueryOperatorInput>
  }

  type QuarterJsonDataUser = {
    readonly avatarUrl: Maybe<Scalars["String"]>
    readonly fullName: Maybe<Scalars["String"]>
    readonly id: Maybe<Scalars["Int"]>
    readonly preTranslated: Maybe<Scalars["Int"]>
    readonly totalCosts: Maybe<Scalars["Int"]>
    readonly userRole: Maybe<Scalars["String"]>
    readonly username: Maybe<Scalars["String"]>
  }

  type QuarterJsonDataUserFilterInput = {
    readonly avatarUrl: InputMaybe<StringQueryOperatorInput>
    readonly fullName: InputMaybe<StringQueryOperatorInput>
    readonly id: InputMaybe<IntQueryOperatorInput>
    readonly preTranslated: InputMaybe<IntQueryOperatorInput>
    readonly totalCosts: InputMaybe<IntQueryOperatorInput>
    readonly userRole: InputMaybe<StringQueryOperatorInput>
    readonly username: InputMaybe<StringQueryOperatorInput>
  }

  type QuarterJsonDateRange = {
    readonly from: Maybe<Scalars["Date"]>
    readonly to: Maybe<Scalars["Date"]>
  }

  type QuarterJsonDateRange_fromArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type QuarterJsonDateRange_toArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type QuarterJsonDateRangeFilterInput = {
    readonly from: InputMaybe<DateQueryOperatorInput>
    readonly to: InputMaybe<DateQueryOperatorInput>
  }

  type QuarterJsonEdge = {
    readonly next: Maybe<QuarterJson>
    readonly node: QuarterJson
    readonly previous: Maybe<QuarterJson>
  }

  type QuarterJsonFieldsEnum =
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "currency"
    | "data"
    | "data.languages"
    | "data.languages.approvalCosts.default"
    | "data.languages.approvalCosts.tmMatch"
    | "data.languages.approvalCosts.total"
    | "data.languages.approved.default"
    | "data.languages.approved.tmMatch"
    | "data.languages.approved.total"
    | "data.languages.language.id"
    | "data.languages.language.name"
    | "data.languages.language.preTranslate"
    | "data.languages.language.tmSavings"
    | "data.languages.language.totalCosts"
    | "data.languages.targetTranslated.default"
    | "data.languages.targetTranslated.tmMatch"
    | "data.languages.targetTranslated.total"
    | "data.languages.translatedByMt.default"
    | "data.languages.translatedByMt.tmMatch"
    | "data.languages.translatedByMt.total"
    | "data.languages.translated.default"
    | "data.languages.translated.tmMatch"
    | "data.languages.translated.total"
    | "data.languages.translationCosts.default"
    | "data.languages.translationCosts.tmMatch"
    | "data.languages.translationCosts.total"
    | "data.user.avatarUrl"
    | "data.user.fullName"
    | "data.user.id"
    | "data.user.preTranslated"
    | "data.user.totalCosts"
    | "data.user.userRole"
    | "data.user.username"
    | "dateRange.from"
    | "dateRange.to"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "mode"
    | "name"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "totalCosts"
    | "totalPreTranslated"
    | "totalTMSavings"
    | "unit"
    | "url"

  type QuarterJsonFilterInput = {
    readonly children: InputMaybe<NodeFilterListInput>
    readonly currency: InputMaybe<StringQueryOperatorInput>
    readonly data: InputMaybe<QuarterJsonDataFilterListInput>
    readonly dateRange: InputMaybe<QuarterJsonDateRangeFilterInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly mode: InputMaybe<StringQueryOperatorInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly totalCosts: InputMaybe<IntQueryOperatorInput>
    readonly totalPreTranslated: InputMaybe<IntQueryOperatorInput>
    readonly totalTMSavings: InputMaybe<IntQueryOperatorInput>
    readonly unit: InputMaybe<StringQueryOperatorInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type QuarterJsonFilterListInput = {
    readonly elemMatch: InputMaybe<QuarterJsonFilterInput>
  }

  type QuarterJsonGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<QuarterJsonEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<QuarterJsonGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<QuarterJson>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type QuarterJsonGroupConnection_distinctArgs = {
    field: QuarterJsonFieldsEnum
  }

  type QuarterJsonGroupConnection_groupArgs = {
    field: QuarterJsonFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type QuarterJsonGroupConnection_maxArgs = {
    field: QuarterJsonFieldsEnum
  }

  type QuarterJsonGroupConnection_minArgs = {
    field: QuarterJsonFieldsEnum
  }

  type QuarterJsonGroupConnection_sumArgs = {
    field: QuarterJsonFieldsEnum
  }

  type QuarterJsonSortInput = {
    readonly fields: InputMaybe<
      ReadonlyArray<InputMaybe<QuarterJsonFieldsEnum>>
    >
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type Query = {
    readonly allAlltimeJson: AlltimeJsonConnection
    readonly allCexLayer2SupportJson: CexLayer2SupportJsonConnection
    readonly allCommunityEventsJson: CommunityEventsJsonConnection
    readonly allCommunityMeetupsJson: CommunityMeetupsJsonConnection
    readonly allConsensusBountyHuntersCsv: ConsensusBountyHuntersCsvConnection
    readonly allDataJson: DataJsonConnection
    readonly allDirectory: DirectoryConnection
    readonly allExchangesByCountryCsv: ExchangesByCountryCsvConnection
    readonly allExecutionBountyHuntersCsv: ExecutionBountyHuntersCsvConnection
    readonly allExternalTutorialsJson: ExternalTutorialsJsonConnection
    readonly allFile: FileConnection
    readonly allImageSharp: ImageSharpConnection
    readonly allLayer2Json: Layer2JsonConnection
    readonly allMdx: MdxConnection
    readonly allMonthJson: MonthJsonConnection
    readonly allQuarterJson: QuarterJsonConnection
    readonly allSite: SiteConnection
    readonly allSiteBuildMetadata: SiteBuildMetadataConnection
    readonly allSiteFunction: SiteFunctionConnection
    readonly allSitePage: SitePageConnection
    readonly allSitePlugin: SitePluginConnection
    readonly allWalletsCsv: WalletsCsvConnection
    readonly alltimeJson: Maybe<AlltimeJson>
    readonly cexLayer2SupportJson: Maybe<CexLayer2SupportJson>
    readonly communityEventsJson: Maybe<CommunityEventsJson>
    readonly communityMeetupsJson: Maybe<CommunityMeetupsJson>
    readonly consensusBountyHuntersCsv: Maybe<ConsensusBountyHuntersCsv>
    readonly dataJson: Maybe<DataJson>
    readonly directory: Maybe<Directory>
    readonly exchangesByCountryCsv: Maybe<ExchangesByCountryCsv>
    readonly executionBountyHuntersCsv: Maybe<ExecutionBountyHuntersCsv>
    readonly externalTutorialsJson: Maybe<ExternalTutorialsJson>
    readonly file: Maybe<File>
    readonly imageSharp: Maybe<ImageSharp>
    readonly layer2Json: Maybe<Layer2Json>
    readonly mdx: Maybe<Mdx>
    readonly monthJson: Maybe<MonthJson>
    readonly quarterJson: Maybe<QuarterJson>
    readonly site: Maybe<Site>
    readonly siteBuildMetadata: Maybe<SiteBuildMetadata>
    readonly siteFunction: Maybe<SiteFunction>
    readonly sitePage: Maybe<SitePage>
    readonly sitePlugin: Maybe<SitePlugin>
    readonly walletsCsv: Maybe<WalletsCsv>
  }

  type Query_allAlltimeJsonArgs = {
    filter: InputMaybe<AlltimeJsonFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<AlltimeJsonSortInput>
  }

  type Query_allCexLayer2SupportJsonArgs = {
    filter: InputMaybe<CexLayer2SupportJsonFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<CexLayer2SupportJsonSortInput>
  }

  type Query_allCommunityEventsJsonArgs = {
    filter: InputMaybe<CommunityEventsJsonFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<CommunityEventsJsonSortInput>
  }

  type Query_allCommunityMeetupsJsonArgs = {
    filter: InputMaybe<CommunityMeetupsJsonFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<CommunityMeetupsJsonSortInput>
  }

  type Query_allConsensusBountyHuntersCsvArgs = {
    filter: InputMaybe<ConsensusBountyHuntersCsvFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<ConsensusBountyHuntersCsvSortInput>
  }

  type Query_allDataJsonArgs = {
    filter: InputMaybe<DataJsonFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<DataJsonSortInput>
  }

  type Query_allDirectoryArgs = {
    filter: InputMaybe<DirectoryFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<DirectorySortInput>
  }

  type Query_allExchangesByCountryCsvArgs = {
    filter: InputMaybe<ExchangesByCountryCsvFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<ExchangesByCountryCsvSortInput>
  }

  type Query_allExecutionBountyHuntersCsvArgs = {
    filter: InputMaybe<ExecutionBountyHuntersCsvFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<ExecutionBountyHuntersCsvSortInput>
  }

  type Query_allExternalTutorialsJsonArgs = {
    filter: InputMaybe<ExternalTutorialsJsonFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<ExternalTutorialsJsonSortInput>
  }

  type Query_allFileArgs = {
    filter: InputMaybe<FileFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<FileSortInput>
  }

  type Query_allImageSharpArgs = {
    filter: InputMaybe<ImageSharpFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<ImageSharpSortInput>
  }

  type Query_allLayer2JsonArgs = {
    filter: InputMaybe<Layer2JsonFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<Layer2JsonSortInput>
  }

  type Query_allMdxArgs = {
    filter: InputMaybe<MdxFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<MdxSortInput>
  }

  type Query_allMonthJsonArgs = {
    filter: InputMaybe<MonthJsonFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<MonthJsonSortInput>
  }

  type Query_allQuarterJsonArgs = {
    filter: InputMaybe<QuarterJsonFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<QuarterJsonSortInput>
  }

  type Query_allSiteArgs = {
    filter: InputMaybe<SiteFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<SiteSortInput>
  }

  type Query_allSiteBuildMetadataArgs = {
    filter: InputMaybe<SiteBuildMetadataFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<SiteBuildMetadataSortInput>
  }

  type Query_allSiteFunctionArgs = {
    filter: InputMaybe<SiteFunctionFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<SiteFunctionSortInput>
  }

  type Query_allSitePageArgs = {
    filter: InputMaybe<SitePageFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<SitePageSortInput>
  }

  type Query_allSitePluginArgs = {
    filter: InputMaybe<SitePluginFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<SitePluginSortInput>
  }

  type Query_allWalletsCsvArgs = {
    filter: InputMaybe<WalletsCsvFilterInput>
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
    sort: InputMaybe<WalletsCsvSortInput>
  }

  type Query_alltimeJsonArgs = {
    children: InputMaybe<NodeFilterListInput>
    currency: InputMaybe<StringQueryOperatorInput>
    data: InputMaybe<AlltimeJsonDataFilterListInput>
    dateRange: InputMaybe<AlltimeJsonDateRangeFilterInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    mode: InputMaybe<StringQueryOperatorInput>
    name: InputMaybe<StringQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    totalCosts: InputMaybe<IntQueryOperatorInput>
    totalPreTranslated: InputMaybe<IntQueryOperatorInput>
    totalTMSavings: InputMaybe<IntQueryOperatorInput>
    unit: InputMaybe<StringQueryOperatorInput>
    url: InputMaybe<StringQueryOperatorInput>
  }

  type Query_cexLayer2SupportJsonArgs = {
    children: InputMaybe<NodeFilterListInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    name: InputMaybe<StringQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    supports_deposits: InputMaybe<StringQueryOperatorInput>
    supports_withdrawals: InputMaybe<StringQueryOperatorInput>
    url: InputMaybe<StringQueryOperatorInput>
  }

  type Query_communityEventsJsonArgs = {
    children: InputMaybe<NodeFilterListInput>
    description: InputMaybe<StringQueryOperatorInput>
    endDate: InputMaybe<DateQueryOperatorInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    location: InputMaybe<StringQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    sponsor: InputMaybe<StringQueryOperatorInput>
    startDate: InputMaybe<DateQueryOperatorInput>
    title: InputMaybe<StringQueryOperatorInput>
    to: InputMaybe<StringQueryOperatorInput>
  }

  type Query_communityMeetupsJsonArgs = {
    children: InputMaybe<NodeFilterListInput>
    emoji: InputMaybe<StringQueryOperatorInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    link: InputMaybe<StringQueryOperatorInput>
    location: InputMaybe<StringQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    title: InputMaybe<StringQueryOperatorInput>
  }

  type Query_consensusBountyHuntersCsvArgs = {
    children: InputMaybe<NodeFilterListInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    name: InputMaybe<StringQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    score: InputMaybe<IntQueryOperatorInput>
    username: InputMaybe<StringQueryOperatorInput>
  }

  type Query_dataJsonArgs = {
    children: InputMaybe<NodeFilterListInput>
    commit: InputMaybe<BooleanQueryOperatorInput>
    contributors: InputMaybe<DataJsonContributorsFilterListInput>
    contributorsPerLine: InputMaybe<IntQueryOperatorInput>
    files: InputMaybe<StringQueryOperatorInput>
    id: InputMaybe<StringQueryOperatorInput>
    imageSize: InputMaybe<IntQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    keyGen: InputMaybe<DataJsonKeyGenFilterListInput>
    nodeTools: InputMaybe<DataJsonNodeToolsFilterListInput>
    parent: InputMaybe<NodeFilterInput>
    pools: InputMaybe<DataJsonPoolsFilterListInput>
    projectName: InputMaybe<StringQueryOperatorInput>
    projectOwner: InputMaybe<StringQueryOperatorInput>
    repoHost: InputMaybe<StringQueryOperatorInput>
    repoType: InputMaybe<StringQueryOperatorInput>
    saas: InputMaybe<DataJsonSaasFilterListInput>
    skipCi: InputMaybe<BooleanQueryOperatorInput>
  }

  type Query_directoryArgs = {
    absolutePath: InputMaybe<StringQueryOperatorInput>
    accessTime: InputMaybe<DateQueryOperatorInput>
    atime: InputMaybe<DateQueryOperatorInput>
    atimeMs: InputMaybe<FloatQueryOperatorInput>
    base: InputMaybe<StringQueryOperatorInput>
    birthTime: InputMaybe<DateQueryOperatorInput>
    birthtime: InputMaybe<DateQueryOperatorInput>
    birthtimeMs: InputMaybe<FloatQueryOperatorInput>
    changeTime: InputMaybe<DateQueryOperatorInput>
    children: InputMaybe<NodeFilterListInput>
    ctime: InputMaybe<DateQueryOperatorInput>
    ctimeMs: InputMaybe<FloatQueryOperatorInput>
    dev: InputMaybe<IntQueryOperatorInput>
    dir: InputMaybe<StringQueryOperatorInput>
    ext: InputMaybe<StringQueryOperatorInput>
    extension: InputMaybe<StringQueryOperatorInput>
    gid: InputMaybe<IntQueryOperatorInput>
    id: InputMaybe<StringQueryOperatorInput>
    ino: InputMaybe<FloatQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    mode: InputMaybe<IntQueryOperatorInput>
    modifiedTime: InputMaybe<DateQueryOperatorInput>
    mtime: InputMaybe<DateQueryOperatorInput>
    mtimeMs: InputMaybe<FloatQueryOperatorInput>
    name: InputMaybe<StringQueryOperatorInput>
    nlink: InputMaybe<IntQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    prettySize: InputMaybe<StringQueryOperatorInput>
    rdev: InputMaybe<IntQueryOperatorInput>
    relativeDirectory: InputMaybe<StringQueryOperatorInput>
    relativePath: InputMaybe<StringQueryOperatorInput>
    root: InputMaybe<StringQueryOperatorInput>
    size: InputMaybe<IntQueryOperatorInput>
    sourceInstanceName: InputMaybe<StringQueryOperatorInput>
    uid: InputMaybe<IntQueryOperatorInput>
  }

  type Query_exchangesByCountryCsvArgs = {
    binance: InputMaybe<StringQueryOperatorInput>
    binanceus: InputMaybe<StringQueryOperatorInput>
    bitbuy: InputMaybe<StringQueryOperatorInput>
    bitfinex: InputMaybe<StringQueryOperatorInput>
    bitflyer: InputMaybe<StringQueryOperatorInput>
    bitkub: InputMaybe<StringQueryOperatorInput>
    bitso: InputMaybe<StringQueryOperatorInput>
    bittrex: InputMaybe<StringQueryOperatorInput>
    bitvavo: InputMaybe<StringQueryOperatorInput>
    bybit: InputMaybe<StringQueryOperatorInput>
    children: InputMaybe<NodeFilterListInput>
    coinbase: InputMaybe<StringQueryOperatorInput>
    coinmama: InputMaybe<StringQueryOperatorInput>
    coinspot: InputMaybe<StringQueryOperatorInput>
    country: InputMaybe<StringQueryOperatorInput>
    cryptocom: InputMaybe<StringQueryOperatorInput>
    easycrypto: InputMaybe<StringQueryOperatorInput>
    ftx: InputMaybe<StringQueryOperatorInput>
    ftxus: InputMaybe<StringQueryOperatorInput>
    gateio: InputMaybe<StringQueryOperatorInput>
    gemini: InputMaybe<StringQueryOperatorInput>
    huobiglobal: InputMaybe<StringQueryOperatorInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    itezcom: InputMaybe<StringQueryOperatorInput>
    kraken: InputMaybe<StringQueryOperatorInput>
    kucoin: InputMaybe<StringQueryOperatorInput>
    moonpay: InputMaybe<StringQueryOperatorInput>
    mtpelerin: InputMaybe<StringQueryOperatorInput>
    okx: InputMaybe<StringQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    rain: InputMaybe<StringQueryOperatorInput>
    simplex: InputMaybe<StringQueryOperatorInput>
    wazirx: InputMaybe<StringQueryOperatorInput>
    wyre: InputMaybe<StringQueryOperatorInput>
  }

  type Query_executionBountyHuntersCsvArgs = {
    children: InputMaybe<NodeFilterListInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    name: InputMaybe<StringQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    score: InputMaybe<IntQueryOperatorInput>
    username: InputMaybe<StringQueryOperatorInput>
  }

  type Query_externalTutorialsJsonArgs = {
    author: InputMaybe<StringQueryOperatorInput>
    authorGithub: InputMaybe<StringQueryOperatorInput>
    children: InputMaybe<NodeFilterListInput>
    description: InputMaybe<StringQueryOperatorInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    lang: InputMaybe<StringQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    publishDate: InputMaybe<StringQueryOperatorInput>
    skillLevel: InputMaybe<StringQueryOperatorInput>
    tags: InputMaybe<StringQueryOperatorInput>
    timeToRead: InputMaybe<StringQueryOperatorInput>
    title: InputMaybe<StringQueryOperatorInput>
    url: InputMaybe<StringQueryOperatorInput>
  }

  type Query_fileArgs = {
    absolutePath: InputMaybe<StringQueryOperatorInput>
    accessTime: InputMaybe<DateQueryOperatorInput>
    atime: InputMaybe<DateQueryOperatorInput>
    atimeMs: InputMaybe<FloatQueryOperatorInput>
    base: InputMaybe<StringQueryOperatorInput>
    birthTime: InputMaybe<DateQueryOperatorInput>
    birthtime: InputMaybe<DateQueryOperatorInput>
    birthtimeMs: InputMaybe<FloatQueryOperatorInput>
    blksize: InputMaybe<IntQueryOperatorInput>
    blocks: InputMaybe<IntQueryOperatorInput>
    changeTime: InputMaybe<DateQueryOperatorInput>
    childAlltimeJson: InputMaybe<AlltimeJsonFilterInput>
    childCexLayer2SupportJson: InputMaybe<CexLayer2SupportJsonFilterInput>
    childCommunityEventsJson: InputMaybe<CommunityEventsJsonFilterInput>
    childCommunityMeetupsJson: InputMaybe<CommunityMeetupsJsonFilterInput>
    childConsensusBountyHuntersCsv: InputMaybe<ConsensusBountyHuntersCsvFilterInput>
    childDataJson: InputMaybe<DataJsonFilterInput>
    childExchangesByCountryCsv: InputMaybe<ExchangesByCountryCsvFilterInput>
    childExecutionBountyHuntersCsv: InputMaybe<ExecutionBountyHuntersCsvFilterInput>
    childExternalTutorialsJson: InputMaybe<ExternalTutorialsJsonFilterInput>
    childImageSharp: InputMaybe<ImageSharpFilterInput>
    childLayer2Json: InputMaybe<Layer2JsonFilterInput>
    childMdx: InputMaybe<MdxFilterInput>
    childMonthJson: InputMaybe<MonthJsonFilterInput>
    childQuarterJson: InputMaybe<QuarterJsonFilterInput>
    childWalletsCsv: InputMaybe<WalletsCsvFilterInput>
    children: InputMaybe<NodeFilterListInput>
    childrenAlltimeJson: InputMaybe<AlltimeJsonFilterListInput>
    childrenCexLayer2SupportJson: InputMaybe<CexLayer2SupportJsonFilterListInput>
    childrenCommunityEventsJson: InputMaybe<CommunityEventsJsonFilterListInput>
    childrenCommunityMeetupsJson: InputMaybe<CommunityMeetupsJsonFilterListInput>
    childrenConsensusBountyHuntersCsv: InputMaybe<ConsensusBountyHuntersCsvFilterListInput>
    childrenDataJson: InputMaybe<DataJsonFilterListInput>
    childrenExchangesByCountryCsv: InputMaybe<ExchangesByCountryCsvFilterListInput>
    childrenExecutionBountyHuntersCsv: InputMaybe<ExecutionBountyHuntersCsvFilterListInput>
    childrenExternalTutorialsJson: InputMaybe<ExternalTutorialsJsonFilterListInput>
    childrenImageSharp: InputMaybe<ImageSharpFilterListInput>
    childrenLayer2Json: InputMaybe<Layer2JsonFilterListInput>
    childrenMdx: InputMaybe<MdxFilterListInput>
    childrenMonthJson: InputMaybe<MonthJsonFilterListInput>
    childrenQuarterJson: InputMaybe<QuarterJsonFilterListInput>
    childrenWalletsCsv: InputMaybe<WalletsCsvFilterListInput>
    ctime: InputMaybe<DateQueryOperatorInput>
    ctimeMs: InputMaybe<FloatQueryOperatorInput>
    dev: InputMaybe<IntQueryOperatorInput>
    dir: InputMaybe<StringQueryOperatorInput>
    ext: InputMaybe<StringQueryOperatorInput>
    extension: InputMaybe<StringQueryOperatorInput>
    fields: InputMaybe<FileFieldsFilterInput>
    gid: InputMaybe<IntQueryOperatorInput>
    id: InputMaybe<StringQueryOperatorInput>
    ino: InputMaybe<FloatQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    mode: InputMaybe<IntQueryOperatorInput>
    modifiedTime: InputMaybe<DateQueryOperatorInput>
    mtime: InputMaybe<DateQueryOperatorInput>
    mtimeMs: InputMaybe<FloatQueryOperatorInput>
    name: InputMaybe<StringQueryOperatorInput>
    nlink: InputMaybe<IntQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    prettySize: InputMaybe<StringQueryOperatorInput>
    publicURL: InputMaybe<StringQueryOperatorInput>
    rdev: InputMaybe<IntQueryOperatorInput>
    relativeDirectory: InputMaybe<StringQueryOperatorInput>
    relativePath: InputMaybe<StringQueryOperatorInput>
    root: InputMaybe<StringQueryOperatorInput>
    size: InputMaybe<IntQueryOperatorInput>
    sourceInstanceName: InputMaybe<StringQueryOperatorInput>
    uid: InputMaybe<IntQueryOperatorInput>
  }

  type Query_imageSharpArgs = {
    children: InputMaybe<NodeFilterListInput>
    fixed: InputMaybe<ImageSharpFixedFilterInput>
    fluid: InputMaybe<ImageSharpFluidFilterInput>
    gatsbyImageData: InputMaybe<JSONQueryOperatorInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    original: InputMaybe<ImageSharpOriginalFilterInput>
    parent: InputMaybe<NodeFilterInput>
    resize: InputMaybe<ImageSharpResizeFilterInput>
  }

  type Query_layer2JsonArgs = {
    children: InputMaybe<NodeFilterListInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    optimistic: InputMaybe<Layer2JsonOptimisticFilterListInput>
    parent: InputMaybe<NodeFilterInput>
    zk: InputMaybe<Layer2JsonZkFilterListInput>
  }

  type Query_mdxArgs = {
    body: InputMaybe<StringQueryOperatorInput>
    children: InputMaybe<NodeFilterListInput>
    excerpt: InputMaybe<StringQueryOperatorInput>
    fields: InputMaybe<MdxFieldsFilterInput>
    fileAbsolutePath: InputMaybe<StringQueryOperatorInput>
    frontmatter: InputMaybe<FrontmatterFilterInput>
    headings: InputMaybe<MdxHeadingMdxFilterListInput>
    html: InputMaybe<StringQueryOperatorInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    mdxAST: InputMaybe<JSONQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    rawBody: InputMaybe<StringQueryOperatorInput>
    slug: InputMaybe<StringQueryOperatorInput>
    tableOfContents: InputMaybe<JSONQueryOperatorInput>
    timeToRead: InputMaybe<IntQueryOperatorInput>
    wordCount: InputMaybe<MdxWordCountFilterInput>
  }

  type Query_monthJsonArgs = {
    children: InputMaybe<NodeFilterListInput>
    currency: InputMaybe<StringQueryOperatorInput>
    data: InputMaybe<MonthJsonDataFilterListInput>
    dateRange: InputMaybe<MonthJsonDateRangeFilterInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    mode: InputMaybe<StringQueryOperatorInput>
    name: InputMaybe<StringQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    totalCosts: InputMaybe<IntQueryOperatorInput>
    totalPreTranslated: InputMaybe<IntQueryOperatorInput>
    totalTMSavings: InputMaybe<IntQueryOperatorInput>
    unit: InputMaybe<StringQueryOperatorInput>
    url: InputMaybe<StringQueryOperatorInput>
  }

  type Query_quarterJsonArgs = {
    children: InputMaybe<NodeFilterListInput>
    currency: InputMaybe<StringQueryOperatorInput>
    data: InputMaybe<QuarterJsonDataFilterListInput>
    dateRange: InputMaybe<QuarterJsonDateRangeFilterInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    mode: InputMaybe<StringQueryOperatorInput>
    name: InputMaybe<StringQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    totalCosts: InputMaybe<IntQueryOperatorInput>
    totalPreTranslated: InputMaybe<IntQueryOperatorInput>
    totalTMSavings: InputMaybe<IntQueryOperatorInput>
    unit: InputMaybe<StringQueryOperatorInput>
    url: InputMaybe<StringQueryOperatorInput>
  }

  type Query_siteArgs = {
    buildTime: InputMaybe<DateQueryOperatorInput>
    children: InputMaybe<NodeFilterListInput>
    flags: InputMaybe<SiteFlagsFilterInput>
    host: InputMaybe<StringQueryOperatorInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    jsxRuntime: InputMaybe<StringQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    pathPrefix: InputMaybe<StringQueryOperatorInput>
    polyfill: InputMaybe<BooleanQueryOperatorInput>
    port: InputMaybe<IntQueryOperatorInput>
    siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>
    trailingSlash: InputMaybe<StringQueryOperatorInput>
  }

  type Query_siteBuildMetadataArgs = {
    buildTime: InputMaybe<DateQueryOperatorInput>
    children: InputMaybe<NodeFilterListInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    parent: InputMaybe<NodeFilterInput>
  }

  type Query_siteFunctionArgs = {
    absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>
    children: InputMaybe<NodeFilterListInput>
    functionRoute: InputMaybe<StringQueryOperatorInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    matchPath: InputMaybe<StringQueryOperatorInput>
    originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>
    originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    pluginName: InputMaybe<StringQueryOperatorInput>
    relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>
  }

  type Query_sitePageArgs = {
    children: InputMaybe<NodeFilterListInput>
    component: InputMaybe<StringQueryOperatorInput>
    componentChunkName: InputMaybe<StringQueryOperatorInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    internalComponentName: InputMaybe<StringQueryOperatorInput>
    matchPath: InputMaybe<StringQueryOperatorInput>
    pageContext: InputMaybe<JSONQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    path: InputMaybe<StringQueryOperatorInput>
    pluginCreator: InputMaybe<SitePluginFilterInput>
  }

  type Query_sitePluginArgs = {
    browserAPIs: InputMaybe<StringQueryOperatorInput>
    children: InputMaybe<NodeFilterListInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    name: InputMaybe<StringQueryOperatorInput>
    nodeAPIs: InputMaybe<StringQueryOperatorInput>
    packageJson: InputMaybe<JSONQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    pluginFilepath: InputMaybe<StringQueryOperatorInput>
    pluginOptions: InputMaybe<JSONQueryOperatorInput>
    resolve: InputMaybe<StringQueryOperatorInput>
    ssrAPIs: InputMaybe<StringQueryOperatorInput>
    version: InputMaybe<StringQueryOperatorInput>
  }

  type Query_walletsCsvArgs = {
    brand_color: InputMaybe<StringQueryOperatorInput>
    children: InputMaybe<NodeFilterListInput>
    has_bank_withdrawals: InputMaybe<StringQueryOperatorInput>
    has_card_deposits: InputMaybe<StringQueryOperatorInput>
    has_defi_integrations: InputMaybe<StringQueryOperatorInput>
    has_desktop: InputMaybe<StringQueryOperatorInput>
    has_dex_integrations: InputMaybe<StringQueryOperatorInput>
    has_explore_dapps: InputMaybe<StringQueryOperatorInput>
    has_hardware: InputMaybe<StringQueryOperatorInput>
    has_high_volume_purchases: InputMaybe<StringQueryOperatorInput>
    has_limits_protection: InputMaybe<StringQueryOperatorInput>
    has_mobile: InputMaybe<StringQueryOperatorInput>
    has_multisig: InputMaybe<StringQueryOperatorInput>
    has_web: InputMaybe<StringQueryOperatorInput>
    id: InputMaybe<StringQueryOperatorInput>
    internal: InputMaybe<InternalFilterInput>
    name: InputMaybe<StringQueryOperatorInput>
    parent: InputMaybe<NodeFilterInput>
    url: InputMaybe<StringQueryOperatorInput>
  }

  type Site = Node & {
    readonly buildTime: Maybe<Scalars["Date"]>
    readonly children: ReadonlyArray<Node>
    readonly flags: Maybe<SiteFlags>
    readonly host: Maybe<Scalars["String"]>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly jsxRuntime: Maybe<Scalars["String"]>
    readonly parent: Maybe<Node>
    readonly pathPrefix: Maybe<Scalars["String"]>
    readonly polyfill: Maybe<Scalars["Boolean"]>
    readonly port: Maybe<Scalars["Int"]>
    readonly siteMetadata: Maybe<SiteSiteMetadata>
    readonly trailingSlash: Maybe<Scalars["String"]>
  }

  type Site_buildTimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type SiteBuildMetadata = Node & {
    readonly buildTime: Maybe<Scalars["Date"]>
    readonly children: ReadonlyArray<Node>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly parent: Maybe<Node>
  }

  type SiteBuildMetadata_buildTimeArgs = {
    difference: InputMaybe<Scalars["String"]>
    formatString: InputMaybe<Scalars["String"]>
    fromNow: InputMaybe<Scalars["Boolean"]>
    locale: InputMaybe<Scalars["String"]>
  }

  type SiteBuildMetadataConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<SiteBuildMetadataEdge>
    readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<SiteBuildMetadata>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type SiteBuildMetadataConnection_distinctArgs = {
    field: SiteBuildMetadataFieldsEnum
  }

  type SiteBuildMetadataConnection_groupArgs = {
    field: SiteBuildMetadataFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type SiteBuildMetadataConnection_maxArgs = {
    field: SiteBuildMetadataFieldsEnum
  }

  type SiteBuildMetadataConnection_minArgs = {
    field: SiteBuildMetadataFieldsEnum
  }

  type SiteBuildMetadataConnection_sumArgs = {
    field: SiteBuildMetadataFieldsEnum
  }

  type SiteBuildMetadataEdge = {
    readonly next: Maybe<SiteBuildMetadata>
    readonly node: SiteBuildMetadata
    readonly previous: Maybe<SiteBuildMetadata>
  }

  type SiteBuildMetadataFieldsEnum =
    | "buildTime"
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"

  type SiteBuildMetadataFilterInput = {
    readonly buildTime: InputMaybe<DateQueryOperatorInput>
    readonly children: InputMaybe<NodeFilterListInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly parent: InputMaybe<NodeFilterInput>
  }

  type SiteBuildMetadataGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<SiteBuildMetadataEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<SiteBuildMetadata>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type SiteBuildMetadataGroupConnection_distinctArgs = {
    field: SiteBuildMetadataFieldsEnum
  }

  type SiteBuildMetadataGroupConnection_groupArgs = {
    field: SiteBuildMetadataFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type SiteBuildMetadataGroupConnection_maxArgs = {
    field: SiteBuildMetadataFieldsEnum
  }

  type SiteBuildMetadataGroupConnection_minArgs = {
    field: SiteBuildMetadataFieldsEnum
  }

  type SiteBuildMetadataGroupConnection_sumArgs = {
    field: SiteBuildMetadataFieldsEnum
  }

  type SiteBuildMetadataSortInput = {
    readonly fields: InputMaybe<
      ReadonlyArray<InputMaybe<SiteBuildMetadataFieldsEnum>>
    >
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type SiteConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<SiteEdge>
    readonly group: ReadonlyArray<SiteGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<Site>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type SiteConnection_distinctArgs = {
    field: SiteFieldsEnum
  }

  type SiteConnection_groupArgs = {
    field: SiteFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type SiteConnection_maxArgs = {
    field: SiteFieldsEnum
  }

  type SiteConnection_minArgs = {
    field: SiteFieldsEnum
  }

  type SiteConnection_sumArgs = {
    field: SiteFieldsEnum
  }

  type SiteEdge = {
    readonly next: Maybe<Site>
    readonly node: Site
    readonly previous: Maybe<Site>
  }

  type SiteFieldsEnum =
    | "buildTime"
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "flags.FAST_DEV"
    | "flags.GRAPHQL_TYPEGEN"
    | "host"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "jsxRuntime"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "pathPrefix"
    | "polyfill"
    | "port"
    | "siteMetadata.author"
    | "siteMetadata.defaultLanguage"
    | "siteMetadata.description"
    | "siteMetadata.editContentUrl"
    | "siteMetadata.siteUrl"
    | "siteMetadata.supportedLanguages"
    | "siteMetadata.title"
    | "siteMetadata.url"
    | "trailingSlash"

  type SiteFilterInput = {
    readonly buildTime: InputMaybe<DateQueryOperatorInput>
    readonly children: InputMaybe<NodeFilterListInput>
    readonly flags: InputMaybe<SiteFlagsFilterInput>
    readonly host: InputMaybe<StringQueryOperatorInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly jsxRuntime: InputMaybe<StringQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly pathPrefix: InputMaybe<StringQueryOperatorInput>
    readonly polyfill: InputMaybe<BooleanQueryOperatorInput>
    readonly port: InputMaybe<IntQueryOperatorInput>
    readonly siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>
    readonly trailingSlash: InputMaybe<StringQueryOperatorInput>
  }

  type SiteFlags = {
    readonly FAST_DEV: Maybe<Scalars["Boolean"]>
    readonly GRAPHQL_TYPEGEN: Maybe<Scalars["Boolean"]>
  }

  type SiteFlagsFilterInput = {
    readonly FAST_DEV: InputMaybe<BooleanQueryOperatorInput>
    readonly GRAPHQL_TYPEGEN: InputMaybe<BooleanQueryOperatorInput>
  }

  type SiteFunction = Node & {
    readonly absoluteCompiledFilePath: Scalars["String"]
    readonly children: ReadonlyArray<Node>
    readonly functionRoute: Scalars["String"]
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly matchPath: Maybe<Scalars["String"]>
    readonly originalAbsoluteFilePath: Scalars["String"]
    readonly originalRelativeFilePath: Scalars["String"]
    readonly parent: Maybe<Node>
    readonly pluginName: Scalars["String"]
    readonly relativeCompiledFilePath: Scalars["String"]
  }

  type SiteFunctionConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<SiteFunctionEdge>
    readonly group: ReadonlyArray<SiteFunctionGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<SiteFunction>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type SiteFunctionConnection_distinctArgs = {
    field: SiteFunctionFieldsEnum
  }

  type SiteFunctionConnection_groupArgs = {
    field: SiteFunctionFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type SiteFunctionConnection_maxArgs = {
    field: SiteFunctionFieldsEnum
  }

  type SiteFunctionConnection_minArgs = {
    field: SiteFunctionFieldsEnum
  }

  type SiteFunctionConnection_sumArgs = {
    field: SiteFunctionFieldsEnum
  }

  type SiteFunctionEdge = {
    readonly next: Maybe<SiteFunction>
    readonly node: SiteFunction
    readonly previous: Maybe<SiteFunction>
  }

  type SiteFunctionFieldsEnum =
    | "absoluteCompiledFilePath"
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "functionRoute"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "matchPath"
    | "originalAbsoluteFilePath"
    | "originalRelativeFilePath"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "pluginName"
    | "relativeCompiledFilePath"

  type SiteFunctionFilterInput = {
    readonly absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>
    readonly children: InputMaybe<NodeFilterListInput>
    readonly functionRoute: InputMaybe<StringQueryOperatorInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly matchPath: InputMaybe<StringQueryOperatorInput>
    readonly originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>
    readonly originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly pluginName: InputMaybe<StringQueryOperatorInput>
    readonly relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>
  }

  type SiteFunctionGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<SiteFunctionEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<SiteFunctionGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<SiteFunction>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type SiteFunctionGroupConnection_distinctArgs = {
    field: SiteFunctionFieldsEnum
  }

  type SiteFunctionGroupConnection_groupArgs = {
    field: SiteFunctionFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type SiteFunctionGroupConnection_maxArgs = {
    field: SiteFunctionFieldsEnum
  }

  type SiteFunctionGroupConnection_minArgs = {
    field: SiteFunctionFieldsEnum
  }

  type SiteFunctionGroupConnection_sumArgs = {
    field: SiteFunctionFieldsEnum
  }

  type SiteFunctionSortInput = {
    readonly fields: InputMaybe<
      ReadonlyArray<InputMaybe<SiteFunctionFieldsEnum>>
    >
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type SiteGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<SiteEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<SiteGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<Site>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type SiteGroupConnection_distinctArgs = {
    field: SiteFieldsEnum
  }

  type SiteGroupConnection_groupArgs = {
    field: SiteFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type SiteGroupConnection_maxArgs = {
    field: SiteFieldsEnum
  }

  type SiteGroupConnection_minArgs = {
    field: SiteFieldsEnum
  }

  type SiteGroupConnection_sumArgs = {
    field: SiteFieldsEnum
  }

  type SitePage = Node & {
    readonly children: ReadonlyArray<Node>
    readonly component: Scalars["String"]
    readonly componentChunkName: Scalars["String"]
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly internalComponentName: Scalars["String"]
    readonly matchPath: Maybe<Scalars["String"]>
    readonly pageContext: Maybe<Scalars["JSON"]>
    readonly parent: Maybe<Node>
    readonly path: Scalars["String"]
    readonly pluginCreator: Maybe<SitePlugin>
  }

  type SitePageConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<SitePageEdge>
    readonly group: ReadonlyArray<SitePageGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<SitePage>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type SitePageConnection_distinctArgs = {
    field: SitePageFieldsEnum
  }

  type SitePageConnection_groupArgs = {
    field: SitePageFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type SitePageConnection_maxArgs = {
    field: SitePageFieldsEnum
  }

  type SitePageConnection_minArgs = {
    field: SitePageFieldsEnum
  }

  type SitePageConnection_sumArgs = {
    field: SitePageFieldsEnum
  }

  type SitePageEdge = {
    readonly next: Maybe<SitePage>
    readonly node: SitePage
    readonly previous: Maybe<SitePage>
  }

  type SitePageFieldsEnum =
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "component"
    | "componentChunkName"
    | "id"
    | "internalComponentName"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "matchPath"
    | "pageContext"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "path"
    | "pluginCreator.browserAPIs"
    | "pluginCreator.children"
    | "pluginCreator.children.children"
    | "pluginCreator.children.children.children"
    | "pluginCreator.children.children.id"
    | "pluginCreator.children.id"
    | "pluginCreator.children.internal.content"
    | "pluginCreator.children.internal.contentDigest"
    | "pluginCreator.children.internal.description"
    | "pluginCreator.children.internal.fieldOwners"
    | "pluginCreator.children.internal.ignoreType"
    | "pluginCreator.children.internal.mediaType"
    | "pluginCreator.children.internal.owner"
    | "pluginCreator.children.internal.type"
    | "pluginCreator.children.parent.children"
    | "pluginCreator.children.parent.id"
    | "pluginCreator.id"
    | "pluginCreator.internal.content"
    | "pluginCreator.internal.contentDigest"
    | "pluginCreator.internal.description"
    | "pluginCreator.internal.fieldOwners"
    | "pluginCreator.internal.ignoreType"
    | "pluginCreator.internal.mediaType"
    | "pluginCreator.internal.owner"
    | "pluginCreator.internal.type"
    | "pluginCreator.name"
    | "pluginCreator.nodeAPIs"
    | "pluginCreator.packageJson"
    | "pluginCreator.parent.children"
    | "pluginCreator.parent.children.children"
    | "pluginCreator.parent.children.id"
    | "pluginCreator.parent.id"
    | "pluginCreator.parent.internal.content"
    | "pluginCreator.parent.internal.contentDigest"
    | "pluginCreator.parent.internal.description"
    | "pluginCreator.parent.internal.fieldOwners"
    | "pluginCreator.parent.internal.ignoreType"
    | "pluginCreator.parent.internal.mediaType"
    | "pluginCreator.parent.internal.owner"
    | "pluginCreator.parent.internal.type"
    | "pluginCreator.parent.parent.children"
    | "pluginCreator.parent.parent.id"
    | "pluginCreator.pluginFilepath"
    | "pluginCreator.pluginOptions"
    | "pluginCreator.resolve"
    | "pluginCreator.ssrAPIs"
    | "pluginCreator.version"

  type SitePageFilterInput = {
    readonly children: InputMaybe<NodeFilterListInput>
    readonly component: InputMaybe<StringQueryOperatorInput>
    readonly componentChunkName: InputMaybe<StringQueryOperatorInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly internalComponentName: InputMaybe<StringQueryOperatorInput>
    readonly matchPath: InputMaybe<StringQueryOperatorInput>
    readonly pageContext: InputMaybe<JSONQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly path: InputMaybe<StringQueryOperatorInput>
    readonly pluginCreator: InputMaybe<SitePluginFilterInput>
  }

  type SitePageGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<SitePageEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<SitePageGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<SitePage>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type SitePageGroupConnection_distinctArgs = {
    field: SitePageFieldsEnum
  }

  type SitePageGroupConnection_groupArgs = {
    field: SitePageFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type SitePageGroupConnection_maxArgs = {
    field: SitePageFieldsEnum
  }

  type SitePageGroupConnection_minArgs = {
    field: SitePageFieldsEnum
  }

  type SitePageGroupConnection_sumArgs = {
    field: SitePageFieldsEnum
  }

  type SitePageSortInput = {
    readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePageFieldsEnum>>>
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type SitePlugin = Node & {
    readonly browserAPIs: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly children: ReadonlyArray<Node>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly name: Maybe<Scalars["String"]>
    readonly nodeAPIs: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly packageJson: Maybe<Scalars["JSON"]>
    readonly parent: Maybe<Node>
    readonly pluginFilepath: Maybe<Scalars["String"]>
    readonly pluginOptions: Maybe<Scalars["JSON"]>
    readonly resolve: Maybe<Scalars["String"]>
    readonly ssrAPIs: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly version: Maybe<Scalars["String"]>
  }

  type SitePluginConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<SitePluginEdge>
    readonly group: ReadonlyArray<SitePluginGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<SitePlugin>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type SitePluginConnection_distinctArgs = {
    field: SitePluginFieldsEnum
  }

  type SitePluginConnection_groupArgs = {
    field: SitePluginFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type SitePluginConnection_maxArgs = {
    field: SitePluginFieldsEnum
  }

  type SitePluginConnection_minArgs = {
    field: SitePluginFieldsEnum
  }

  type SitePluginConnection_sumArgs = {
    field: SitePluginFieldsEnum
  }

  type SitePluginEdge = {
    readonly next: Maybe<SitePlugin>
    readonly node: SitePlugin
    readonly previous: Maybe<SitePlugin>
  }

  type SitePluginFieldsEnum =
    | "browserAPIs"
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "name"
    | "nodeAPIs"
    | "packageJson"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "pluginFilepath"
    | "pluginOptions"
    | "resolve"
    | "ssrAPIs"
    | "version"

  type SitePluginFilterInput = {
    readonly browserAPIs: InputMaybe<StringQueryOperatorInput>
    readonly children: InputMaybe<NodeFilterListInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly nodeAPIs: InputMaybe<StringQueryOperatorInput>
    readonly packageJson: InputMaybe<JSONQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly pluginFilepath: InputMaybe<StringQueryOperatorInput>
    readonly pluginOptions: InputMaybe<JSONQueryOperatorInput>
    readonly resolve: InputMaybe<StringQueryOperatorInput>
    readonly ssrAPIs: InputMaybe<StringQueryOperatorInput>
    readonly version: InputMaybe<StringQueryOperatorInput>
  }

  type SitePluginGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<SitePluginEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<SitePluginGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<SitePlugin>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type SitePluginGroupConnection_distinctArgs = {
    field: SitePluginFieldsEnum
  }

  type SitePluginGroupConnection_groupArgs = {
    field: SitePluginFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type SitePluginGroupConnection_maxArgs = {
    field: SitePluginFieldsEnum
  }

  type SitePluginGroupConnection_minArgs = {
    field: SitePluginFieldsEnum
  }

  type SitePluginGroupConnection_sumArgs = {
    field: SitePluginFieldsEnum
  }

  type SitePluginSortInput = {
    readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePluginFieldsEnum>>>
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type SiteSiteMetadata = {
    readonly author: Maybe<Scalars["String"]>
    readonly defaultLanguage: Maybe<Scalars["String"]>
    readonly description: Maybe<Scalars["String"]>
    readonly editContentUrl: Maybe<Scalars["String"]>
    readonly siteUrl: Maybe<Scalars["String"]>
    readonly supportedLanguages: Maybe<ReadonlyArray<Maybe<Scalars["String"]>>>
    readonly title: Maybe<Scalars["String"]>
    readonly url: Maybe<Scalars["String"]>
  }

  type SiteSiteMetadataFilterInput = {
    readonly author: InputMaybe<StringQueryOperatorInput>
    readonly defaultLanguage: InputMaybe<StringQueryOperatorInput>
    readonly description: InputMaybe<StringQueryOperatorInput>
    readonly editContentUrl: InputMaybe<StringQueryOperatorInput>
    readonly siteUrl: InputMaybe<StringQueryOperatorInput>
    readonly supportedLanguages: InputMaybe<StringQueryOperatorInput>
    readonly title: InputMaybe<StringQueryOperatorInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type SiteSortInput = {
    readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFieldsEnum>>>
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type SortOrderEnum = "ASC" | "DESC"

  type StringQueryOperatorInput = {
    readonly eq: InputMaybe<Scalars["String"]>
    readonly glob: InputMaybe<Scalars["String"]>
    readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars["String"]>>>
    readonly ne: InputMaybe<Scalars["String"]>
    readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars["String"]>>>
    readonly regex: InputMaybe<Scalars["String"]>
  }

  type TransformOptions = {
    readonly cropFocus: InputMaybe<ImageCropFocus>
    readonly duotone: InputMaybe<DuotoneGradient>
    readonly fit: InputMaybe<ImageFit>
    readonly grayscale: InputMaybe<Scalars["Boolean"]>
    readonly rotate: InputMaybe<Scalars["Int"]>
    readonly trim: InputMaybe<Scalars["Float"]>
  }

  type WalletsCsv = Node & {
    readonly brand_color: Maybe<Scalars["String"]>
    readonly children: ReadonlyArray<Node>
    readonly has_bank_withdrawals: Maybe<Scalars["String"]>
    readonly has_card_deposits: Maybe<Scalars["String"]>
    readonly has_defi_integrations: Maybe<Scalars["String"]>
    readonly has_desktop: Maybe<Scalars["String"]>
    readonly has_dex_integrations: Maybe<Scalars["String"]>
    readonly has_explore_dapps: Maybe<Scalars["String"]>
    readonly has_hardware: Maybe<Scalars["String"]>
    readonly has_high_volume_purchases: Maybe<Scalars["String"]>
    readonly has_limits_protection: Maybe<Scalars["String"]>
    readonly has_mobile: Maybe<Scalars["String"]>
    readonly has_multisig: Maybe<Scalars["String"]>
    readonly has_web: Maybe<Scalars["String"]>
    readonly id: Scalars["ID"]
    readonly internal: Internal
    readonly name: Maybe<Scalars["String"]>
    readonly parent: Maybe<Node>
    readonly url: Maybe<Scalars["String"]>
  }

  type WalletsCsvConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<WalletsCsvEdge>
    readonly group: ReadonlyArray<WalletsCsvGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<WalletsCsv>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type WalletsCsvConnection_distinctArgs = {
    field: WalletsCsvFieldsEnum
  }

  type WalletsCsvConnection_groupArgs = {
    field: WalletsCsvFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type WalletsCsvConnection_maxArgs = {
    field: WalletsCsvFieldsEnum
  }

  type WalletsCsvConnection_minArgs = {
    field: WalletsCsvFieldsEnum
  }

  type WalletsCsvConnection_sumArgs = {
    field: WalletsCsvFieldsEnum
  }

  type WalletsCsvEdge = {
    readonly next: Maybe<WalletsCsv>
    readonly node: WalletsCsv
    readonly previous: Maybe<WalletsCsv>
  }

  type WalletsCsvFieldsEnum =
    | "brand_color"
    | "children"
    | "children.children"
    | "children.children.children"
    | "children.children.children.children"
    | "children.children.children.id"
    | "children.children.id"
    | "children.children.internal.content"
    | "children.children.internal.contentDigest"
    | "children.children.internal.description"
    | "children.children.internal.fieldOwners"
    | "children.children.internal.ignoreType"
    | "children.children.internal.mediaType"
    | "children.children.internal.owner"
    | "children.children.internal.type"
    | "children.children.parent.children"
    | "children.children.parent.id"
    | "children.id"
    | "children.internal.content"
    | "children.internal.contentDigest"
    | "children.internal.description"
    | "children.internal.fieldOwners"
    | "children.internal.ignoreType"
    | "children.internal.mediaType"
    | "children.internal.owner"
    | "children.internal.type"
    | "children.parent.children"
    | "children.parent.children.children"
    | "children.parent.children.id"
    | "children.parent.id"
    | "children.parent.internal.content"
    | "children.parent.internal.contentDigest"
    | "children.parent.internal.description"
    | "children.parent.internal.fieldOwners"
    | "children.parent.internal.ignoreType"
    | "children.parent.internal.mediaType"
    | "children.parent.internal.owner"
    | "children.parent.internal.type"
    | "children.parent.parent.children"
    | "children.parent.parent.id"
    | "has_bank_withdrawals"
    | "has_card_deposits"
    | "has_defi_integrations"
    | "has_desktop"
    | "has_dex_integrations"
    | "has_explore_dapps"
    | "has_hardware"
    | "has_high_volume_purchases"
    | "has_limits_protection"
    | "has_mobile"
    | "has_multisig"
    | "has_web"
    | "id"
    | "internal.content"
    | "internal.contentDigest"
    | "internal.description"
    | "internal.fieldOwners"
    | "internal.ignoreType"
    | "internal.mediaType"
    | "internal.owner"
    | "internal.type"
    | "name"
    | "parent.children"
    | "parent.children.children"
    | "parent.children.children.children"
    | "parent.children.children.id"
    | "parent.children.id"
    | "parent.children.internal.content"
    | "parent.children.internal.contentDigest"
    | "parent.children.internal.description"
    | "parent.children.internal.fieldOwners"
    | "parent.children.internal.ignoreType"
    | "parent.children.internal.mediaType"
    | "parent.children.internal.owner"
    | "parent.children.internal.type"
    | "parent.children.parent.children"
    | "parent.children.parent.id"
    | "parent.id"
    | "parent.internal.content"
    | "parent.internal.contentDigest"
    | "parent.internal.description"
    | "parent.internal.fieldOwners"
    | "parent.internal.ignoreType"
    | "parent.internal.mediaType"
    | "parent.internal.owner"
    | "parent.internal.type"
    | "parent.parent.children"
    | "parent.parent.children.children"
    | "parent.parent.children.id"
    | "parent.parent.id"
    | "parent.parent.internal.content"
    | "parent.parent.internal.contentDigest"
    | "parent.parent.internal.description"
    | "parent.parent.internal.fieldOwners"
    | "parent.parent.internal.ignoreType"
    | "parent.parent.internal.mediaType"
    | "parent.parent.internal.owner"
    | "parent.parent.internal.type"
    | "parent.parent.parent.children"
    | "parent.parent.parent.id"
    | "url"

  type WalletsCsvFilterInput = {
    readonly brand_color: InputMaybe<StringQueryOperatorInput>
    readonly children: InputMaybe<NodeFilterListInput>
    readonly has_bank_withdrawals: InputMaybe<StringQueryOperatorInput>
    readonly has_card_deposits: InputMaybe<StringQueryOperatorInput>
    readonly has_defi_integrations: InputMaybe<StringQueryOperatorInput>
    readonly has_desktop: InputMaybe<StringQueryOperatorInput>
    readonly has_dex_integrations: InputMaybe<StringQueryOperatorInput>
    readonly has_explore_dapps: InputMaybe<StringQueryOperatorInput>
    readonly has_hardware: InputMaybe<StringQueryOperatorInput>
    readonly has_high_volume_purchases: InputMaybe<StringQueryOperatorInput>
    readonly has_limits_protection: InputMaybe<StringQueryOperatorInput>
    readonly has_mobile: InputMaybe<StringQueryOperatorInput>
    readonly has_multisig: InputMaybe<StringQueryOperatorInput>
    readonly has_web: InputMaybe<StringQueryOperatorInput>
    readonly id: InputMaybe<StringQueryOperatorInput>
    readonly internal: InputMaybe<InternalFilterInput>
    readonly name: InputMaybe<StringQueryOperatorInput>
    readonly parent: InputMaybe<NodeFilterInput>
    readonly url: InputMaybe<StringQueryOperatorInput>
  }

  type WalletsCsvFilterListInput = {
    readonly elemMatch: InputMaybe<WalletsCsvFilterInput>
  }

  type WalletsCsvGroupConnection = {
    readonly distinct: ReadonlyArray<Scalars["String"]>
    readonly edges: ReadonlyArray<WalletsCsvEdge>
    readonly field: Scalars["String"]
    readonly fieldValue: Maybe<Scalars["String"]>
    readonly group: ReadonlyArray<WalletsCsvGroupConnection>
    readonly max: Maybe<Scalars["Float"]>
    readonly min: Maybe<Scalars["Float"]>
    readonly nodes: ReadonlyArray<WalletsCsv>
    readonly pageInfo: PageInfo
    readonly sum: Maybe<Scalars["Float"]>
    readonly totalCount: Scalars["Int"]
  }

  type WalletsCsvGroupConnection_distinctArgs = {
    field: WalletsCsvFieldsEnum
  }

  type WalletsCsvGroupConnection_groupArgs = {
    field: WalletsCsvFieldsEnum
    limit: InputMaybe<Scalars["Int"]>
    skip: InputMaybe<Scalars["Int"]>
  }

  type WalletsCsvGroupConnection_maxArgs = {
    field: WalletsCsvFieldsEnum
  }

  type WalletsCsvGroupConnection_minArgs = {
    field: WalletsCsvFieldsEnum
  }

  type WalletsCsvGroupConnection_sumArgs = {
    field: WalletsCsvFieldsEnum
  }

  type WalletsCsvSortInput = {
    readonly fields: InputMaybe<ReadonlyArray<InputMaybe<WalletsCsvFieldsEnum>>>
    readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>
  }

  type WebPOptions = {
    readonly quality: InputMaybe<Scalars["Int"]>
  }

  type FooterQueryQueryVariables = Exact<{ [key: string]: never }>

  type FooterQueryQuery = {
    readonly allSiteBuildMetadata: {
      readonly edges: ReadonlyArray<{
        readonly node: { readonly buildTime: string | null }
      }>
    }
  }

  type IndexPageQueryVariables = Exact<{ [key: string]: never }>

  type IndexPageQuery = {
    readonly hero: {
      readonly childImageSharp: {
        readonly gatsbyImageData: Record<string, unknown>
      } | null
    } | null
    readonly ethereum: {
      readonly childImageSharp: {
        readonly gatsbyImageData: Record<string, unknown>
      } | null
    } | null
    readonly enterprise: {
      readonly childImageSharp: {
        readonly gatsbyImageData: Record<string, unknown>
      } | null
    } | null
    readonly dogefixed: {
      readonly childImageSharp: {
        readonly gatsbyImageData: Record<string, unknown>
      } | null
    } | null
    readonly robotfixed: {
      readonly childImageSharp: {
        readonly gatsbyImageData: Record<string, unknown>
      } | null
    } | null
    readonly ethfixed: {
      readonly childImageSharp: {
        readonly gatsbyImageData: Record<string, unknown>
      } | null
    } | null
    readonly devfixed: {
      readonly childImageSharp: {
        readonly gatsbyImageData: Record<string, unknown>
      } | null
    } | null
    readonly future: {
      readonly childImageSharp: {
        readonly gatsbyImageData: Record<string, unknown>
      } | null
    } | null
    readonly impact: {
      readonly childImageSharp: {
        readonly gatsbyImageData: Record<string, unknown>
      } | null
    } | null
    readonly finance: {
      readonly childImageSharp: {
        readonly gatsbyImageData: Record<string, unknown>
      } | null
    } | null
    readonly hackathon: {
      readonly childImageSharp: {
        readonly gatsbyImageData: Record<string, unknown>
      } | null
    } | null
    readonly infrastructure: {
      readonly childImageSharp: {
        readonly gatsbyImageData: Record<string, unknown>
      } | null
    } | null
    readonly infrastructurefixed: {
      readonly childImageSharp: {
        readonly gatsbyImageData: Record<string, unknown>
      } | null
    } | null
    readonly merge: {
      readonly childImageSharp: {
        readonly gatsbyImageData: Record<string, unknown>
      } | null
    } | null
  }

  type DocsPageQueryQueryVariables = Exact<{
    relativePath: InputMaybe<Scalars["String"]>
  }>

  type DocsPageQueryQuery = {
    readonly siteData: {
      readonly siteMetadata: { readonly editContentUrl: string | null } | null
    } | null
    readonly pageData: {
      readonly body: string
      readonly tableOfContents: Record<string, unknown> | null
      readonly fields: { readonly slug: string | null } | null
      readonly frontmatter: {
        readonly title: string | null
        readonly description: string | null
        readonly lang: string | null
        readonly incomplete: boolean | null
        readonly sidebar: boolean | null
        readonly sidebarDepth: number | null
        readonly isOutdated: boolean | null
      } | null
    } | null
  }

  type JobQueryQueryVariables = Exact<{
    relativePath: InputMaybe<Scalars["String"]>
  }>

  type JobQueryQuery = {
    readonly mdx: {
      readonly body: string
      readonly tableOfContents: Record<string, unknown> | null
      readonly fields: { readonly slug: string | null } | null
      readonly frontmatter: {
        readonly title: string | null
        readonly description: string | null
        readonly sidebar: boolean | null
        readonly sidebarDepth: number | null
        readonly position: string | null
        readonly location: string | null
        readonly compensation: string | null
        readonly type: string | null
        readonly link: string | null
        readonly image: {
          readonly childImageSharp: {
            readonly gatsbyImageData: Record<string, unknown>
          } | null
        } | null
      } | null
      readonly parent:
        | {
            readonly mtime: string
            readonly fields: { readonly gitLogLatestDate: string | null } | null
          }
        | {}
        | null
    } | null
  }

  type StakingPageQueryQueryVariables = Exact<{
    relativePath: InputMaybe<Scalars["String"]>
  }>

  type StakingPageQueryQuery = {
    readonly siteData: {
      readonly siteMetadata: { readonly editContentUrl: string | null } | null
    } | null
    readonly pageData: {
      readonly body: string
      readonly tableOfContents: Record<string, unknown> | null
      readonly fields: { readonly slug: string | null } | null
      readonly frontmatter: {
        readonly title: string | null
        readonly description: string | null
        readonly lang: string | null
        readonly sidebar: boolean | null
        readonly emoji: string | null
        readonly sidebarDepth: number | null
        readonly summaryPoints: ReadonlyArray<string | null> | null
        readonly alt: string | null
        readonly image: {
          readonly childImageSharp: {
            readonly gatsbyImageData: Record<string, unknown>
          } | null
        } | null
      } | null
      readonly parent:
        | {
            readonly mtime: string
            readonly fields: { readonly gitLogLatestDate: string | null } | null
          }
        | {}
        | null
    } | null
  }

  type StaticPageQueryQueryVariables = Exact<{
    relativePath: InputMaybe<Scalars["String"]>
  }>

  type StaticPageQueryQuery = {
    readonly siteData: {
      readonly siteMetadata: { readonly editContentUrl: string | null } | null
    } | null
    readonly pageData: {
      readonly body: string
      readonly tableOfContents: Record<string, unknown> | null
      readonly fields: { readonly slug: string | null } | null
      readonly frontmatter: {
        readonly title: string | null
        readonly description: string | null
        readonly lang: string | null
        readonly sidebar: boolean | null
        readonly sidebarDepth: number | null
        readonly isOutdated: boolean | null
      } | null
      readonly parent:
        | {
            readonly mtime: string
            readonly fields: { readonly gitLogLatestDate: string | null } | null
          }
        | {}
        | null
    } | null
  }

  type TutorialPageQueryQueryVariables = Exact<{
    relativePath: InputMaybe<Scalars["String"]>
  }>

  type TutorialPageQueryQuery = {
    readonly siteData: {
      readonly siteMetadata: { readonly editContentUrl: string | null } | null
    } | null
    readonly pageData: {
      readonly body: string
      readonly tableOfContents: Record<string, unknown> | null
      readonly fields: {
        readonly slug: string | null
        readonly readingTime: { readonly minutes: number | null } | null
      } | null
      readonly frontmatter: {
        readonly title: string | null
        readonly description: string | null
        readonly lang: string | null
        readonly tags: ReadonlyArray<string | null> | null
        readonly author: string | null
        readonly source: string | null
        readonly sourceUrl: string | null
        readonly skill: string | null
        readonly published: string | null
        readonly sidebar: boolean | null
        readonly sidebarDepth: number | null
        readonly address: string | null
        readonly isOutdated: boolean | null
      } | null
    } | null
  }

  type UpgradePageQueryQueryVariables = Exact<{
    relativePath: InputMaybe<Scalars["String"]>
  }>

  type UpgradePageQueryQuery = {
    readonly mdx: {
      readonly body: string
      readonly tableOfContents: Record<string, unknown> | null
      readonly fields: { readonly slug: string | null } | null
      readonly frontmatter: {
        readonly title: string | null
        readonly description: string | null
        readonly lang: string | null
        readonly sidebar: boolean | null
        readonly sidebarDepth: number | null
        readonly summaryPoint1: string
        readonly summaryPoint2: string
        readonly summaryPoint3: string
        readonly summaryPoint4: string
        readonly isOutdated: boolean | null
        readonly image: {
          readonly childImageSharp: {
            readonly gatsbyImageData: Record<string, unknown>
          } | null
        } | null
      } | null
      readonly parent:
        | {
            readonly mtime: string
            readonly fields: { readonly gitLogLatestDate: string | null } | null
          }
        | {}
        | null
    } | null
  }

  type UseCasePageQueryQueryVariables = Exact<{
    relativePath: InputMaybe<Scalars["String"]>
  }>

  type UseCasePageQueryQuery = {
    readonly siteData: {
      readonly siteMetadata: { readonly editContentUrl: string | null } | null
    } | null
    readonly pageData: {
      readonly body: string
      readonly tableOfContents: Record<string, unknown> | null
      readonly fields: { readonly slug: string | null } | null
      readonly frontmatter: {
        readonly title: string | null
        readonly description: string | null
        readonly lang: string | null
        readonly sidebar: boolean | null
        readonly emoji: string | null
        readonly sidebarDepth: number | null
        readonly summaryPoint1: string
        readonly summaryPoint2: string
        readonly summaryPoint3: string
        readonly alt: string | null
        readonly isOutdated: boolean | null
        readonly image: {
          readonly childImageSharp: {
            readonly gatsbyImageData: Record<string, unknown>
          } | null
        } | null
      } | null
      readonly parent:
        | {
            readonly mtime: string
            readonly fields: { readonly gitLogLatestDate: string | null } | null
          }
        | {}
        | null
    } | null
  }

  type AllMdxQueryVariables = Exact<{ [key: string]: never }>

  type AllMdxQuery = {
    readonly allMdx: {
      readonly edges: ReadonlyArray<{
        readonly node: {
          readonly fields: {
            readonly isOutdated: boolean | null
            readonly slug: string | null
            readonly relativePath: string | null
          } | null
          readonly frontmatter: {
            readonly lang: string | null
            readonly template: string | null
          } | null
        }
      }>
    }
  }
}
